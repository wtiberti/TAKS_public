<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="68:BlinkToRadioAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f006ec27840"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f006ee9e870"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f006ee9e870"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f006ecc8b10"/></to>
    </wire>
    <wire loc="69:BlinkToRadioAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f006ec27e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f006ecac330"/></to>
    </wire>
    <wire loc="51:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f006ecac330"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f006ecaabc0"/></to>
    </wire>
    <wire loc="70:BlinkToRadioAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f006ec23220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006eb3e750"/></to>
    </wire>
    <wire loc="52:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006eb3e750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f006eb38d90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:BlinkToRadioAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006eb997a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006deaec30"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006deaec30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006d56dd10"/></to>
    </wire>
    <wire loc="72:BlinkToRadioAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006eb8a7e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006dead8b0"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006dead8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006d56c970"/></to>
    </wire>
    <wire loc="73:BlinkToRadioAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f006eb77a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f006e93aaa0"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f006e93aaa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f006e904140"/></to>
    </wire>
    <wire loc="74:BlinkToRadioAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006eb7f8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006deae020"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006deae020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006d56d100"/></to>
    </wire>
    <wire loc="75:BlinkToRadioAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006eb7a180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006dea2910"/></to>
    </wire>
    <wire loc="54:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006dea2910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e936e40"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:BlinkToRadioAppC.nc">
      <from><interface-ref name="TAKS" scoped="" ref="0x7f006eb6a940"/></from>
      <to><interface-ref name="TAKS" scoped="" ref="0x7f006de9de60"/></to>
    </wire>
    <wire loc="9:../TAKSC.nc">
      <from><interface-ref name="TAKS" scoped="" ref="0x7f006de9de60"/></from>
      <to><interface-ref name="TAKS" scoped="" ref="0x7f006de992b0"/></to>
    </wire>
    <wire loc="49:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006dc4b210"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f006dd8cd80"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f006dd87ce0"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006ddfb9e0"/></to>
    </wire>
    <wire loc="45:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006de23850"/></to>
    </wire>
    <wire loc="96:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006d5e90e0"/></to>
    </wire>
    <wire loc="120:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f006e2f4940"/></to>
    </wire>
    <wire loc="52:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006e4226e0"/></to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f006d6c7c90"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006d6f40e0"/></to>
    </wire>
    <wire loc="96:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006d7b6d70"/></to>
    </wire>
    <wire loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006d845810"/></to>
    </wire>
    <wire loc="53:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006eb309b0"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f006ecc5310"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f006f03b020"/></to>
    </wire>
    <wire loc="53:/home/wtiberti/WSN/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f006f03b020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f006eeef680"/></to>
    </wire>
    <wire loc="78:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f006ecc5d30"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f006e1e9680"/></to>
    </wire>
    <wire loc="123:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f006ecc5d30"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f006e2f6db0"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f006ecc5d30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006ee9fdc0"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f006ee9fdc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006ee8b360"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f006ecc4460"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></to>
    </wire>
    <wire loc="26:/home/wtiberti/WSN/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f006ee98020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006dc70c60"/></to>
    </wire>
    <wire loc="26:/home/wtiberti/WSN/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f006ee98020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006e03fb50"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f006ee8d1d0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f006ece5690"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f006ee93550"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f006ee8b9d0"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f006ee893a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006ece5020"/></to>
    </wire>
    <wire loc="54:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f006ee8ab50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006ec84920"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f006ee8ab50"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f006ee92e40"/></to>
    </wire>
    <wire loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f006ee92e40"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f006ee76990"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f006ee77530"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f006ee98020"/></to>
    </wire>
    <wire loc="48:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f006ee72020"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f006ee62670"/></to>
    </wire>
    <wire loc="141:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f006ee62670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f006edd6a80"/></to>
    </wire>
    <wire loc="49:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f006ee71370"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f006ee77530"/></to>
    </wire>
    <wire loc="191:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f006ee2b350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006ed3c160"/></to>
    </wire>
    <wire loc="165:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f006ee48b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f006edabe60"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f006edabe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dac6e20"/></to>
    </wire>
    <wire loc="176:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f006ee3c990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f006ed995d0"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f006ed995d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da543f0"/></to>
    </wire>
    <wire loc="185:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f006ee31350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f006ed898f0"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f006ed898f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9e93f0"/></to>
    </wire>
    <wire loc="196:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f006ee25670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006ed216d0"/></to>
    </wire>
    <wire loc="143:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f006ee60cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f006edd3da0"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f006edd3da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dbf69b0"/></to>
    </wire>
    <wire loc="183:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f006ee34cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f006ed8c5d0"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f006ed8c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9f0e20"/></to>
    </wire>
    <wire loc="146:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f006ee5d350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f006edcb7a0"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f006edcb7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db9fa60"/></to>
    </wire>
    <wire loc="157:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f006ee50350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f006edb9da0"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f006edb9da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db2d0a0"/></to>
    </wire>
    <wire loc="168:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f006ee44350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f006eda7440"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f006eda7440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dabc6d0"/></to>
    </wire>
    <wire loc="179:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f006ee37350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f006ed95a80"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f006ed95a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da4be20"/></to>
    </wire>
    <wire loc="138:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f006ee66cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f006edd95d0"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f006edd95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dc079b0"/></to>
    </wire>
    <wire loc="149:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f006ee5acb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f006edc7c10"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f006edc7c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db953f0"/></to>
    </wire>
    <wire loc="160:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f006ee4dcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f006edb5440"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f006edb5440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db249b0"/></to>
    </wire>
    <wire loc="171:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f006ee41cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f006eda48f0"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f006eda48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dab10a0"/></to>
    </wire>
    <wire loc="188:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f006ee2ecb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f006ed86da0"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f006ed86da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9e0e20"/></to>
    </wire>
    <wire loc="194:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f006ee27020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006ed2c160"/></to>
    </wire>
    <wire loc="174:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f006ee3e350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f006ed9b2b0"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f006ed9b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da5be20"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f006edd6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dbfd3f0"/></to>
    </wire>
    <wire loc="152:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f006ee55670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f006edc32b0"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f006edc32b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db8be20"/></to>
    </wire>
    <wire loc="192:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f006ee2a990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006ed37c90"/></to>
    </wire>
    <wire loc="155:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f006ee53cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f006edbba20"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f006edbba20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db34c90"/></to>
    </wire>
    <wire loc="166:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f006ee47e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f006eda9020"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f006eda9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dac20a0"/></to>
    </wire>
    <wire loc="177:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f006ee3acb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f006ed98760"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f006ed98760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da516d0"/></to>
    </wire>
    <wire loc="186:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f006ee30670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f006ed88a80"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f006ed88a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9e66d0"/></to>
    </wire>
    <wire loc="144:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f006ee5e020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f006edd1020"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f006edd1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dbf3e20"/></to>
    </wire>
    <wire loc="147:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f006ee5c670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f006edca8f0"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f006edca8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db9ce20"/></to>
    </wire>
    <wire loc="158:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f006ee4f670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f006edb7020"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f006edb7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db2a3f0"/></to>
    </wire>
    <wire loc="169:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f006ee43670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f006eda65d0"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f006eda65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dab99b0"/></to>
    </wire>
    <wire loc="180:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f006ee36670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f006ed94c10"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f006ed94c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da470a0"/></to>
    </wire>
    <wire loc="139:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f006ee64020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f006edd8760"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f006edd8760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dc04e20"/></to>
    </wire>
    <wire loc="150:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f006ee57020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f006edc6da0"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f006edc6da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db926d0"/></to>
    </wire>
    <wire loc="161:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f006ee4b020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f006edb45d0"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f006edb45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db21e20"/></to>
    </wire>
    <wire loc="189:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f006ee2c020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f006ed84020"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f006ed84020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9dc0a0"/></to>
    </wire>
    <wire loc="164:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f006ee49670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f006edacd30"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f006edacd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dac9c90"/></to>
    </wire>
    <wire loc="175:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f006ee3d670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f006ed9a440"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f006ed9a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da570a0"/></to>
    </wire>
    <wire loc="184:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f006ee32020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f006ed8a760"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f006ed8a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9ec0a0"/></to>
    </wire>
    <wire loc="195:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f006ee26350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006ed27c90"/></to>
    </wire>
    <wire loc="142:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f006ee61990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f006edd5c10"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f006edd5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dbfa6d0"/></to>
    </wire>
    <wire loc="153:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f006ee54990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f006edc2440"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f006edc2440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db870a0"/></to>
    </wire>
    <wire loc="182:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f006ee35990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f006ed8d3f0"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f006ed8d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9f3c90"/></to>
    </wire>
    <wire loc="156:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f006ee51020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f006edbac10"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f006edbac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db31e20"/></to>
    </wire>
    <wire loc="167:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f006ee45060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f006eda82b0"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f006eda82b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dabf3f0"/></to>
    </wire>
    <wire loc="178:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f006ee38020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f006ed968f0"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f006ed968f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da4e9b0"/></to>
    </wire>
    <wire loc="187:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f006ee2f990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f006ed87c10"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f006ed87c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006d9e39b0"/></to>
    </wire>
    <wire loc="137:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f006ee75a80"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f006edda3f0"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f006edda3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dc146d0"/></to>
    </wire>
    <wire loc="148:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f006ee5b990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f006edc9a80"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f006edc9a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db980a0"/></to>
    </wire>
    <wire loc="159:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f006ee4e990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f006edb62b0"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f006edb62b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db276d0"/></to>
    </wire>
    <wire loc="170:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f006ee42990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f006eda5760"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f006eda5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dab6e20"/></to>
    </wire>
    <wire loc="193:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f006ee29cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006ed316d0"/></to>
    </wire>
    <wire loc="173:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f006ee3f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f006ed9c020"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f006ed9c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006da5ec90"/></to>
    </wire>
    <wire loc="162:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f006ee4a350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f006edb3760"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f006edb3760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db1c0a0"/></to>
    </wire>
    <wire loc="140:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f006ee63350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f006edd78f0"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f006edd78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006dc000a0"/></to>
    </wire>
    <wire loc="151:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f006ee56350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f006edc4020"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f006edc4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f006db8f9b0"/></to>
    </wire>
    <wire loc="54:/home/wtiberti/WSN/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006eeee5c0"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f006eeeaac0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f006ef060c0"/></to>
    </wire>
    <wire loc="92:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f006eec38c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f006ea6da70"/></to>
    </wire>
    <wire loc="53:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f006ec84920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006ecaa5c0"/></to>
    </wire>
    <wire loc="54:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f006eca83c0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f006ec890f0"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f006ec890f0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f006ee64020"/></to>
    </wire>
    <wire loc="55:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f006eca7660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f006ec88380"/></to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f006ec88380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f006ee66cb0"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f006eca6980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f006ec876a0"/></to>
    </wire>
    <wire loc="58:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f006ec876a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f006ee75a80"/></to>
    </wire>
    <wire loc="54:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f006eb38d90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f006eb2d790"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f006eb2d790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006e961bc0"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f006eb309b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006eb22930"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006e961bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006d8ad0d0"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f006eb261a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f006e951020"/></to>
    </wire>
    <wire loc="35:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f006eb22930"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006ea0f080"/></to>
    </wire>
    <wire loc="62:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f006e959180"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006e9e0cf0"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f006e9da1d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f006eb16790"/></to>
    </wire>
    <wire loc="36:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f006eb16790"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f006ea0f890"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006e947300"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f006eb12020"/></to>
    </wire>
    <wire loc="37:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f006eb12020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006ea0bbc0"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006ea0bbc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006d8f8650"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f006ea0f080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006d906b00"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f006ea0f890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f006d8fc330"/></to>
    </wire>
    <wire loc="74:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006d8f6a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006ea8ac70"/></to>
    </wire>
    <wire loc="94:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006ea8ac70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006ea77020"/></to>
    </wire>
    <wire loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f006d8f1c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f006ea81020"/></to>
    </wire>
    <wire loc="95:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f006ea81020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f006ea722b0"/></to>
    </wire>
    <wire loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006d8ef020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f006ea80520"/></to>
    </wire>
    <wire loc="96:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006ea80520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f006ea716b0"/></to>
    </wire>
    <wire loc="77:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f006d8eb2c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f006ea7da40"/></to>
    </wire>
    <wire loc="97:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f006ea7da40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f006ea6c230"/></to>
    </wire>
    <wire loc="74:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f006e9d6490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f006d8a75f0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f006e959180"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f006d8a18b0"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f006e954450"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f006d8a2890"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f006ee93550"/></to>
    </wire>
    <wire loc="153:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f006d8a0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f006e904140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f006e8e09a0"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f006e9321d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f006e901bb0"/></to>
    </wire>
    <wire loc="80:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f006e901bb0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f006e8d9600"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006e9327e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006e8ff2b0"/></to>
    </wire>
    <wire loc="82:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006e8ff2b0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f006e8d73d0"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006e937b10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006e9031d0"/></to>
    </wire>
    <wire loc="77:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006e9031d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006e8ddb10"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f006e934a40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f006e901020"/></to>
    </wire>
    <wire loc="79:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f006e901020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f006e8daa40"/></to>
    </wire>
    <wire loc="76:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e91f2a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e8fc320"/></to>
    </wire>
    <wire loc="86:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e8fc320"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e8be4b0"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e936e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e9023f0"/></to>
    </wire>
    <wire loc="78:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e9023f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e8dce40"/></to>
    </wire>
    <wire loc="75:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e929810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e8fd800"/></to>
    </wire>
    <wire loc="85:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e8fd800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e8c7a10"/></to>
    </wire>
    <wire loc="77:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f006e918670"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f006e8fce10"/></to>
    </wire>
    <wire loc="87:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f006e8fce10"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f006e8bd020"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006e931470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006e8fe020"/></to>
    </wire>
    <wire loc="83:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006e8fe020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006e8d9c30"/></to>
    </wire>
    <wire loc="78:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f006e915650"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f006e8fbad0"/></to>
    </wire>
    <wire loc="88:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f006e8fbad0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f006e8bdcb0"/></to>
    </wire>
    <wire loc="81:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f006e90c7c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e8e92b0"/></to>
    </wire>
    <wire loc="97:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e8e92b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e8af550"/></to>
    </wire>
    <wire loc="80:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e90b880"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e8e43f0"/></to>
    </wire>
    <wire loc="96:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e8e43f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e8ac660"/></to>
    </wire>
    <wire loc="254:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f006e8e09a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f006e4f6780"/></to>
    </wire>
    <wire loc="92:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e8f0a00"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e8b53b0"/></to>
    </wire>
    <wire loc="345:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e8b53b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e3136e0"/></to>
    </wire>
    <wire loc="139:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f006e8d9600"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f006e6d4740"/></to>
    </wire>
    <wire loc="141:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f006e8d73d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006e6d7bd0"/></to>
    </wire>
    <wire loc="136:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006e8ddb10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006e6d69e0"/></to>
    </wire>
    <wire loc="138:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f006e8daa40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f006e6d4020"/></to>
    </wire>
    <wire loc="91:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e8f2400"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e8b9e80"/></to>
    </wire>
    <wire loc="343:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e8b9e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e316210"/></to>
    </wire>
    <wire loc="255:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e8be4b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e4e1e80"/></to>
    </wire>
    <wire loc="137:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e8dce40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e6d5850"/></to>
    </wire>
    <wire loc="309:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e8af550"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e3591c0"/></to>
    </wire>
    <wire loc="95:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e8e7d80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e8b1020"/></to>
    </wire>
    <wire loc="347:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e8b1020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e30ad70"/></to>
    </wire>
    <wire loc="90:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e8f4df0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e8bc8e0"/></to>
    </wire>
    <wire loc="344:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e8bc8e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e30c200"/></to>
    </wire>
    <wire loc="288:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e8c7a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e3dfb60"/></to>
    </wire>
    <wire loc="226:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f006e8bd020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f006e5013d0"/></to>
    </wire>
    <wire loc="140:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006e8d9c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006e6d8550"/></to>
    </wire>
    <wire loc="264:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f006e8bdcb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f006e46a5f0"/></to>
    </wire>
    <wire loc="93:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e8e7520"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e8b2710"/></to>
    </wire>
    <wire loc="346:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e8b2710"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e30a510"/></to>
    </wire>
    <wire loc="310:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e8ac660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e35d210"/></to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f006e4f6780"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f006e4df9c0"/></to>
    </wire>
    <wire loc="89:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e3136e0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e2eedc0"/></to>
    </wire>
    <wire loc="172:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f006e8d44b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f006e623d30"/></to>
    </wire>
    <wire loc="160:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f006e8ce580"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f006e657390"/></to>
    </wire>
    <wire loc="98:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f006e657390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f006d7b2490"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f006e6d4740"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f006d8068b0"/></to>
    </wire>
    <wire loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e35d210"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006d63c5e0"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006e6d69e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006d808b40"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f006e6d4020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f006d806190"/></to>
    </wire>
    <wire loc="173:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006e8bf760"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006e54cdd0"/></to>
    </wire>
    <wire loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006e54cdd0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006d7492e0"/></to>
    </wire>
    <wire loc="174:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f006e8c8bb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006e652d90"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e4e1e80"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f006d6cfb40"/></to>
    </wire>
    <wire loc="86:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e316210"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e2f0870"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e6d5850"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006d8079e0"/></to>
    </wire>
    <wire loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006e6d7bd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006d809d60"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e3591c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006d6384b0"/></to>
    </wire>
    <wire loc="82:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e30ad70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e1ee060"/></to>
    </wire>
    <wire loc="95:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e30c200"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e2e7960"/></to>
    </wire>
    <wire loc="170:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f006e8d5020"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f006e624a10"/></to>
    </wire>
    <wire loc="117:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f006e5013d0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f006e4fd2f0"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006e6d8550"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006d80a720"/></to>
    </wire>
    <wire loc="171:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f006e8d5d50"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f006e623760"/></to>
    </wire>
    <wire loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f006e46a5f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f006d6c4270"/></to>
    </wire>
    <wire loc="97:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e30a510"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e2e4ca0"/></to>
    </wire>
    <wire loc="116:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e80f470"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e54fdc0"/></to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e54fdc0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006d74c020"/></to>
    </wire>
    <wire loc="117:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e808400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e77f480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f006e80cdd0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e3591c0"/></to>
    </wire>
    <wire loc="119:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f006e803e20"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e3172e0"/></to>
    </wire>
    <wire loc="80:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e3172e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e2f17f0"/></to>
    </wire>
    <wire loc="124:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f006e77d020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f006e307110"/></to>
    </wire>
    <wire loc="101:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f006e307110"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f006e1f3c80"/></to>
    </wire>
    <wire loc="125:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f006e77e140"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f006e8a63c0"/></to>
    </wire>
    <wire loc="131:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e6d1a50"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f006e82cb70"/></to>
    </wire>
    <wire loc="132:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e6d2a50"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f006e6caa10"/></to>
    </wire>
    <wire loc="133:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e6d1440"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f006e5e65d0"/></to>
    </wire>
    <wire loc="134:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006e6d4dd0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f006e5e6be0"/></to>
    </wire>
    <wire loc="149:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f006e6c9d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f006e657390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e6c94a0"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f006e5e7c70"/></to>
    </wire>
    <wire loc="165:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e621390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e54fdc0"/></to>
    </wire>
    <wire loc="166:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e61d120"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f006e616020"/></to>
    </wire>
    <wire loc="167:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e61da50"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f006e616950"/></to>
    </wire>
    <wire loc="168:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e61e470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006e5e7020"/></to>
    </wire>
    <wire loc="182:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e5e5950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006e515490"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f006e515490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006d6f5020"/></to>
    </wire>
    <wire loc="183:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e5e42b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e54acd0"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e54acd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006d7472b0"/></to>
    </wire>
    <wire loc="184:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006e5e48c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e54a080"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e54a080"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006d748590"/></to>
    </wire>
    <wire loc="190:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006e549390"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e500020"/></to>
    </wire>
    <wire loc="115:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e500020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f006e4ffc60"/></to>
    </wire>
    <wire loc="194:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e547020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e502de0"/></to>
    </wire>
    <wire loc="114:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e502de0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e4ff650"/></to>
    </wire>
    <wire loc="217:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e5137c0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f006e841750"/></to>
    </wire>
    <wire loc="218:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e514600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006e5024b0"/></to>
    </wire>
    <wire loc="113:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f006e5024b0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f006e500cd0"/></to>
    </wire>
    <wire loc="219:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f006e512270"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f006e894cb0"/></to>
    </wire>
    <wire loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f006e894cb0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f006d845de0"/></to>
    </wire>
    <wire loc="220:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006e512e80"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006e859aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e4fe8b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e3dfb60"/></to>
    </wire>
    <wire loc="232:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e500cd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006e4e22b0"/></to>
    </wire>
    <wire loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f006e4e22b0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f006e4de5d0"/></to>
    </wire>
    <wire loc="233:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e4ff650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e4e2be0"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e4e2be0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e4dd020"/></to>
    </wire>
    <wire loc="234:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006e4ffc60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e4e1270"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e4e1270"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f006e4dd630"/></to>
    </wire>
    <wire loc="250:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f006e4df9c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f006e46ca10"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f006e46ca10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f006d6c71d0"/></to>
    </wire>
    <wire loc="251:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e4de5d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006e46b5d0"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f006e46b5d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006d6c6330"/></to>
    </wire>
    <wire loc="252:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e4dd020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006e46a020"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f006e46a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f006d6c6c60"/></to>
    </wire>
    <wire loc="253:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006e4dd630"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e357d90"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e357d90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006d6341d0"/></to>
    </wire>
    <wire loc="260:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f006e4688b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006e412740"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f006e412740"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006d68ac40"/></to>
    </wire>
    <wire loc="261:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f006e467270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e515d80"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f006e515d80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006d6f5910"/></to>
    </wire>
    <wire loc="262:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f006e469aa0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f006e32b840"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f006e32b840"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f006e325d40"/></to>
    </wire>
    <wire loc="263:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f006e469020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f006e8a63c0"/></to>
    </wire>
    <wire loc="268:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e513020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e411060"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f006e411060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006d687590"/></to>
    </wire>
    <wire loc="277:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e40f760"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f006e83d020"/></to>
    </wire>
    <wire loc="278:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e411860"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006e40aac0"/></to>
    </wire>
    <wire loc="279:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e4102b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3df400"/></to>
    </wire>
    <wire loc="280:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e410a10"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e77f480"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f006e3da5d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f006e34ebb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e3dd780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e77f480"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e3db440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f006e846380"/></to>
    </wire>
    <wire loc="293:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e3de630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006e3be270"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f006e3be270"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f006e3b9a80"/></to>
    </wire>
    <wire loc="294:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e3dd020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3beb60"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3beb60"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e3b8440"/></to>
    </wire>
    <wire loc="299:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e3b50c0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f006e82a860"/></to>
    </wire>
    <wire loc="300:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e3b9a80"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006e32a720"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f006e32a720"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f006e324c40"/></to>
    </wire>
    <wire loc="301:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e3b8440"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e329060"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f006e329060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e3235d0"/></to>
    </wire>
    <wire loc="302:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f006e3b8be0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f006e318ab0"/></to>
    </wire>
    <wire loc="79:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f006e318ab0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f006e2f1020"/></to>
    </wire>
    <wire loc="307:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e355bd0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e30ad70"/></to>
    </wire>
    <wire loc="308:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006e354cd0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e34d720"/></to>
    </wire>
    <wire loc="311:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f006e353970"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f006e34ebb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006e32f4a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f006e3172e0"/></to>
    </wire>
    <wire loc="326:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e3202b0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f006e82a860"/></to>
    </wire>
    <wire loc="327:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006e324c40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006e319910"/></to>
    </wire>
    <wire loc="77:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f006e319910"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006e2f3e20"/></to>
    </wire>
    <wire loc="328:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006e3235d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3182f0"/></to>
    </wire>
    <wire loc="78:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3182f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e2f27b0"/></to>
    </wire>
    <wire loc="329:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f006e325d40"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f006e31ca80"/></to>
    </wire>
    <wire loc="76:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f006e31ca80"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f006e2f3020"/></to>
    </wire>
    <wire loc="341:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e3035e0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f006e84f3e0"/></to>
    </wire>
    <wire loc="342:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f006e3025f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e3591c0"/></to>
    </wire>
    <wire loc="349:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f006e2fe390"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f006e34ebb0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f006e2fd020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f006e34ebb0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f006e2fdbd0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f006e34ebb0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e2fc790"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e77f480"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f006e2fb450"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f006e8a63c0"/></to>
    </wire>
    <wire loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006e859aa0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006d844b40"/></to>
    </wire>
    <wire loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e77f480"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f006d826a40"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f006d8259c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f006e77d020"/></to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f006d822b10"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f006e77e140"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f006d803bd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f006e6f3b30"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006d805020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f006e6d4dd0"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006d805c70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f006e6d2a50"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006d8045d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e6d1440"/></to>
    </wire>
    <wire loc="71:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006d804be0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f006e6d1a50"/></to>
    </wire>
    <wire loc="99:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f006e656150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f006d7b1220"/></to>
    </wire>
    <wire loc="100:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006e6568d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006d7b19a0"/></to>
    </wire>
    <wire loc="101:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006d7b0400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006e6551f0"/></to>
    </wire>
    <wire loc="103:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f006d7b0bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f006d7b4410"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f006d7af7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f006d7478e0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f006e6f3b30"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006d745440"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f006e549390"/></to>
    </wire>
    <wire loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006d7440c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e547020"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f006d6f1400"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f006e512270"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006d6f0060"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006e512e80"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006d6f4750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f006e514600"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006d6f30c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e513020"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f006d6f3820"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f006e5137c0"/></to>
    </wire>
    <wire loc="118:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f006e4fb020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e4fe8b0"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f006d6c3a40"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f006e469020"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f006d6c4bc0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f006e469aa0"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f006d6c2590"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f006e4688b0"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f006d6c2e80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f006e467270"/></to>
    </wire>
    <wire loc="189:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f006d6c1e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f006d6c0670"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f006d6c1680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f006d687d90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f006e411860"/></to>
    </wire>
    <wire loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006d684440"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f006e40f760"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f006d686730"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f006e4102b0"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f006d685020"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e410a10"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f006d685c30"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f006e426160"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f006e426160"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f006e41f100"/></to>
    </wire>
    <wire loc="78:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f006d683020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f006e427060"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f006e421020"/></to>
    </wire>
    <wire loc="54:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f006e428230"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006e4226e0"/></to>
    </wire>
    <wire loc="76:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f006e3c2a90"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f006e3bb020"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f006e3bd400"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f006e3b8be0"/></to>
    </wire>
    <wire loc="70:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f006e3c0470"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f006e3baa50"/></to>
    </wire>
    <wire loc="74:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e3bdb60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f006e3b6440"/></to>
    </wire>
    <wire loc="80:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f006e3bc8f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f006e3b50c0"/></to>
    </wire>
    <wire loc="78:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f006e3c1e80"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f006e3ba440"/></to>
    </wire>
    <wire loc="77:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f006e3c1590"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f006e3bbae0"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f006d631cd0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f006e354cd0"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006d633a80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e355bd0"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f006d632c40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f006e364bf0"/></to>
    </wire>
    <wire loc="26:/home/wtiberti/WSN/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f006e364bf0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f006eb261a0"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f006d634e80"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f006e353970"/></to>
    </wire>
    <wire loc="76:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f006e32dd60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f006e326310"/></to>
    </wire>
    <wire loc="73:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f006e3297c0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f006e323d70"/></to>
    </wire>
    <wire loc="74:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f006e327020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f006e3225a0"/></to>
    </wire>
    <wire loc="80:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f006e327c70"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f006e3202b0"/></to>
    </wire>
    <wire loc="78:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f006e32b270"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f006e325730"/></to>
    </wire>
    <wire loc="77:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f006e32c880"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f006e326dd0"/></to>
    </wire>
    <wire loc="75:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f006e1f3c80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f006dff56e0"/></to>
    </wire>
    <wire loc="92:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f006e311ca0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f006e2e9410"/></to>
    </wire>
    <wire loc="81:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e1ee060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f006dfee3a0"/></to>
    </wire>
    <wire loc="84:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f006e2d0020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f006e3035e0"/></to>
    </wire>
    <wire loc="87:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f006e2d0c00"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f006e2fe390"/></to>
    </wire>
    <wire loc="90:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f006e2cf830"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f006e2fd020"/></to>
    </wire>
    <wire loc="93:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f006e2ce530"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f006e2fdbd0"/></to>
    </wire>
    <wire loc="96:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f006e2cd360"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f006e3025f0"/></to>
    </wire>
    <wire loc="99:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f006e2d7d80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e1ee060"/></to>
    </wire>
    <wire loc="102:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e2c9d10"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e2fc790"/></to>
    </wire>
    <wire loc="104:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f006e2e2460"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f006e1fbe10"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f006e1fbe10"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f006ee5d350"/></to>
    </wire>
    <wire loc="105:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f006e2e1830"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f006e1f7060"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f006e1f7060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f006e1caa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e2db770"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1f7ce0"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1f7ce0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1cb020"/></to>
    </wire>
    <wire loc="108:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f006e2df350"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f006e1f6880"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f006e1f6880"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f006ee54990"/></to>
    </wire>
    <wire loc="109:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f006e2de660"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f006e1f5b10"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f006e1f5b10"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f006ee60cb0"/></to>
    </wire>
    <wire loc="111:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f006e2d4170"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f006e1f4e30"/></to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f006e1f4e30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f006e1eca10"/></to>
    </wire>
    <wire loc="112:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f006e2c9220"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f006e2fb450"/></to>
    </wire>
    <wire loc="113:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f006e2d2950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f006df9b9a0"/></to>
    </wire>
    <wire loc="855:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f006e238e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f006dff56e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f006d5a9a40"/></to>
    </wire>
    <wire loc="95:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1cb020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1bc480"/></to>
    </wire>
    <wire loc="48:/home/wtiberti/WSN/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f006dfee3a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f006dfa6b60"/></to>
    </wire>
    <wire loc="59:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f006e1dd3d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f006ee42990"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f006e1dc680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f006ee44350"/></to>
    </wire>
    <wire loc="72:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f006e1e07f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f006e0ee850"/></to>
    </wire>
    <wire loc="91:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f006e0ee850"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f006e0d49e0"/></to>
    </wire>
    <wire loc="96:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f006e1c1c80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f006e1bb020"/></to>
    </wire>
    <wire loc="94:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f006e1c9840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f006e1bde00"/></to>
    </wire>
    <wire loc="92:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f006e1cc1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f006e1bd7e0"/></to>
    </wire>
    <wire loc="97:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f006e1caa60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f006e102900"/></to>
    </wire>
    <wire loc="98:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f006e102900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f006d5e66c0"/></to>
    </wire>
    <wire loc="99:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006e100730"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006e1bbd70"/></to>
    </wire>
    <wire loc="100:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f006e19f800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f006e15f710"/></to>
    </wire>
    <wire loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f006e15f710"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f006e1566b0"/></to>
    </wire>
    <wire loc="101:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f006e19e620"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f006eec58f0"/></to>
    </wire>
    <wire loc="294:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f006e17dde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f006e14c060"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f006eec58f0"/></to>
    </wire>
    <wire loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f006e1526c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f006ee5d350"/></to>
    </wire>
    <wire loc="87:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f006e151970"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f006ee5c670"/></to>
    </wire>
    <wire loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f006e14fb20"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f006ee5b990"/></to>
    </wire>
    <wire loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f006e14ee30"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f006ee5acb0"/></to>
    </wire>
    <wire loc="99:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f006e1016c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f006d5e5530"/></to>
    </wire>
    <wire loc="100:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006e101e40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006d5e5cb0"/></to>
    </wire>
    <wire loc="101:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006d5e4610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006e100730"/></to>
    </wire>
    <wire loc="103:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f006d5e4dd0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f006d5e96f0"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f006d5e3900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f006e0ef020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f006e0d52c0"/></to>
    </wire>
    <wire loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006e0f8c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006e0da020"/></to>
    </wire>
    <wire loc="93:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006e0e2ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f006e0cf5a0"/></to>
    </wire>
    <wire loc="94:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006e0e2ad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f006e0cbba0"/></to>
    </wire>
    <wire loc="95:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006e0e2ad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f006e0c6120"/></to>
    </wire>
    <wire loc="43:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f006d5a5cb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006e0f8c00"/></to>
    </wire>
    <wire loc="44:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f006d59f020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f006e0e2ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/wtiberti/WSN/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006e033410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006e0f8c00"/></to>
    </wire>
    <wire loc="49:/home/wtiberti/WSN/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006dfa5e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006dfc8cf0"/></to>
    </wire>
    <wire loc="50:/home/wtiberti/WSN/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f006dfaa0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006dfe9200"/></to>
    </wire>
    <wire loc="31:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006dfe9200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006dfe4020"/></to>
    </wire>
    <wire loc="32:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006dfd0280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006e0f8c00"/></to>
    </wire>
    <wire loc="63:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006d56d100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006d5619e0"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006d56dd10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006e9327e0"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006d56c970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006e931470"/></to>
    </wire>
    <wire loc="67:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f006deab020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f006d56a020"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f006d56a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e929810"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f006d560780"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006df16c30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006d55e400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006e931470"/></to>
    </wire>
    <wire loc="53:/home/wtiberti/WSN/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f006df16c30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f006dec6df0"/></to>
    </wire>
    <wire loc="54:/home/wtiberti/WSN/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f006dec3400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f006e937b10"/></to>
    </wire>
    <wire loc="55:/home/wtiberti/WSN/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006dec2060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006e931470"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006dec1720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006e9327e0"/></to>
    </wire>
    <wire loc="184:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f006dec0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f006dec0c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f006dea1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f006e9327e0"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f006dea1c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f006e931470"/></to>
    </wire>
    <wire loc="8:../TAKSC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f006de96110"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f006dfee3a0"/></to>
    </wire>
    <wire loc="42:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f006de26610"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f006de230c0"/></to>
    </wire>
    <wire loc="48:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7f006de297b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f006de121e0"/></to>
    </wire>
    <wire loc="48:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f006de121e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f006de0fc30"/></to>
    </wire>
    <wire loc="49:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f006de1e520"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f006de107c0"/></to>
    </wire>
    <wire loc="50:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f006de107c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f006de024a0"/></to>
    </wire>
    <wire loc="52:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f006dd22600"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f006de1d020"/></to>
    </wire>
    <wire loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f006de024a0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f006ddb67c0"/></to>
    </wire>
    <wire loc="49:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f006de04770"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f006de01020"/></to>
    </wire>
    <wire loc="52:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f006de01020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f006ddb42b0"/></to>
    </wire>
    <wire loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f006de0fc30"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f006ddb6020"/></to>
    </wire>
    <wire loc="53:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006de002e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006dd24dd0"/></to>
    </wire>
    <wire loc="33:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006dd24dd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006dc5ccd0"/></to>
    </wire>
    <wire loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006ddb19a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006de002e0"/></to>
    </wire>
    <wire loc="56:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f006ddb32f0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f006dd913f0"/></to>
    </wire>
    <wire loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f006dd913f0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f006dd89550"/></to>
    </wire>
    <wire loc="57:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f006ddb3ad0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f006dd91c90"/></to>
    </wire>
    <wire loc="61:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f006dd91c90"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f006dd89e30"/></to>
    </wire>
    <wire loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f006ddb22f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f006dd905b0"/></to>
    </wire>
    <wire loc="62:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f006dd905b0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f006dd88730"/></to>
    </wire>
    <wire loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f006dd8edd0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f006dd85650"/></to>
    </wire>
    <wire loc="64:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f006dd8fb80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f006dd86470"/></to>
    </wire>
    <wire loc="65:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f006dd8e540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f006dd86d50"/></to>
    </wire>
    <wire loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f006dd84b30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f006ee8d1d0"/></to>
    </wire>
    <wire loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f006dd83980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f006eec58f0"/></to>
    </wire>
    <wire loc="34:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f006dc580f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006dd1edf0"/></to>
    </wire>
    <wire loc="31:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f006dd1edf0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f006dc673c0"/></to>
    </wire>
    <wire loc="32:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006dc65660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006dd19cd0"/></to>
    </wire>
    <wire loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006dd19cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006dd02020"/></to>
    </wire>
    <wire loc="90:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f006dd10020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f006dcfd2c0"/></to>
    </wire>
    <wire loc="91:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f006dd0f850"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f006dcfc9e0"/></to>
    </wire>
    <wire loc="93:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006dd0aad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f006dcf75a0"/></to>
    </wire>
    <wire loc="94:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006dd0aad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f006dcf3ba0"/></to>
    </wire>
    <wire loc="95:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f006dd0aad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f006dcee120"/></to>
    </wire>
    <wire loc="27:/home/wtiberti/WSN/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f006dc6f410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f006dd19cd0"/></to>
    </wire>
    <wire loc="50:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f006dc4b870"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f006dd22600"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wtiberti/WSN/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/wtiberti/WSN/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:/home/wtiberti/WSN/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wtiberti/WSN/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:/home/wtiberti/WSN/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:/home/wtiberti/WSN/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="65:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wtiberti/WSN/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wtiberti/WSN/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkToRadioC" loc="5:BlinkToRadioC.nc">
      <module/>
    </component>
    <component qname="BlinkToRadioAppC.Timer0" loc="44(BlinkToRadioAppC.Timer0):/home/wtiberti/WSN/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f006eb0a070"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006e9d4a20"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC" loc="35(RF230RadioC.NeighborhoodC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC.NeighborhoodP" loc="37(RF230RadioC.NeighborhoodC.NeighborhoodP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wtiberti/WSN/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="37(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wtiberti/WSN/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/wtiberti/WSN/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TOne" ref="0x7f006eef59a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/wtiberti/WSN/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TOne" ref="0x7f006eef59a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="BlinkToRadioAppC.AMSenderC" loc="47(BlinkToRadioAppC.AMSenderC):/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkToRadioAppC.AMSenderC.SenderC" loc="47(BlinkToRadioAppC.AMSenderC.SenderC):/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wtiberti/WSN/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkToRadioAppC.AMReceiverC" loc="43(BlinkToRadioAppC.AMReceiverC):/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TAKSC" loc="1:../TAKSC.nc">
      <configuration/>
    </component>
    <component qname="TAKSM" loc="7:../TAKSM.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="50(Atm128Uart0C.UartP):/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TThree" ref="0x7f006eef5d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TThree" ref="0x7f006eef5d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f006eef4670"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f006ee21c10" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f006ee1e020" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f006ee1e390" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f006ee11020" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f006ee113b0" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f006ee11740" loc="43:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f006ee11a90" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f006ed7ee30" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f006ed7b200" loc="43:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f006ed7b590" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f006ed7b8e0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f006eb0a070" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f006eb0a070"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f006eb0a380" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f006eb01d30" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f006eb01d30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f006eafe060" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006ea05430" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006ea05430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006e9d4a20" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006e9d4a20"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f006e9d4d70" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006e9c0020" loc="61:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006e9c0020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f006e9c0370" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006e950550" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006e950550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7f006e893020" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
          <component-ref qname="NeighborhoodC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7f006e88b810" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
          <component-ref qname="NeighborhoodP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f006e6b5690" loc="83:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f006e6a6210" loc="42:/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7f006e542300" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <component-ref qname="UniqueLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7f006e53aae0" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
          <component-ref qname="UniqueLayerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f006e03e290" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f006e03e290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f006e03e600" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f006e042d70" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f006e042d70"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f006e029580" loc="52:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f006e029580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f006e0298a0" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f006dfe6920" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f006dfe6920"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f006dfe2120" loc="43:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f006dfe2120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f006dfc7600" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f006dfc7600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f006dfc7dd0" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f006dfc7dd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f006dfc6220" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f006dfc6220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f006dfc6a00" loc="58:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f006dfc6a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f006dfc6dd0" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f006dfc4630" loc="60:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f006dfc4630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f006df43810" loc="47:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f006df393a0" loc="47:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f006df320d0" loc="43:/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f006df0e020" loc="45:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f006dea7330" loc="43:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128UartP" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f006eea0d90" loc="58:/home/wtiberti/WSN/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f006eea0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee9f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f006ee9e870" loc="57:/home/wtiberti/WSN/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f006ee9e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f006ee9ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f006ee98020" loc="53:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f006ee98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006ee9fdc0" loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006ee9fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee9b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f006ee8d1d0" loc="51:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f006ee8d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f006ee8d550"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f006ee8d6e0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f006ee8d870"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f006ee8da00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f006ee8db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f006ee93550" loc="47:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Platform" scoped="" ref="0x7f006ee93550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f006ee938d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f006ee93a60"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f006ee93bf0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f006ee93d80"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f006ee9a020"/>
        <function-ref name="localTime" scoped="" ref="0x7f006ee9a1b0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f006ee9a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f006ee8ab50" loc="45:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f006ee8ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006ee8b360" loc="43:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006ee8b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee8b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f006ee893a0" loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f006ee893a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee89720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f006ee8b9d0" loc="44:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Platform" scoped="" ref="0x7f006ee8b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f006ee8bd50"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f006ee8a020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f006ee8a1b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f006ee8a340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f006ee8a4d0"/>
        <function-ref name="localTime" scoped="" ref="0x7f006ee8a660"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f006ee8a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f006ee77530" loc="41:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f006ee77530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee778b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f006ee92e40" loc="40:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f006ee92e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee771e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f006ee71370" loc="45:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f006ee71370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee716f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f006ee72020" loc="44:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f006ee72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee72530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee726c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee72850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee729e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee72b70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee72d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f006ee76990" loc="43:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f006ee76990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ee76d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f006ee2b350" loc="98:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f006ee2b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee2bad0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee2bc60"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee2bdf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee2a020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee2a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee2a340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee2a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee2a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f006ee48b20" loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f006ee48b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee47020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee47340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee474d0"/>
        <function-ref name="get" scoped="" ref="0x7f006ee47660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee477f0"/>
        <function-ref name="set" scoped="" ref="0x7f006ee47980"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee47b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f006ee3c990" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f006ee3c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee3cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee3a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee3a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee3a340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee3a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee3a660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee3a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f006ee31350" loc="92:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f006ee31350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee316d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee31860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee319f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee31b80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee31d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee30020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee301b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f006ee25670" loc="103:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f006ee25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee259f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee25b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee25d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee24020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee24340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee244d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f006ee60cb0" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f006ee60cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee5f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee5f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee5f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee5f550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee5f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee5f870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee5fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee5fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f006ee34cb0" loc="90:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f006ee34cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee33230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee333c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee33550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee33870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee33a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee33b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f006ee5d350" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f006ee5d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee5d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee5d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee5d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee5db80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee5dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee5c020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee5c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f006ee50350" loc="64:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f006ee50350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee506d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee50860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee509f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee50b80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee50d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee4f020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee4f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee4f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f006ee44350" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f006ee44350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee446d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee44860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee449f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee44b80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee44d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee43020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee431b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f006ee37350" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f006ee37350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee376d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee37860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee379f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee37b80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee37d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee36020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee361b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f006ee66cb0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f006ee66cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee65230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee65550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee65870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee65a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee65b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f006ee5acb0" loc="56:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f006ee5acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee59230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee59550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee59870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee59a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee59b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f006ee4dcb0" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f006ee4dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee4c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee4c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee4c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee4c550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee4c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee4c870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee4ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee4cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f006ee41cb0" loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f006ee41cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee40230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee403c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee40550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee406e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee40870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee40a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee40b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f006ee2ecb0" loc="95:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f006ee2ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee2d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee2d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee2d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee2d550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee2d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee2d870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee2da00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee2db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f006ee27020" loc="101:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f006ee27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee27530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee276c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee27850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee279e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee27b70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee27d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f006ee3e350" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f006ee3e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee3e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee3e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee3e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee3eb80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee3ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee3d020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee3d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee3d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f006ee62670" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f006ee62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee629f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee62b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee62d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee61020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee61340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee614d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f006ee55670" loc="59:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f006ee55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee559f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee55b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee55d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee54020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee54340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee544d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee54660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f006ee2a990" loc="99:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f006ee2a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee2ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee29020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee29340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee29660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee297f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee29980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f006ee53cb0" loc="62:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f006ee53cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee520a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee52230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee523c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee52550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee526e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee52870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee52a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee52b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f006ee47e40" loc="73:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f006ee47e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee461e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee46370"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee46500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee46690"/>
        <function-ref name="get" scoped="" ref="0x7f006ee46820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee469b0"/>
        <function-ref name="set" scoped="" ref="0x7f006ee46b40"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee46cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f006ee3acb0" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f006ee3acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee39230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee39550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee39870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee39a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee39b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f006ee30670" loc="93:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f006ee30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee309f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee30b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee30d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee2f020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee2f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee2f340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee2f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f006ee5e020" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f006ee5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee5e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee5e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee5e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee5e850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee5e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee5eb70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee5ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f006ee5c670" loc="54:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f006ee5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee5c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee5cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee5cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee5b020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee5b340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee5b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee5b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f006ee4f670" loc="65:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f006ee4f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee4f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee4fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee4fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee4e020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee4e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee4e340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee4e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f006ee43670" loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f006ee43670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee439f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee43b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee43d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee42020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee42340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee424d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f006ee36670" loc="87:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f006ee36670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee369f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee36b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee36d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee35020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee35340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f006ee64020" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f006ee64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee643a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee64530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee646c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee64850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee649e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee64b70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee64d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f006ee57020" loc="57:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f006ee57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee574a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee57630"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee577c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee57950"/>
        <function-ref name="get" scoped="" ref="0x7f006ee57ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee57c70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee57e00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f006ee4b020" loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f006ee4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee4b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee4b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee4b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee4b850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee4b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee4bb70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee4bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f006ee2c020" loc="96:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f006ee2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee2c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee2c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee2c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee2c850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee2c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee2cb70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee2cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f006ee49670" loc="71:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f006ee49670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee49bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee49d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee48020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee481b0"/>
        <function-ref name="get" scoped="" ref="0x7f006ee48340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee484d0"/>
        <function-ref name="set" scoped="" ref="0x7f006ee48660"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f006ee3d670" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f006ee3d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee3d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee3db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee3dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee3c020"/>
        <function-ref name="get" scoped="" ref="0x7f006ee3c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee3c340"/>
        <function-ref name="set" scoped="" ref="0x7f006ee3c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee3c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f006ee32020" loc="91:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f006ee32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee32530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee326c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee32850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee329e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee32b70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee32d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f006ee26350" loc="102:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f006ee26350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee266d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee26860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee269f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee26b80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee26d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee25020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee251b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f006ee61990" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f006ee61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee61d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee60020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee60340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee60660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee60980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f006ee54990" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f006ee54990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee54d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee53020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee53340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee53660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee53980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f006ee35990" loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f006ee35990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee35d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee34020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee34340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee34660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee347f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee34980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f006ee51020" loc="63:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f006ee51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee51530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee516c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee51850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee519e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee51b70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee51d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f006ee45060" loc="74:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f006ee45060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee453e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee45570"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee45700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee45890"/>
        <function-ref name="get" scoped="" ref="0x7f006ee45a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee45bb0"/>
        <function-ref name="set" scoped="" ref="0x7f006ee45d40"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f006ee38020" loc="85:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f006ee38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee38530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee38850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee38b70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee38d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f006ee2f990" loc="94:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f006ee2f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee2fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee2e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee2e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee2e340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee2e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee2e660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee2e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee2e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f006ee75a80" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f006ee75a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee75e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee66020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee66340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee66660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee667f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee66980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f006ee5b990" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f006ee5b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee5bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee5a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee5a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee5a340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee5a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee5a660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee5a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee5a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f006ee4e990" loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f006ee4e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee4ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee4d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee4d340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee4d660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee4d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f006ee42990" loc="77:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f006ee42990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee42d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee41020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee41340"/>
        <function-ref name="get" scoped="" ref="0x7f006ee414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee41660"/>
        <function-ref name="set" scoped="" ref="0x7f006ee417f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee41980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f006ee29cb0" loc="100:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f006ee29cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee28230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee28550"/>
        <function-ref name="get" scoped="" ref="0x7f006ee286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee28870"/>
        <function-ref name="set" scoped="" ref="0x7f006ee28a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee28b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f006ee3f020" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f006ee3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee3f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee3f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee3f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee3f850"/>
        <function-ref name="get" scoped="" ref="0x7f006ee3f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee3fb70"/>
        <function-ref name="set" scoped="" ref="0x7f006ee3fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f006ee4a350" loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f006ee4a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee4a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee4a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee4a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee4ab80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee4ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee49020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee491b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee49340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f006ee63350" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f006ee63350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee636d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee63860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee639f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee63b80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee63d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee62020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee621b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f006ee56350" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f006ee56350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ee566d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ee56860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ee569f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ee56b80"/>
        <function-ref name="get" scoped="" ref="0x7f006ee56d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ee55020"/>
        <function-ref name="set" scoped="" ref="0x7f006ee551b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ee55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f006edd8760" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f006edd8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edd8ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edd8c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edd8e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edd7020"/>
        <function-ref name="get" scoped="" ref="0x7f006edd71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd7340"/>
        <function-ref name="set" scoped="" ref="0x7f006edd74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f006edd5c10" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f006edd5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edd3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edd31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edd3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edd34d0"/>
        <function-ref name="get" scoped="" ref="0x7f006edd3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd37f0"/>
        <function-ref name="set" scoped="" ref="0x7f006edd3980"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f006edda3f0" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f006edda3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edda770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edda900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eddaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eddac20"/>
        <function-ref name="get" scoped="" ref="0x7f006eddadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd9020"/>
        <function-ref name="set" scoped="" ref="0x7f006edd91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f006edd78f0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f006edd78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edd7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edd7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edd6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edd61b0"/>
        <function-ref name="get" scoped="" ref="0x7f006edd6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd64d0"/>
        <function-ref name="set" scoped="" ref="0x7f006edd6660"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f006edd3da0" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f006edd3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edd2180"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edd2310"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edd24a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edd2630"/>
        <function-ref name="get" scoped="" ref="0x7f006edd27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd2950"/>
        <function-ref name="set" scoped="" ref="0x7f006edd2ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f006edd95d0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f006edd95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edd9950"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edd9ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edd9c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edd9e00"/>
        <function-ref name="get" scoped="" ref="0x7f006edd8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd81b0"/>
        <function-ref name="set" scoped="" ref="0x7f006edd8340"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f006edd6a80" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f006edd6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edd6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edd5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edd51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edd5340"/>
        <function-ref name="get" scoped="" ref="0x7f006edd54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd5660"/>
        <function-ref name="set" scoped="" ref="0x7f006edd57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f006edd1020" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f006edd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edd13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edd1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edd16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edd1850"/>
        <function-ref name="get" scoped="" ref="0x7f006edd19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edd1b70"/>
        <function-ref name="set" scoped="" ref="0x7f006edd1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006edd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dc146d0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dc146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dc14a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dc14be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dc14d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dc09020"/>
        <function-ref name="get" scoped="" ref="0x7f006dc091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dc09340"/>
        <function-ref name="set" scoped="" ref="0x7f006dc094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dc09660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dc079b0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dc079b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dc07d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dc06020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dc061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dc06340"/>
        <function-ref name="get" scoped="" ref="0x7f006dc064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dc06660"/>
        <function-ref name="set" scoped="" ref="0x7f006dc067f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dc06980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dc04e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dc04e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dc031c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dc03350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dc034e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dc03670"/>
        <function-ref name="get" scoped="" ref="0x7f006dc03800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dc03990"/>
        <function-ref name="set" scoped="" ref="0x7f006dc03b20"/>
        <function-ref name="clr" scoped="" ref="0x7f006dc03cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dc000a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dc000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dc00420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dc005b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dc00740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dc008d0"/>
        <function-ref name="get" scoped="" ref="0x7f006dc00a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dc00bf0"/>
        <function-ref name="set" scoped="" ref="0x7f006dc00d80"/>
        <function-ref name="clr" scoped="" ref="0x7f006dbff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dbfd3f0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dbfd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dbfd770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dbfd900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dbfda90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dbfdc20"/>
        <function-ref name="get" scoped="" ref="0x7f006dbfddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dbfc020"/>
        <function-ref name="set" scoped="" ref="0x7f006dbfc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dbfc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dbfa6d0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dbfa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dbfaa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dbfabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dbfad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dbf8020"/>
        <function-ref name="get" scoped="" ref="0x7f006dbf81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dbf8340"/>
        <function-ref name="set" scoped="" ref="0x7f006dbf84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dbf8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dbf69b0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dbf69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dbf6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dbf5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dbf51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dbf5340"/>
        <function-ref name="get" scoped="" ref="0x7f006dbf54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dbf5660"/>
        <function-ref name="set" scoped="" ref="0x7f006dbf57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dbf5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dbf3e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dbf3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dbf21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dbf2350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dbf24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dbf2670"/>
        <function-ref name="get" scoped="" ref="0x7f006dbf2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dbf2990"/>
        <function-ref name="set" scoped="" ref="0x7f006dbf2b20"/>
        <function-ref name="clr" scoped="" ref="0x7f006dbf2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f006edc9a80" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f006edc9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edc9e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edc7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edc71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edc7340"/>
        <function-ref name="get" scoped="" ref="0x7f006edc74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edc7660"/>
        <function-ref name="set" scoped="" ref="0x7f006edc77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edc7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f006edc4020" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f006edc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edc43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edc4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edc46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edc4850"/>
        <function-ref name="get" scoped="" ref="0x7f006edc49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edc4b70"/>
        <function-ref name="set" scoped="" ref="0x7f006edc4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006edc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f006edcb7a0" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f006edcb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edcbb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edcbcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edcbe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edca020"/>
        <function-ref name="get" scoped="" ref="0x7f006edca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edca340"/>
        <function-ref name="set" scoped="" ref="0x7f006edca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f006edc7c10" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f006edc7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edc6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edc61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edc6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edc64d0"/>
        <function-ref name="get" scoped="" ref="0x7f006edc6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edc67f0"/>
        <function-ref name="set" scoped="" ref="0x7f006edc6980"/>
        <function-ref name="clr" scoped="" ref="0x7f006edc6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f006edc32b0" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f006edc32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edc3630"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edc37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edc3950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edc3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f006edc3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edc3e00"/>
        <function-ref name="set" scoped="" ref="0x7f006edc2020"/>
        <function-ref name="clr" scoped="" ref="0x7f006edc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f006edca8f0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f006edca8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edcac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edcae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edc9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edc91b0"/>
        <function-ref name="get" scoped="" ref="0x7f006edc9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edc94d0"/>
        <function-ref name="set" scoped="" ref="0x7f006edc9660"/>
        <function-ref name="clr" scoped="" ref="0x7f006edc97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f006edc6da0" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f006edc6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edc5180"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edc5310"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edc54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edc5630"/>
        <function-ref name="get" scoped="" ref="0x7f006edc57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edc5950"/>
        <function-ref name="set" scoped="" ref="0x7f006edc5ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edc5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f006edc2440" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f006edc2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edc27c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edc2950"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edc2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edc2c70"/>
        <function-ref name="get" scoped="" ref="0x7f006edc2e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edc1020"/>
        <function-ref name="set" scoped="" ref="0x7f006edc11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edc1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db9fa60" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db9fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db9fde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db9e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db9e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db9e340"/>
        <function-ref name="get" scoped="" ref="0x7f006db9e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db9e660"/>
        <function-ref name="set" scoped="" ref="0x7f006db9e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006db9e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db9ce20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db9ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db9b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db9b350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db9b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db9b670"/>
        <function-ref name="get" scoped="" ref="0x7f006db9b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db9b990"/>
        <function-ref name="set" scoped="" ref="0x7f006db9bb20"/>
        <function-ref name="clr" scoped="" ref="0x7f006db9bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db980a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db98420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db985b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db98740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db988d0"/>
        <function-ref name="get" scoped="" ref="0x7f006db98a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db98bf0"/>
        <function-ref name="set" scoped="" ref="0x7f006db98d80"/>
        <function-ref name="clr" scoped="" ref="0x7f006db97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db953f0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db95770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db95900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db95a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db95c20"/>
        <function-ref name="get" scoped="" ref="0x7f006db95db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db94020"/>
        <function-ref name="set" scoped="" ref="0x7f006db941b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006db94340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db926d0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db926d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db92a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db92be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db92d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db91020"/>
        <function-ref name="get" scoped="" ref="0x7f006db911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db91340"/>
        <function-ref name="set" scoped="" ref="0x7f006db914d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006db91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db8f9b0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db8f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db8fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db8d340"/>
        <function-ref name="get" scoped="" ref="0x7f006db8d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db8d660"/>
        <function-ref name="set" scoped="" ref="0x7f006db8d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006db8d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db8be20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db8be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db8a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db8a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db8a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db8a670"/>
        <function-ref name="get" scoped="" ref="0x7f006db8a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db8a990"/>
        <function-ref name="set" scoped="" ref="0x7f006db8ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f006db8acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db870a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db87420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db875b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db87740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db878d0"/>
        <function-ref name="get" scoped="" ref="0x7f006db87a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db87bf0"/>
        <function-ref name="set" scoped="" ref="0x7f006db87d80"/>
        <function-ref name="clr" scoped="" ref="0x7f006db86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f006edb9da0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f006edb9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edb8180"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edb8310"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edb84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edb8630"/>
        <function-ref name="get" scoped="" ref="0x7f006edb87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edb8950"/>
        <function-ref name="set" scoped="" ref="0x7f006edb8ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edb8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f006edb5440" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f006edb5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edb57c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edb5950"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edb5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edb5c70"/>
        <function-ref name="get" scoped="" ref="0x7f006edb5e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edb4020"/>
        <function-ref name="set" scoped="" ref="0x7f006edb41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f006edbba20" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f006edbba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edbbda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edba340"/>
        <function-ref name="get" scoped="" ref="0x7f006edba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edba660"/>
        <function-ref name="set" scoped="" ref="0x7f006edba7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f006edb7020" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f006edb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edb73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edb7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edb76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edb7850"/>
        <function-ref name="get" scoped="" ref="0x7f006edb79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edb7b70"/>
        <function-ref name="set" scoped="" ref="0x7f006edb7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006edb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f006edb45d0" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f006edb45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edb4950"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edb4ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edb4c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edb4e00"/>
        <function-ref name="get" scoped="" ref="0x7f006edb3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edb31b0"/>
        <function-ref name="set" scoped="" ref="0x7f006edb3340"/>
        <function-ref name="clr" scoped="" ref="0x7f006edb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f006edbac10" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f006edbac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edb9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edb91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edb9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edb94d0"/>
        <function-ref name="get" scoped="" ref="0x7f006edb9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edb97f0"/>
        <function-ref name="set" scoped="" ref="0x7f006edb9980"/>
        <function-ref name="clr" scoped="" ref="0x7f006edb9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f006edb62b0" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f006edb62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edb6630"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edb67c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edb6950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edb6ae0"/>
        <function-ref name="get" scoped="" ref="0x7f006edb6c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edb6e00"/>
        <function-ref name="set" scoped="" ref="0x7f006edb5020"/>
        <function-ref name="clr" scoped="" ref="0x7f006edb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f006edb3760" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f006edb3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edb3ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edb3c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edb3e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edb2020"/>
        <function-ref name="get" scoped="" ref="0x7f006edb21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edb2340"/>
        <function-ref name="set" scoped="" ref="0x7f006edb24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006edb2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db34c90" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db34c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db33230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db333c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db33550"/>
        <function-ref name="get" scoped="" ref="0x7f006db336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db33870"/>
        <function-ref name="set" scoped="" ref="0x7f006db33a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006db33b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db31e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db31e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db301c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db30350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db304e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db30670"/>
        <function-ref name="get" scoped="" ref="0x7f006db30800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db30990"/>
        <function-ref name="set" scoped="" ref="0x7f006db30b20"/>
        <function-ref name="clr" scoped="" ref="0x7f006db30cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db2d0a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db2d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db2d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db2d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db2d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db2d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f006db2da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db2dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f006db2dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f006db2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db2a3f0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db2a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db2a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db2a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db2aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db2ac20"/>
        <function-ref name="get" scoped="" ref="0x7f006db2adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db29020"/>
        <function-ref name="set" scoped="" ref="0x7f006db291b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006db29340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db276d0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db27a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db27be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db27d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db26020"/>
        <function-ref name="get" scoped="" ref="0x7f006db261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db26340"/>
        <function-ref name="set" scoped="" ref="0x7f006db264d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006db26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db249b0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db249b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db24d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db23020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db23340"/>
        <function-ref name="get" scoped="" ref="0x7f006db234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db23660"/>
        <function-ref name="set" scoped="" ref="0x7f006db237f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006db23980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db21e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db21e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db1f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db1f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db1f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db1f670"/>
        <function-ref name="get" scoped="" ref="0x7f006db1f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db1f990"/>
        <function-ref name="set" scoped="" ref="0x7f006db1fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f006db1fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006db1c0a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006db1c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006db1c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006db1c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006db1c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006db1c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f006db1ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006db1cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f006db1cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f006db1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f006eda9020" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f006eda9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eda93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eda9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eda96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eda9850"/>
        <function-ref name="get" scoped="" ref="0x7f006eda99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eda9b70"/>
        <function-ref name="set" scoped="" ref="0x7f006eda9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006eda8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f006eda65d0" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f006eda65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eda6950"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eda6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eda6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eda6e00"/>
        <function-ref name="get" scoped="" ref="0x7f006eda5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eda51b0"/>
        <function-ref name="set" scoped="" ref="0x7f006eda5340"/>
        <function-ref name="clr" scoped="" ref="0x7f006eda54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f006edacd30" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f006edacd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edab0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edab270"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edab400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edab590"/>
        <function-ref name="get" scoped="" ref="0x7f006edab720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edab8b0"/>
        <function-ref name="set" scoped="" ref="0x7f006edaba40"/>
        <function-ref name="clr" scoped="" ref="0x7f006edabbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f006eda82b0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f006eda82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eda8630"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eda87c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eda8950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eda8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f006eda8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eda8e00"/>
        <function-ref name="set" scoped="" ref="0x7f006eda7020"/>
        <function-ref name="clr" scoped="" ref="0x7f006eda71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f006eda5760" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f006eda5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eda5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eda5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eda5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eda4020"/>
        <function-ref name="get" scoped="" ref="0x7f006eda41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eda4340"/>
        <function-ref name="set" scoped="" ref="0x7f006eda44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006eda4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f006edabe60" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f006edabe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006edaa210"/>
        <function-ref name="isInput" scoped="" ref="0x7f006edaa3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006edaa530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006edaa6c0"/>
        <function-ref name="get" scoped="" ref="0x7f006edaa850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006edaa9e0"/>
        <function-ref name="set" scoped="" ref="0x7f006edaab70"/>
        <function-ref name="clr" scoped="" ref="0x7f006edaad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f006eda7440" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f006eda7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eda77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eda7950"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eda7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eda7c70"/>
        <function-ref name="get" scoped="" ref="0x7f006eda7e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eda6020"/>
        <function-ref name="set" scoped="" ref="0x7f006eda61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006eda6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f006eda48f0" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f006eda48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eda4c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eda4e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eda2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eda21b0"/>
        <function-ref name="get" scoped="" ref="0x7f006eda2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eda24d0"/>
        <function-ref name="set" scoped="" ref="0x7f006eda2660"/>
        <function-ref name="clr" scoped="" ref="0x7f006eda27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dac9c90" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dac9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dac80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dac8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dac83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dac8550"/>
        <function-ref name="get" scoped="" ref="0x7f006dac86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dac8870"/>
        <function-ref name="set" scoped="" ref="0x7f006dac8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006dac8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dac6e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dac6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dac51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dac5350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dac54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dac5670"/>
        <function-ref name="get" scoped="" ref="0x7f006dac5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dac5990"/>
        <function-ref name="set" scoped="" ref="0x7f006dac5b20"/>
        <function-ref name="clr" scoped="" ref="0x7f006dac5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dac20a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dac20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dac2420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dac25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dac2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dac28d0"/>
        <function-ref name="get" scoped="" ref="0x7f006dac2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dac2bf0"/>
        <function-ref name="set" scoped="" ref="0x7f006dac2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f006dac1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dabf3f0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dabf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dabf770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dabf900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dabfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dabfc20"/>
        <function-ref name="get" scoped="" ref="0x7f006dabfdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dabe020"/>
        <function-ref name="set" scoped="" ref="0x7f006dabe1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dabe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dabc6d0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dabc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dabca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dabcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dabcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dabb020"/>
        <function-ref name="get" scoped="" ref="0x7f006dabb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dabb340"/>
        <function-ref name="set" scoped="" ref="0x7f006dabb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dabb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dab99b0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dab99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dab9d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dab8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dab81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dab8340"/>
        <function-ref name="get" scoped="" ref="0x7f006dab84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dab8660"/>
        <function-ref name="set" scoped="" ref="0x7f006dab87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006dab8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dab6e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dab6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dab41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dab4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dab44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dab4670"/>
        <function-ref name="get" scoped="" ref="0x7f006dab4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dab4990"/>
        <function-ref name="set" scoped="" ref="0x7f006dab4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f006dab4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006dab10a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006dab10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006dab1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006dab15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006dab1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006dab18d0"/>
        <function-ref name="get" scoped="" ref="0x7f006dab1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006dab1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f006dab1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f006dab0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f006ed9a440" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f006ed9a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed9a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed9a950"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed9aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed9ac70"/>
        <function-ref name="get" scoped="" ref="0x7f006ed9ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed99020"/>
        <function-ref name="set" scoped="" ref="0x7f006ed991b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f006ed968f0" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f006ed968f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed96c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed96e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed95020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed951b0"/>
        <function-ref name="get" scoped="" ref="0x7f006ed95340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed954d0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed95660"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f006ed9c020" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f006ed9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed9c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed9c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed9c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed9c850"/>
        <function-ref name="get" scoped="" ref="0x7f006ed9c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed9cb70"/>
        <function-ref name="set" scoped="" ref="0x7f006ed9cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f006ed995d0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f006ed995d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed99950"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed99ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed99c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed99e00"/>
        <function-ref name="get" scoped="" ref="0x7f006ed98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed981b0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed98340"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f006ed95a80" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f006ed95a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed95e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed94020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed94340"/>
        <function-ref name="get" scoped="" ref="0x7f006ed944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed94660"/>
        <function-ref name="set" scoped="" ref="0x7f006ed947f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed94980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f006ed9b2b0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f006ed9b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed9b630"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed9b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed9b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed9bae0"/>
        <function-ref name="get" scoped="" ref="0x7f006ed9bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed9be00"/>
        <function-ref name="set" scoped="" ref="0x7f006ed9a020"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f006ed98760" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f006ed98760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed98ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed98c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed98e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed96020"/>
        <function-ref name="get" scoped="" ref="0x7f006ed961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed96340"/>
        <function-ref name="set" scoped="" ref="0x7f006ed964d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed96660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f006ed94c10" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f006ed94c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed93020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed931b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed93340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed934d0"/>
        <function-ref name="get" scoped="" ref="0x7f006ed93660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed937f0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed93980"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed93b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da5ec90" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da5ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da5d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da5d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da5d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da5d550"/>
        <function-ref name="get" scoped="" ref="0x7f006da5d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da5d870"/>
        <function-ref name="set" scoped="" ref="0x7f006da5da00"/>
        <function-ref name="clr" scoped="" ref="0x7f006da5db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da5be20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da5be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da5a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da5a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da5a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da5a670"/>
        <function-ref name="get" scoped="" ref="0x7f006da5a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da5a990"/>
        <function-ref name="set" scoped="" ref="0x7f006da5ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f006da5acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da570a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da570a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da57420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da575b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da57740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da578d0"/>
        <function-ref name="get" scoped="" ref="0x7f006da57a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da57bf0"/>
        <function-ref name="set" scoped="" ref="0x7f006da57d80"/>
        <function-ref name="clr" scoped="" ref="0x7f006da56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da543f0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da543f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da54770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da54900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da54a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da54c20"/>
        <function-ref name="get" scoped="" ref="0x7f006da54db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da53020"/>
        <function-ref name="set" scoped="" ref="0x7f006da531b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006da53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da516d0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da516d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da51a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da51be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da51d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da50020"/>
        <function-ref name="get" scoped="" ref="0x7f006da501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da50340"/>
        <function-ref name="set" scoped="" ref="0x7f006da504d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006da50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da4e9b0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da4e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da4ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da4d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da4d340"/>
        <function-ref name="get" scoped="" ref="0x7f006da4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da4d660"/>
        <function-ref name="set" scoped="" ref="0x7f006da4d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006da4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da4be20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da4be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da4a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da4a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da4a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da4a670"/>
        <function-ref name="get" scoped="" ref="0x7f006da4a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da4a990"/>
        <function-ref name="set" scoped="" ref="0x7f006da4ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f006da4acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006da470a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006da470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006da47420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006da475b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006da47740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006da478d0"/>
        <function-ref name="get" scoped="" ref="0x7f006da47a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006da47bf0"/>
        <function-ref name="set" scoped="" ref="0x7f006da47d80"/>
        <function-ref name="clr" scoped="" ref="0x7f006da45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f006ed8a760" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f006ed8a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed8aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed8ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed8ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed89020"/>
        <function-ref name="get" scoped="" ref="0x7f006ed891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed89340"/>
        <function-ref name="set" scoped="" ref="0x7f006ed894d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed89660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f006ed87c10" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f006ed87c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed86020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed861b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed86340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed864d0"/>
        <function-ref name="get" scoped="" ref="0x7f006ed86660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed867f0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed86980"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed86b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f006ed8d3f0" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f006ed8d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed8d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed8d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed8da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed8dc20"/>
        <function-ref name="get" scoped="" ref="0x7f006ed8ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed8c020"/>
        <function-ref name="set" scoped="" ref="0x7f006ed8c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f006ed898f0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f006ed898f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed89c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed89e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed88020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed881b0"/>
        <function-ref name="get" scoped="" ref="0x7f006ed88340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed884d0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed88660"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f006ed86da0" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f006ed86da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed85180"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed85310"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed854a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed85630"/>
        <function-ref name="get" scoped="" ref="0x7f006ed857c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed85950"/>
        <function-ref name="set" scoped="" ref="0x7f006ed85ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed85c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f006ed8c5d0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f006ed8c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed8c950"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed8cae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed8cc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed8ce00"/>
        <function-ref name="get" scoped="" ref="0x7f006ed8a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed8a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed8a340"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f006ed88a80" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f006ed88a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed88e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed87020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed87340"/>
        <function-ref name="get" scoped="" ref="0x7f006ed874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed87660"/>
        <function-ref name="set" scoped="" ref="0x7f006ed877f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed87980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f006ed84020" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f006ed84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed84530"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed846c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed84850"/>
        <function-ref name="get" scoped="" ref="0x7f006ed849e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed84b70"/>
        <function-ref name="set" scoped="" ref="0x7f006ed84d00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9f3c90" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9f3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9f20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9f2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9f23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9f2550"/>
        <function-ref name="get" scoped="" ref="0x7f006d9f26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9f2870"/>
        <function-ref name="set" scoped="" ref="0x7f006d9f2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9f2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9f0e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9f0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9ef1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9ef350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9ef4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9ef670"/>
        <function-ref name="get" scoped="" ref="0x7f006d9ef800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9ef990"/>
        <function-ref name="set" scoped="" ref="0x7f006d9efb20"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9efcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9ec0a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9ec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9ec420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9ec5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9ec740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9ec8d0"/>
        <function-ref name="get" scoped="" ref="0x7f006d9eca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9ecbf0"/>
        <function-ref name="set" scoped="" ref="0x7f006d9ecd80"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9e93f0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9e93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9e9770"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9e9900"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9e9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9e9c20"/>
        <function-ref name="get" scoped="" ref="0x7f006d9e9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9e8020"/>
        <function-ref name="set" scoped="" ref="0x7f006d9e81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9e66d0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9e66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9e6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9e6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9e6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9e5020"/>
        <function-ref name="get" scoped="" ref="0x7f006d9e51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9e5340"/>
        <function-ref name="set" scoped="" ref="0x7f006d9e54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9e39b0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9e39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9e3d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9e2340"/>
        <function-ref name="get" scoped="" ref="0x7f006d9e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9e2660"/>
        <function-ref name="set" scoped="" ref="0x7f006d9e27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9e0e20" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9e0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9df1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9df350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9df4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9df670"/>
        <function-ref name="get" scoped="" ref="0x7f006d9df800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9df990"/>
        <function-ref name="set" scoped="" ref="0x7f006d9dfb20"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9dfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006d9dc0a0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006d9dc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006d9dc420"/>
        <function-ref name="isInput" scoped="" ref="0x7f006d9dc5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006d9dc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006d9dc8d0"/>
        <function-ref name="get" scoped="" ref="0x7f006d9dca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006d9dcbf0"/>
        <function-ref name="set" scoped="" ref="0x7f006d9dcd80"/>
        <function-ref name="clr" scoped="" ref="0x7f006d9da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed7ca20" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed7ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed7cda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed66020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed66340"/>
        <function-ref name="get" scoped="" ref="0x7f006ed664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed66660"/>
        <function-ref name="set" scoped="" ref="0x7f006ed667f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed66980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed616d0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed616d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed61a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed61be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed61d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed60020"/>
        <function-ref name="get" scoped="" ref="0x7f006ed601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed60340"/>
        <function-ref name="set" scoped="" ref="0x7f006ed604d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed60660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed5b160" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed5b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed5b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed5b670"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed5b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed5b990"/>
        <function-ref name="get" scoped="" ref="0x7f006ed5bb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed5bcb0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed5be40"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed57c90" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed57c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed56230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed563c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed56550"/>
        <function-ref name="get" scoped="" ref="0x7f006ed566e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed56870"/>
        <function-ref name="set" scoped="" ref="0x7f006ed56a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed56b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed516d0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed516d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed51a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed51be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed51d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed50020"/>
        <function-ref name="get" scoped="" ref="0x7f006ed501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed50340"/>
        <function-ref name="set" scoped="" ref="0x7f006ed504d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed4b160" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed4b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed4b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed4b670"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed4b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed4b990"/>
        <function-ref name="get" scoped="" ref="0x7f006ed4bb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed4bcb0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed4be40"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed47c90" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed47c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed460a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed46230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed463c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed46550"/>
        <function-ref name="get" scoped="" ref="0x7f006ed466e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed46870"/>
        <function-ref name="set" scoped="" ref="0x7f006ed46a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed46b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed416d0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed416d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed41a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed41be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed41d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed40020"/>
        <function-ref name="get" scoped="" ref="0x7f006ed401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed40340"/>
        <function-ref name="set" scoped="" ref="0x7f006ed404d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed3c160" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed3c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed3c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed3c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed3c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed3c990"/>
        <function-ref name="get" scoped="" ref="0x7f006ed3cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed3ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed3ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed37c90" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed37c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed360a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed36230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed363c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed36550"/>
        <function-ref name="get" scoped="" ref="0x7f006ed366e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed36870"/>
        <function-ref name="set" scoped="" ref="0x7f006ed36a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed36b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed316d0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed316d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed31a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed31be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed31d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed30020"/>
        <function-ref name="get" scoped="" ref="0x7f006ed301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed30340"/>
        <function-ref name="set" scoped="" ref="0x7f006ed304d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed30660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed2c160" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed2c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed2c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed2c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed2c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed2c990"/>
        <function-ref name="get" scoped="" ref="0x7f006ed2cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed2ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f006ed2ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed27c90" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed27c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed260a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed26230"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed263c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed26550"/>
        <function-ref name="get" scoped="" ref="0x7f006ed266e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed26870"/>
        <function-ref name="set" scoped="" ref="0x7f006ed26a00"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed26b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f006ed216d0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f006ed216d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ed21a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ed21be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ed21d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ed20020"/>
        <function-ref name="get" scoped="" ref="0x7f006ed201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ed20340"/>
        <function-ref name="set" scoped="" ref="0x7f006ed204d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ed20660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006ece5020" loc="61:/home/wtiberti/WSN/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006ece5020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f006f001720"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f006f001720"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ece53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f006ece5690" loc="62:/home/wtiberti/WSN/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f006ece5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f006ece5a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f006ece5ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f006ece5d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f006ece4020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f006ece41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f006ecc4460" loc="69:/home/wtiberti/WSN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f006ecc4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ecc47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f006ecc8b10" loc="66:/home/wtiberti/WSN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f006ecc8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f006ecc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f006ecc5d30" loc="68:/home/wtiberti/WSN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f006ecc5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ecc40e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f006ecc5310" loc="67:/home/wtiberti/WSN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f006ecc5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ecc5690"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f006ecc5820"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f006ecc59b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f006efbd7b0" loc="47:/home/wtiberti/WSN/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f006efbd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006efbdb30"/>
        <function-ref name="runTask" scoped="" ref="0x7f006efbdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f006f03b020" loc="46:/home/wtiberti/WSN/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f006f03b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006f03b3a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f006f03b530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f006f03b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f006eeee5c0" loc="55:/home/wtiberti/WSN/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f006eeee5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006eeee940"/>
        <function-ref name="runTask" scoped="" ref="0x7f006eeeead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f006eeeaac0" loc="56:/home/wtiberti/WSN/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f006eeeaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f006eeeae40"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f006eeec020"/>
        <function-ref name="sleep" scoped="" ref="0x7f006eeec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f006eeef680" loc="54:/home/wtiberti/WSN/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f006eeef680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006eeefa00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f006eeefb90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f006eeefd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f006eec38c0" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f006eec38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f006eec3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f006ef060c0" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f006ef060c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f006ef06440"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f006ef065d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f006ef06760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f006eec58f0" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f006eec58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f006eec5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f006ecac330" loc="46:/home/wtiberti/WSN/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f006ecac330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f006ecac6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f006ecac840"/>
        <function-ref name="led1On" scoped="" ref="0x7f006ecac9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f006ecacb60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f006ecaccf0"/>
        <function-ref name="get" scoped="" ref="0x7f006ecace80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f006ecb8030"/>
        <function-ref name="led2Off" scoped="" ref="0x7f006ecb8670"/>
        <function-ref name="set" scoped="" ref="0x7f006ecb81c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f006ecb8350"/>
        <function-ref name="led2On" scoped="" ref="0x7f006ecb84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f006eca83c0" loc="50:/home/wtiberti/WSN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f006eca83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eca8740"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eca88d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eca8a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eca8bf0"/>
        <function-ref name="get" scoped="" ref="0x7f006eca8d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eca7020"/>
        <function-ref name="set" scoped="" ref="0x7f006eca71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006eca7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006ecaa5c0" loc="46:/home/wtiberti/WSN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006ecaa5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ecaa940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f006eca7660" loc="51:/home/wtiberti/WSN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f006eca7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eca79e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eca7b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eca7d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eca6020"/>
        <function-ref name="get" scoped="" ref="0x7f006eca61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eca6340"/>
        <function-ref name="set" scoped="" ref="0x7f006eca64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006eca6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f006ecaabc0" loc="47:/home/wtiberti/WSN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f006ecaabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f006eca9020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f006eca91b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f006eca9340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f006eca94d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f006eca9660"/>
        <function-ref name="get" scoped="" ref="0x7f006eca97f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f006eca9980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f006eca8020"/>
        <function-ref name="set" scoped="" ref="0x7f006eca9b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f006eca9ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f006eca9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f006eca6980" loc="52:/home/wtiberti/WSN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f006eca6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006eca6d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006eca5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f006eca51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006eca5340"/>
        <function-ref name="get" scoped="" ref="0x7f006eca54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006eca5660"/>
        <function-ref name="set" scoped="" ref="0x7f006eca57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f006eca5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f006ec890f0" loc="44:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f006ec890f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ec89470"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ec89600"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ec89790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ec89920"/>
        <function-ref name="get" scoped="" ref="0x7f006ec89ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ec89c40"/>
        <function-ref name="set" scoped="" ref="0x7f006ec89dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ec88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f006ec88380" loc="45:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f006ec88380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ec88700"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ec88890"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ec88a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ec88bb0"/>
        <function-ref name="get" scoped="" ref="0x7f006ec88d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ec87020"/>
        <function-ref name="set" scoped="" ref="0x7f006ec871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ec87340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f006ec84920" loc="47:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006ec84920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ec84ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f006ec876a0" loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f006ec876a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006ec87a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f006ec87bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006ec87d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006ec84020"/>
        <function-ref name="get" scoped="" ref="0x7f006ec841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006ec84340"/>
        <function-ref name="set" scoped="" ref="0x7f006ec844d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006ec84660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f006ec23220" loc="8:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7f006ec23220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006ec176e0"/>
        <function-ref name="fired" scoped="" ref="0x7f006ec19c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006ec18a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006ec185f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f006ec16020"/>
        <function-ref name="gett0" scoped="" ref="0x7f006ec17b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006ec18170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006ec23e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006ec170d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006ec19340"/>
        <function-ref name="stop" scoped="" ref="0x7f006ec19810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f006eb77a50" loc="13:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7f006eb77a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006eb77dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006eb88020"/>
        <function-ref name="start" scoped="" ref="0x7f006eb881b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006eb88340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f006ec27840" loc="6:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f006ec27840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f006ec27bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f006eb997a0" loc="9:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006eb997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006eb99b20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006eb99cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006eb99e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006ec14020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006ec141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f006eb7f8f0" loc="11:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006eb7f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006eb7fc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006eb7fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006eb89020"/>
        <function-ref name="cancel" scoped="" ref="0x7f006eb891b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006eb89340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f006eb7a180" loc="12:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006eb7a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006eb7a500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f006ec27e80" loc="7:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f006ec27e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f006ec25220"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f006ec253b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f006ec25540"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f006ec256d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f006ec25860"/>
        <function-ref name="get" scoped="" ref="0x7f006ec259f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f006ec25b80"/>
        <function-ref name="led2Off" scoped="" ref="0x7f006ec24340"/>
        <function-ref name="set" scoped="" ref="0x7f006ec25d10"/>
        <function-ref name="led0On" scoped="" ref="0x7f006ec24020"/>
        <function-ref name="led2On" scoped="" ref="0x7f006ec241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TAKS" ref="0x7f006eb6a940" loc="14:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TAKS" scoped="" ref="0x7f006eb6a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TAKS"/>
      </instance>
      <interface-functions>
        <function-ref name="Decrypt" scoped="" ref="0x7f006eb6acc0"/>
        <function-ref name="Decrypt_pw" scoped="" ref="0x7f006eb6ae50"/>
        <function-ref name="Encrypt" scoped="" ref="0x7f006eb80020"/>
        <function-ref name="ComponentFromHexString" scoped="" ref="0x7f006eb801b0"/>
        <function-ref name="Encrypt_pw" scoped="" ref="0x7f006eb80340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f006eb8a7e0" loc="10:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006eb8a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006eb8ab60"/>
        <function-ref name="source" scoped="" ref="0x7f006eb8acf0"/>
        <function-ref name="address" scoped="" ref="0x7f006eb8ae80"/>
        <function-ref name="destination" scoped="" ref="0x7f006ec13030"/>
        <function-ref name="setSource" scoped="" ref="0x7f006ec131c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006ec13350"/>
        <function-ref name="type" scoped="" ref="0x7f006ec134e0"/>
        <function-ref name="setType" scoped="" ref="0x7f006ec13670"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006ec13800"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006ec13990"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006ec13b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006eb3e750" loc="45:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkToRadioAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006eb3e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e93cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f006e93e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006e93c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006e93eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f006e93b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f006e93b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e93e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006e93f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006e93c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006e93f860"/>
        <function-ref name="stop" scoped="" ref="0x7f006e93fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f006eb38d90" loc="49:/home/wtiberti/WSN/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f006eb38d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006eb31220"/>
        <function-ref name="fired" scoped="" ref="0x7f006eb347f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006eb335b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006eb33130"/>
        <function-ref name="getdt" scoped="" ref="0x7f006eb31b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f006eb316a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006eb34c70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006eb359a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006eb33bc0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006eb35e70"/>
        <function-ref name="stop" scoped="" ref="0x7f006eb34370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f006eb2d790" loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f006eb2d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006eb29c40"/>
        <function-ref name="fired" scoped="" ref="0x7f006eb2a220"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006eb29020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006eb2ab20"/>
        <function-ref name="getdt" scoped="" ref="0x7f006eb28590"/>
        <function-ref name="gett0" scoped="" ref="0x7f006eb28110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006eb2a6a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006eb2b3b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006eb29630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006eb2b880"/>
        <function-ref name="stop" scoped="" ref="0x7f006eb2bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f006eb261a0" loc="47:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f006eb261a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006eb26dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006eb309b0" loc="45:/home/wtiberti/WSN/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006eb309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006eb30d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f006eb12020" loc="29:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f006eb12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006eb12e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006eb0e800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006eb0e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f006eb0ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006eb22930" loc="27:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006eb22930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006eb22cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f006eb16790" loc="28:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f006eb16790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006eb14020"/>
        <function-ref name="fired" scoped="" ref="0x7f006eb1c020"/>
        <function-ref name="startAt" scoped="" ref="0x7f006eb1c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006eb1c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006eb144e0"/>
        <function-ref name="start" scoped="" ref="0x7f006eb1e5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f006eb1eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f006ea0f890" loc="61:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006ea0f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006ea0b0d0"/>
        <function-ref name="fired" scoped="" ref="0x7f006ea0d0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f006ea0da50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006ea0d590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006ea0b590"/>
        <function-ref name="start" scoped="" ref="0x7f006ea0e6e0"/>
        <function-ref name="stop" scoped="" ref="0x7f006ea0ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006ea0f080" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006ea0f080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f006f0013a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f006f0013a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ea0f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006ea0bbc0" loc="62:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006ea0bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006ea0aa00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006ea094e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006ea09020"/>
        <function-ref name="overflow" scoped="" ref="0x7f006ea099a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f006d8f1c90" loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f006d8f1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f006d8f00a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f006d8f0230"/>
        <function-ref name="getControlA" scoped="" ref="0x7f006d8f03c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f006d8f0550"/>
        <function-ref name="setControlB" scoped="" ref="0x7f006d8f06e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f006d8f0870"/>
        <function-ref name="getControlB" scoped="" ref="0x7f006d8f0a00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f006d8f0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f006d8fc330" loc="61:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006d8fc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006d8fab30"/>
        <function-ref name="fired" scoped="" ref="0x7f006d8fbb40"/>
        <function-ref name="startAt" scoped="" ref="0x7f006d8fa4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006d8fa020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006d8f8020"/>
        <function-ref name="start" scoped="" ref="0x7f006d8fb170"/>
        <function-ref name="stop" scoped="" ref="0x7f006d8fb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006d906b00" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006d906b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006d906e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006d8f8650" loc="62:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006d8f8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006d8f75b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006d8f6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006d8f7a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f006d8f64e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f006d8eb2c0" loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f006d8eb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f006d8eb640"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f006d8eb7d0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f006d8eb960"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f006d8ebaf0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f006d8ebc80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f006d8ebe10"/>
        <function-ref name="getAssr" scoped="" ref="0x7f006d8ea020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f006d8ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f006d8ef020" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f006d8ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006d8ec9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f006d8ed660"/>
        <function-ref name="get" scoped="" ref="0x7f006d8efc50"/>
        <function-ref name="reset" scoped="" ref="0x7f006d8edb20"/>
        <function-ref name="isOn" scoped="" ref="0x7f006d8ece60"/>
        <function-ref name="set" scoped="" ref="0x7f006d8ed150"/>
        <function-ref name="start" scoped="" ref="0x7f006d8ec020"/>
        <function-ref name="stop" scoped="" ref="0x7f006d8ec4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f006d8f6a90" loc="65:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006d8f6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006d8f2e60"/>
        <function-ref name="test" scoped="" ref="0x7f006d8f24e0"/>
        <function-ref name="get" scoped="" ref="0x7f006d8f56f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f006d8f1350"/>
        <function-ref name="getScale" scoped="" ref="0x7f006d8f1860"/>
        <function-ref name="reset" scoped="" ref="0x7f006d8f35d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006d8f3110"/>
        <function-ref name="isOn" scoped="" ref="0x7f006d8f29a0"/>
        <function-ref name="set" scoped="" ref="0x7f006d8f5bb0"/>
        <function-ref name="start" scoped="" ref="0x7f006d8f3a90"/>
        <function-ref name="stop" scoped="" ref="0x7f006d8f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f006ea81020" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f006ea81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f006ea813a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f006ea81530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f006ea816c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f006ea81850"/>
        <function-ref name="setControlB" scoped="" ref="0x7f006ea819e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f006ea81b70"/>
        <function-ref name="getControlB" scoped="" ref="0x7f006ea81d00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f006ea80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f006ea7da40" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f006ea7da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f006ea7ddc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f006ea7b020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f006ea7b1b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f006ea7b340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f006ea7b4d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f006ea7b660"/>
        <function-ref name="getAssr" scoped="" ref="0x7f006ea7b7f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f006ea7b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f006ea80520" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f006ea80520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006ea7d020"/>
        <function-ref name="fired" scoped="" ref="0x7f006ea7fb80"/>
        <function-ref name="get" scoped="" ref="0x7f006ea7f1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f006ea7e090"/>
        <function-ref name="isOn" scoped="" ref="0x7f006ea7d4e0"/>
        <function-ref name="set" scoped="" ref="0x7f006ea7f670"/>
        <function-ref name="start" scoped="" ref="0x7f006ea7e550"/>
        <function-ref name="stop" scoped="" ref="0x7f006ea7ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006ea8ac70" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006ea8ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006ea83020"/>
        <function-ref name="test" scoped="" ref="0x7f006ea84610"/>
        <function-ref name="get" scoped="" ref="0x7f006ea878e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f006ea834e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f006ea839f0"/>
        <function-ref name="reset" scoped="" ref="0x7f006ea857a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006ea852e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006ea84ad0"/>
        <function-ref name="set" scoped="" ref="0x7f006ea87da0"/>
        <function-ref name="start" scoped="" ref="0x7f006ea85c60"/>
        <function-ref name="stop" scoped="" ref="0x7f006ea84150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f006ea722b0" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f006ea722b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f006ea72630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f006ea727c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f006ea72950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f006ea72ae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f006ea72c70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f006ea72e00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f006ea71020"/>
        <function-ref name="setControlA" scoped="" ref="0x7f006ea711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f006ea6da70" loc="85:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f006ea6da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f006ea6ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f006ea6c230" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f006ea6c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f006ea6c5b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f006ea6c740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f006ea6c8d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f006ea6ca60"/>
        <function-ref name="countBusy" scoped="" ref="0x7f006ea6cbf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f006ea6cd80"/>
        <function-ref name="getAssr" scoped="" ref="0x7f006ea6b020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f006ea6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f006ea716b0" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f006ea716b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006ea6d110"/>
        <function-ref name="fired" scoped="" ref="0x7f006ea70da0"/>
        <function-ref name="get" scoped="" ref="0x7f006ea703d0"/>
        <function-ref name="reset" scoped="" ref="0x7f006ea6f2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006ea6d5d0"/>
        <function-ref name="set" scoped="" ref="0x7f006ea70890"/>
        <function-ref name="start" scoped="" ref="0x7f006ea6f760"/>
        <function-ref name="stop" scoped="" ref="0x7f006ea6fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006ea77020" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006ea77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006ea74350"/>
        <function-ref name="test" scoped="" ref="0x7f006ea759a0"/>
        <function-ref name="get" scoped="" ref="0x7f006ea77c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f006ea74810"/>
        <function-ref name="getScale" scoped="" ref="0x7f006ea74d20"/>
        <function-ref name="reset" scoped="" ref="0x7f006ea76b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f006ea76660"/>
        <function-ref name="isOn" scoped="" ref="0x7f006ea75e60"/>
        <function-ref name="set" scoped="" ref="0x7f006ea76150"/>
        <function-ref name="start" scoped="" ref="0x7f006ea75020"/>
        <function-ref name="stop" scoped="" ref="0x7f006ea754e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f006e9d6490" loc="74:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f006e9d6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006e9d6810"/>
        <function-ref name="runTask" scoped="" ref="0x7f006e9d69a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f006e9da1d0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006e9da1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e9d7b30"/>
        <function-ref name="fired" scoped="" ref="0x7f006e9d99f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f006e9d74e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e9d7020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006e9d6020"/>
        <function-ref name="start" scoped="" ref="0x7f006e9d9020"/>
        <function-ref name="stop" scoped="" ref="0x7f006e9d9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006e9e0cf0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006e9e0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e9db220"/>
        <function-ref name="fired" scoped="" ref="0x7f006e9de7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006e9dc590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006e9dc110"/>
        <function-ref name="getdt" scoped="" ref="0x7f006e9dbb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f006e9db6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e9dec40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006e9df940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006e9dcba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006e9dfe10"/>
        <function-ref name="stop" scoped="" ref="0x7f006e9de340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f006e959180" loc="58:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f006e959180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e956630"/>
        <function-ref name="fired" scoped="" ref="0x7f006e958bf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006e957990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006e957510"/>
        <function-ref name="getdt" scoped="" ref="0x7f006e954020"/>
        <function-ref name="gett0" scoped="" ref="0x7f006e956ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e957090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006e959d70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006e956020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006e9582a0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e958770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f006e954450" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSkew" scoped="" ref="0x7f006e954450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f006e9547d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006e961bc0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006e961bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e95b220"/>
        <function-ref name="fired" scoped="" ref="0x7f006e95e740"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006e95d570"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006e95d0d0"/>
        <function-ref name="getdt" scoped="" ref="0x7f006e95bb60"/>
        <function-ref name="gett0" scoped="" ref="0x7f006e95b6c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e95ebe0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006e95f860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006e95dba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006e95fd50"/>
        <function-ref name="stop" scoped="" ref="0x7f006e95e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f006d8a0020" loc="153:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f006d8a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006d8a03a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f006d8a0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f006d8a75f0" loc="65:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f006d8a75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006d8a3a80"/>
        <function-ref name="fired" scoped="" ref="0x7f006d8a5090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006d8a5e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006d8a5990"/>
        <function-ref name="getdt" scoped="" ref="0x7f006d8a24a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f006d8a2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006d8a5510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006d8a6210"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006d8a3470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006d8a66e0"/>
        <function-ref name="stop" scoped="" ref="0x7f006d8a6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f006d8a18b0" loc="67:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSkew" scoped="" ref="0x7f006d8a18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f006d8a1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f006d8a2890" loc="66:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Platform" scoped="" ref="0x7f006d8a2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f006d8a2c10"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f006d8a2da0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f006d8a1020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f006d8a11b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f006d8a1340"/>
        <function-ref name="localTime" scoped="" ref="0x7f006d8a14d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f006d8a1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006d8ad0d0" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006d8ad0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006d8a9650"/>
        <function-ref name="fired" scoped="" ref="0x7f006d8acbb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f006d8aa9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f006d8aa530"/>
        <function-ref name="getdt" scoped="" ref="0x7f006d8a7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f006d8a9af0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006d8aa090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f006d8adce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f006d8a9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f006d8ac220"/>
        <function-ref name="stop" scoped="" ref="0x7f006d8ac710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f006e951020" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f006e951020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e951c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f006e947300" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006e947300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e946150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006e946ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006e946610"/>
        <function-ref name="overflow" scoped="" ref="0x7f006e945020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006e93aaa0" loc="41:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006e93aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e93ae20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e937020"/>
        <function-ref name="start" scoped="" ref="0x7f006e9371b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e937340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f006e9321d0" loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f006e9321d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f006e932550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006e9327e0" loc="48:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006e9327e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e932b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e932cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e932e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e931030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e9311c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006e937b10" loc="43:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006e937b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e936020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e9361b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e936340"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e9364d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e936660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f006e934a40" loc="45:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f006e934a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e934dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f006e91f2a0" loc="52:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e91f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f006e91f620"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f006e91f7b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f006e91f940"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f006e91fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e936e40" loc="44:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e936e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e9341e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f006e929810" loc="51:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e929810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006e929b90"/>
        <function-ref name="noAck" scoped="" ref="0x7f006e929d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006e92e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f006e918670" loc="53:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f006e918670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f006e9189f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f006e918b80"/>
        <function-ref name="getRetries" scoped="" ref="0x7f006e918d10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f006e926020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f006e9261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006e931470" loc="49:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006e931470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006e9317f0"/>
        <function-ref name="source" scoped="" ref="0x7f006e931980"/>
        <function-ref name="address" scoped="" ref="0x7f006e931b10"/>
        <function-ref name="destination" scoped="" ref="0x7f006e931ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e931e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e92f020"/>
        <function-ref name="type" scoped="" ref="0x7f006e92f1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f006e92f340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e92f4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006e92f660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006e92f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f006e915650" loc="54:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f006e915650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f006e9159d0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e915b60"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e915cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f006e90c7c0" loc="56:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f006e90c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e91bd50"/>
        <function-ref name="clear" scoped="" ref="0x7f006e9144c0"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e91b620"/>
        <function-ref name="set" scoped="" ref="0x7f006e914bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f006e90b880" loc="57:/home/wtiberti/WSN/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e90b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e909020"/>
        <function-ref name="clear" scoped="" ref="0x7f006e909750"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e90a7c0"/>
        <function-ref name="set" scoped="" ref="0x7f006e909e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006e904140" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006e904140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e9044c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e904650"/>
        <function-ref name="start" scoped="" ref="0x7f006e9047e0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e904970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f006e8f0a00" loc="62:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e8f0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7f006e8eec00"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e8ee6b0"/>
        <function-ref name="set" scoped="" ref="0x7f006e8ed700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f006e901bb0" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f006e901bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f006e8ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006e8ff2b0" loc="52:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006e8ff2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8ff630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e8ff7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e8ff950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e8ffae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e8ffc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006e9031d0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006e9031d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e903550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e9036e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e903870"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e903a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e903b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f006e901020" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f006e901020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e9013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f006e8f2400" loc="61:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e8f2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8f1c10"/>
        <function-ref name="get" scoped="" ref="0x7f006e8f16c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e8f1170"/>
        <function-ref name="set" scoped="" ref="0x7f006e8f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f006e8fc320" loc="56:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e8fc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f006e8fc6a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f006e8fc830"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f006e8fc9c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f006e8fcb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e9023f0" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e9023f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e902770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f006e8e92b0" loc="66:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e8e92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e8e8840"/>
        <function-ref name="clear" scoped="" ref="0x7f006e8e5020"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e8e8110"/>
        <function-ref name="set" scoped="" ref="0x7f006e8e5750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f006e8e7d80" loc="65:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e8e7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e8ea9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f006e8f4df0" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e8f4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8f85e0"/>
        <function-ref name="get" scoped="" ref="0x7f006e8f8090"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e8f9ac0"/>
        <function-ref name="set" scoped="" ref="0x7f006e8f8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f006e8fd800" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e8fd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006e8fdb80"/>
        <function-ref name="noAck" scoped="" ref="0x7f006e8fdd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006e8fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f006e8fce10" loc="57:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f006e8fce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f006e8fb1c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f006e8fb350"/>
        <function-ref name="getRetries" scoped="" ref="0x7f006e8fb4e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f006e8fb670"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f006e8fb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006e8fe020" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006e8fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006e8fe3a0"/>
        <function-ref name="source" scoped="" ref="0x7f006e8fe530"/>
        <function-ref name="address" scoped="" ref="0x7f006e8fe6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f006e8fe850"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e8fe9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e8feb70"/>
        <function-ref name="type" scoped="" ref="0x7f006e8fed00"/>
        <function-ref name="setType" scoped="" ref="0x7f006e8fd020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e8fd1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006e8fd340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006e8fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f006e8fbad0" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f006e8fbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f006e8fbe50"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e8fa020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e8fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f006e8e7520" loc="63:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e8e7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f006e8e78a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f006e8e43f0" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e8e43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e8e3970"/>
        <function-ref name="clear" scoped="" ref="0x7f006e8e10d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e8e3240"/>
        <function-ref name="set" scoped="" ref="0x7f006e8e1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006e8e09a0" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006e8e09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e8e0d20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e8dd020"/>
        <function-ref name="start" scoped="" ref="0x7f006e8dd1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e8dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f006e8b53b0" loc="85:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e8b53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8b4ac0"/>
        <function-ref name="get" scoped="" ref="0x7f006e8b4570"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e8b4020"/>
        <function-ref name="set" scoped="" ref="0x7f006e8b2090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f006e8d44b0" loc="65:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f006e8d44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f006e8d4830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f006e8ce580" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f006e8ce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006e8ce900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006e8cea90"/>
        <function-ref name="request" scoped="" ref="0x7f006e8cec20"/>
        <function-ref name="granted" scoped="" ref="0x7f006e8cedb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006e8cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f006e8d9600" loc="57:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f006e8d9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f006e8d9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f006e8ac660" loc="90:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e8ac660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e8aace0"/>
        <function-ref name="clear" scoped="" ref="0x7f006e8a9460"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e8aa5b0"/>
        <function-ref name="set" scoped="" ref="0x7f006e8a9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006e8ddb10" loc="54:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006e8ddb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e8dc020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e8dc1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e8dc340"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e8dc4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e8dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f006e8daa40" loc="56:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f006e8daa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e8dadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f006e8bf760" loc="69:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006e8bf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f006e8bfae0"/>
        <function-ref name="address" scoped="" ref="0x7f006e8bfc70"/>
        <function-ref name="destination" scoped="" ref="0x7f006e8bfe00"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e8c8020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e8c81b0"/>
        <function-ref name="pan" scoped="" ref="0x7f006e8c8340"/>
        <function-ref name="setPan" scoped="" ref="0x7f006e8c84d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e8c8660"/>
        <function-ref name="localPan" scoped="" ref="0x7f006e8c87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f006e8c8bb0" loc="70:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f006e8c8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8c70a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e8c7230"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e8c73c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e8c7550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e8c76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f006e8be4b0" loc="74:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e8be4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f006e8be830"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f006e8be9c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f006e8beb50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f006e8bece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f006e8b9e80" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e8b9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8b65e0"/>
        <function-ref name="get" scoped="" ref="0x7f006e8b6090"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e8b8ad0"/>
        <function-ref name="set" scoped="" ref="0x7f006e8b6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e8dce40" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e8dce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e8da1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f006e8d73d0" loc="59:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f006e8d73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8d7750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e8d78e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e8d7a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e8d7c00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e8d7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f006e8af550" loc="89:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e8af550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e8aeb00"/>
        <function-ref name="clear" scoped="" ref="0x7f006e8ad2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e8ae3d0"/>
        <function-ref name="set" scoped="" ref="0x7f006e8ad9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f006e8b1020" loc="88:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e8b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e8b1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f006e8bc8e0" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e8bc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e8b9090"/>
        <function-ref name="get" scoped="" ref="0x7f006e8baaf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e8ba5a0"/>
        <function-ref name="set" scoped="" ref="0x7f006e8b95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f006e8c7a10" loc="73:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e8c7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006e8c7d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f006e8be020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006e8be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f006e8d5020" loc="63:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f006e8d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e8d53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e8d5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e8d56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e8d5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e8d59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f006e8bd020" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f006e8bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f006e8bd3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f006e8bd530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f006e8bd6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f006e8bd850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f006e8bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006e8d9c30" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006e8d9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006e8d8020"/>
        <function-ref name="source" scoped="" ref="0x7f006e8d81b0"/>
        <function-ref name="address" scoped="" ref="0x7f006e8d8340"/>
        <function-ref name="destination" scoped="" ref="0x7f006e8d84d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e8d8660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e8d87f0"/>
        <function-ref name="type" scoped="" ref="0x7f006e8d8980"/>
        <function-ref name="setType" scoped="" ref="0x7f006e8d8b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e8d8ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006e8d8e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006e8d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f006e8d5d50" loc="64:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f006e8d5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e8d4100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f006e8bdcb0" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f006e8bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f006e8bc0a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e8bc230"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e8bc3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f006e8b2710" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e8b2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f006e8b2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f006e8a63c0" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f006e8a63c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f006e8a6740"/>
        <function-ref name="suspend" scoped="" ref="0x7f006e8a68d0"/>
        <function-ref name="resume" scoped="" ref="0x7f006e8a6a60"/>
        <function-ref name="run" scoped="" ref="0x7f006e8a6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f006e859aa0" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006e859aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e859e40"/>
        <function-ref name="clearAll" scoped="" ref="0x7f006e857020"/>
        <function-ref name="get" scoped="" ref="0x7f006e8571b0"/>
        <function-ref name="set" scoped="" ref="0x7f006e857340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f006e894cb0" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f006e894cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f006e8590a0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f006e859230"/>
        <function-ref name="getNode" scoped="" ref="0x7f006e8593c0"/>
        <function-ref name="evicted" scoped="" ref="0x7f006e859550"/>
        <function-ref name="getIndex" scoped="" ref="0x7f006e8596e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f006d844b40" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006d844b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d843020"/>
        <function-ref name="clearAll" scoped="" ref="0x7f006d8431b0"/>
        <function-ref name="get" scoped="" ref="0x7f006d843340"/>
        <function-ref name="set" scoped="" ref="0x7f006d8434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f006d845de0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f006d845de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f006d844180"/>
        <function-ref name="insertNode" scoped="" ref="0x7f006d844310"/>
        <function-ref name="getNode" scoped="" ref="0x7f006d8444a0"/>
        <function-ref name="evicted" scoped="" ref="0x7f006d844630"/>
        <function-ref name="getIndex" scoped="" ref="0x7f006d8447c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006d845810" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006d845810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006d845b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f006e82a860" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f006e82a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f006e82abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f006e83e9f0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f006e83e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f006e83ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f006e82cb70" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f006e82cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006e839020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f006e8391b0"/>
        <function-ref name="source" scoped="" ref="0x7f006e839340"/>
        <function-ref name="destination" scoped="" ref="0x7f006e8394d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e839660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e8397f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006e839980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f006e8345d0" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f006e8345d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f006e834950"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f006e834ae0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f006e834c70"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f006e834e00"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f006e83c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f006e808400" loc="61:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e808400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006e808780"/>
        <function-ref name="wait" scoped="" ref="0x7f006e808910"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e808aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7f006e808c30"/>
        <function-ref name="getNow" scoped="" ref="0x7f006e808dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f006e803e20" loc="62:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f006e803e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e80c1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e80c350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e80c4e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e80c670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e80c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f006e80cdd0" loc="64:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f006e80cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e802500"/>
        <function-ref name="clear" scoped="" ref="0x7f006e802c30"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e807da0"/>
        <function-ref name="set" scoped="" ref="0x7f006e8003b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f006e84f3e0" loc="43:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f006e84f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e84f760"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e84f8f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f006e84fa80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f006e84fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f006e83f3c0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f006e83f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f006e83f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f006e846380" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f006e846380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f006e846700"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f006e846890"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f006e846a20"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f006e846bb0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f006e846d40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f006e852020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f006e8521b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f006e852340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f006e80f470" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e80f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f006e80f7f0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f006e80f980"/>
        <function-ref name="setFCF" scoped="" ref="0x7f006e80fb10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f006e80fca0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f006e80fe30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f006e82b020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f006e82b1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f006e82b340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f006e82b4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f006e82b660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f006e82b7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f006e82b980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f006e82bb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f006e82bda0"/>
        <function-ref name="localPan" scoped="" ref="0x7f006e829020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f006e8291b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f006e829340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f006e8294d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f006e829660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e8297f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f006e829980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f006e829b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f006e829ca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f006e829e30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f006e80e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f006e841750" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f006e841750"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f006e841ad0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f006e841c60"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f006e841df0"/>
        <function-ref name="getSender" scoped="" ref="0x7f006e84e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f006e83d020" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f006e83d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f006e83d3a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f006e83d530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f006e83d6c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f006e83d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f006e77f480" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e77f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006e77f820"/>
        <function-ref name="wait" scoped="" ref="0x7f006e77f9b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e77fb40"/>
        <function-ref name="isFree" scoped="" ref="0x7f006e77fcd0"/>
        <function-ref name="getNow" scoped="" ref="0x7f006e77fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f006e77d020" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006e77d020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f006f001720"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f006f001720"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f006ebd0180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e77a870"/>
        <function-ref name="fired" scoped="" ref="0x7f006e77b840"/>
        <function-ref name="startAt" scoped="" ref="0x7f006e77a220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e77bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006e77ad30"/>
        <function-ref name="start" scoped="" ref="0x7f006e77de30"/>
        <function-ref name="stop" scoped="" ref="0x7f006e77b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f006e77e140" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f006e77e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f006e77e4c0"/>
        <function-ref name="suspend" scoped="" ref="0x7f006e77e650"/>
        <function-ref name="resume" scoped="" ref="0x7f006e77e7e0"/>
        <function-ref name="run" scoped="" ref="0x7f006e77e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f006d826a40" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006d826a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006d826de0"/>
        <function-ref name="wait" scoped="" ref="0x7f006d825020"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d8251b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f006d825340"/>
        <function-ref name="getNow" scoped="" ref="0x7f006d8254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f006d8259c0" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006d8259c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f006ebd0180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006d822260"/>
        <function-ref name="fired" scoped="" ref="0x7f006d823220"/>
        <function-ref name="startAt" scoped="" ref="0x7f006d823ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006d8236e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006d822720"/>
        <function-ref name="start" scoped="" ref="0x7f006d824810"/>
        <function-ref name="stop" scoped="" ref="0x7f006d824d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f006d822b10" loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f006d822b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f006d820020"/>
        <function-ref name="suspend" scoped="" ref="0x7f006d8201b0"/>
        <function-ref name="resume" scoped="" ref="0x7f006d820340"/>
        <function-ref name="run" scoped="" ref="0x7f006d8204d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e6d2a50" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e6d2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e6d2dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e6d1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e6d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e6d1440" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e6d1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e6d17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f006e6d4740" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f006e6d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f006e6d4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006e6d7bd0" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006e6d7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e6d6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e6d61b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e6d6340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e6d64d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e6d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006e6d69e0" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006e6d69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e6d6d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e6d5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e6d51b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e6d5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e6d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f006e6d4020" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f006e6d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e6d43c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e6d4dd0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e6d4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e6d2180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e6d2310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e6d24a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e6d2630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e6d27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e6d1a50" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e6d1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006e6d1dd0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f006e6d0020"/>
        <function-ref name="source" scoped="" ref="0x7f006e6d01b0"/>
        <function-ref name="destination" scoped="" ref="0x7f006e6d0340"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e6d04d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e6d0660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006e6d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e6d5850" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e6d5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e6d5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006e6d8550" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006e6d8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006e6d88d0"/>
        <function-ref name="source" scoped="" ref="0x7f006e6d8a60"/>
        <function-ref name="address" scoped="" ref="0x7f006e6d8bf0"/>
        <function-ref name="destination" scoped="" ref="0x7f006e6d8d80"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e6d7020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e6d71b0"/>
        <function-ref name="type" scoped="" ref="0x7f006e6d7340"/>
        <function-ref name="setType" scoped="" ref="0x7f006e6d74d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e6d7660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006e6d77f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006e6d7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006d805c70" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006d805c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d804020"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d8041b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d804340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006d8045d0" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006d8045d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d804950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f006d8068b0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f006d8068b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f006d806c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006d809d60" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006d809d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d808180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d808310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006d8084a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d808630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d8087c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006d80c9f0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006d80c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d80cd70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d80a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d80a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d80a340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006d80a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006d808b40" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006d808b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d807020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006d8071b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d807340"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d8074d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d807660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f006d806190" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f006d806190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d806530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006d805020" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006d805020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d8053a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d805530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d8056c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d805850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006d8059e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006d8079e0" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006d8079e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d807d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006d804be0" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006d804be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006d803020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f006d8031b0"/>
        <function-ref name="source" scoped="" ref="0x7f006d803340"/>
        <function-ref name="destination" scoped="" ref="0x7f006d8034d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006d803660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006d8037f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006d803980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f006d803bd0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f006d803bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f006d802020"/>
        <function-ref name="changed" scoped="" ref="0x7f006d8021b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f006d802340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f006d8024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006d80a720" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006d80a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006d80aaa0"/>
        <function-ref name="source" scoped="" ref="0x7f006d80ac30"/>
        <function-ref name="address" scoped="" ref="0x7f006d80adc0"/>
        <function-ref name="destination" scoped="" ref="0x7f006d809020"/>
        <function-ref name="setSource" scoped="" ref="0x7f006d8091b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006d809340"/>
        <function-ref name="type" scoped="" ref="0x7f006d8094d0"/>
        <function-ref name="setType" scoped="" ref="0x7f006d809660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006d8097f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006d809980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006d809b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f006e6f3b30" loc="54:/home/wtiberti/WSN/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f006e6f3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f006e6f0020"/>
        <function-ref name="changed" scoped="" ref="0x7f006e6f01b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f006e6f0340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f006e6f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e6c94a0" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e6c94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e6c9820"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e6c99b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e6c9b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f006e6c9d90" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f006e6c9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006e6ba180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006e6ba310"/>
        <function-ref name="request" scoped="" ref="0x7f006e6ba4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f006e6ba630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006e6ba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f006e6caa10" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f006e6caa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e6cad90"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e6c9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e6c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f006e656150" loc="86:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f006e656150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f006e6564f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f006e656680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f006e6551f0" loc="89:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006e6551f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f006e655590"/>
        <function-ref name="configure" scoped="" ref="0x7f006e655720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f006e657390" loc="85:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f006e657390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006e657730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006e6578c0"/>
        <function-ref name="request" scoped="" ref="0x7f006e657a50"/>
        <function-ref name="granted" scoped="" ref="0x7f006e657be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006e657d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f006e6568d0" loc="87:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006e6568d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f006e656c50"/>
        <function-ref name="userId" scoped="" ref="0x7f006e656de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006d7b6d70" loc="44:/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006d7b6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006d7b4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f006d7b4410" loc="45:/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f006d7b4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f006d7b4790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f006d7b4920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f006d7b4ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f006d7b4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f006d7b1220" loc="52:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f006d7b1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f006d7b15c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f006d7b1750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f006d7b0400" loc="56:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006d7b0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f006d7b07a0"/>
        <function-ref name="configure" scoped="" ref="0x7f006d7b0930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f006d7b0bc0" loc="57:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f006d7b0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f006d7af020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f006d7af1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f006d7af340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f006d7af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f006d7b2490" loc="51:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f006d7b2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006d7b2830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006d7b29c0"/>
        <function-ref name="request" scoped="" ref="0x7f006d7b2b50"/>
        <function-ref name="granted" scoped="" ref="0x7f006d7b2ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006d7b2e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f006d7b19a0" loc="53:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006d7b19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f006d7b1d20"/>
        <function-ref name="userId" scoped="" ref="0x7f006d7b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f006d7af7a0" loc="68:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f006d7af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006d7afb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f006d7afcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e61d120" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e61d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e61d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e61d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e61d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e61da50" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e61da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e61ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f006e623d30" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f006e623d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f006e6210e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006e652d90" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006e652d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e624180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e624310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e6244a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e624630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e6247c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f006e61e470" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e61e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e61e7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e61e980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e61eb10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e61eca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e61ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f006e621390" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e621390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f006e621710"/>
        <function-ref name="getDSN" scoped="" ref="0x7f006e6218a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f006e621a30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f006e621bc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f006e621d50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f006e620020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f006e6201b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f006e620340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f006e6204d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f006e620660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f006e6207f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f006e620980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f006e620b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f006e620da0"/>
        <function-ref name="localPan" scoped="" ref="0x7f006e61f020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f006e61f1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f006e61f340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f006e61f4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f006e61f660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e61f7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f006e61f980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f006e61fb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f006e61fca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f006e61fe30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f006e61e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f006e624a10" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f006e624a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e624d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006e623020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e6231b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e623340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e6234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f006e623760" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f006e623760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e623ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e5e5950" loc="69:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e5e5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e5e5cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e5e5e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e5e4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e5e42b0" loc="70:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e5e42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e5e4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f006e5e7020" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006e5e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e5e73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e5e7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e5e76c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e5e7850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e5e79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f006e5e65d0" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f006e5e65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e5e6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e5e48c0" loc="71:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e5e48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e5e4c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e5e4dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e5e3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e5e31b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e5e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f006e5e7c70" loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f006e5e7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e5e6020"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e5e61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e5e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f006e616020" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f006e616020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e6163a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e616530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e6166c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f006e616950" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f006e616950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e616cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f006e5e6be0" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f006e5e6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e5e5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e5e51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e5e5340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e5e54d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e5e5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e547020" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e547020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e5473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f006e54cdd0" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006e54cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f006e54b180"/>
        <function-ref name="address" scoped="" ref="0x7f006e54b310"/>
        <function-ref name="destination" scoped="" ref="0x7f006e54b4a0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006e54b630"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006e54b7c0"/>
        <function-ref name="pan" scoped="" ref="0x7f006e54b950"/>
        <function-ref name="setPan" scoped="" ref="0x7f006e54bae0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e54bc70"/>
        <function-ref name="localPan" scoped="" ref="0x7f006e54be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e54a080" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e54a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e54a400"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e54a590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e54a720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e54a8b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e54aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f006e54fdc0" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006e54fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f006e54e180"/>
        <function-ref name="getDSN" scoped="" ref="0x7f006e54e310"/>
        <function-ref name="setFCF" scoped="" ref="0x7f006e54e4a0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f006e54e630"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f006e54e7c0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f006e54e950"/>
        <function-ref name="setDSN" scoped="" ref="0x7f006e54eae0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f006e54ec70"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f006e54ee00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f006e54d020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f006e54d1b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f006e54d340"/>
        <function-ref name="localAddr" scoped="" ref="0x7f006e54d4d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f006e54d760"/>
        <function-ref name="localPan" scoped="" ref="0x7f006e54d8f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f006e54da80"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f006e54dc10"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f006e54dda0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f006e54c020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006e54c1b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f006e54c340"/>
        <function-ref name="getFCF" scoped="" ref="0x7f006e54c4d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f006e54c660"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f006e54c7f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f006e54c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e549390" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e549390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e549710"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e5498a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e549a30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e549bc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e549d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e54acd0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e54acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e5490a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006d7440c0" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006d7440c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d744440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f006d7492e0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f006d7492e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f006d749660"/>
        <function-ref name="address" scoped="" ref="0x7f006d7497f0"/>
        <function-ref name="destination" scoped="" ref="0x7f006d749980"/>
        <function-ref name="setSource" scoped="" ref="0x7f006d749b10"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006d749ca0"/>
        <function-ref name="pan" scoped="" ref="0x7f006d749e30"/>
        <function-ref name="setPan" scoped="" ref="0x7f006d748020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006d7481b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f006d748340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006d748590" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006d748590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d748910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d748aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d748c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d748dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006d747020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f006d74c020" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f006d74c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f006d74c3a0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f006d74c530"/>
        <function-ref name="setFCF" scoped="" ref="0x7f006d74c6c0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f006d74c850"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f006d74c9e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f006d74cb70"/>
        <function-ref name="setDSN" scoped="" ref="0x7f006d74cd00"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f006d74b020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f006d74b1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f006d74b340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f006d74b4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f006d74b660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f006d74b7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f006d74ba80"/>
        <function-ref name="localPan" scoped="" ref="0x7f006d74bc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f006d74bda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f006d74a020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f006d74a1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f006d74a340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006d74a4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f006d74a660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f006d74a7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f006d74a980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f006d74ab10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f006d74aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f006d7478e0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f006d7478e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f006d747c60"/>
        <function-ref name="changed" scoped="" ref="0x7f006d747df0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f006d745020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f006d7451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006d7472b0" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006d7472b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d747630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006d745440" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006d745440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d7457c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d745950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d745ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d745c70"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006d745e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e514600" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e514600"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e514980"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e514b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e514ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e513020" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e513020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e5133a0"/>
        <function-ref name="header" scoped="" ref="0x7f006e513530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f006e512e80" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006e512e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e511220"/>
        <function-ref name="clearAll" scoped="" ref="0x7f006e5113b0"/>
        <function-ref name="get" scoped="" ref="0x7f006e511540"/>
        <function-ref name="set" scoped="" ref="0x7f006e5116d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006e515490" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006e515490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e515810"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e5159a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e515b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e5137c0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e5137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f006e513b40"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f006e513cd0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f006e513e60"/>
        <function-ref name="getSender" scoped="" ref="0x7f006e512020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006e515d80" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e515d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e514180"/>
        <function-ref name="header" scoped="" ref="0x7f006e514310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f006e512270" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f006e512270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f006e5125f0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f006e512780"/>
        <function-ref name="getNode" scoped="" ref="0x7f006e512910"/>
        <function-ref name="evicted" scoped="" ref="0x7f006e512aa0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f006e512c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006d6f4750" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006d6f4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d6f4ad0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d6f4c60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d6f4df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006d6f30c0" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006d6f30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d6f3440"/>
        <function-ref name="header" scoped="" ref="0x7f006d6f35d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f006d6f0060" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f006d6f0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d6f03e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f006d6f0570"/>
        <function-ref name="get" scoped="" ref="0x7f006d6f0700"/>
        <function-ref name="set" scoped="" ref="0x7f006d6f0890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006d6f5020" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006d6f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d6f53a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d6f5530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d6f56c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f006d6f1400" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f006d6f1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f006d6f1780"/>
        <function-ref name="insertNode" scoped="" ref="0x7f006d6f1910"/>
        <function-ref name="getNode" scoped="" ref="0x7f006d6f1aa0"/>
        <function-ref name="evicted" scoped="" ref="0x7f006d6f1c30"/>
        <function-ref name="getIndex" scoped="" ref="0x7f006d6f1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006d6f5910" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006d6f5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d6f5c90"/>
        <function-ref name="header" scoped="" ref="0x7f006d6f5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006d6f40e0" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006d6f40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006d6f4460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f006d6f3820" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f006d6f3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f006d6f3ba0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f006d6f3d30"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f006d6f1020"/>
        <function-ref name="getSender" scoped="" ref="0x7f006d6f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e500cd0" loc="85:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e500cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e4ff0a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e4ff230"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e4ff3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e4ff650" loc="86:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e4ff650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e4ff9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f006e4fb020" loc="93:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f006e4fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006e4fb3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f006e4fb530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006e4fb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006e5024b0" loc="77:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006e5024b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e502830"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e5029c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e502b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e500020" loc="80:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e500020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e5003a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e500530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e5006c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e500850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e5009e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e4ffc60" loc="87:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e4ffc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e4fe020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e4fe1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e4fe340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e4fe4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e4fe660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f006e4fd2f0" loc="92:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f006e4fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f006e4fd670"/>
        <function-ref name="setRetries" scoped="" ref="0x7f006e4fd800"/>
        <function-ref name="getRetries" scoped="" ref="0x7f006e4fd990"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f006e4fdb20"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f006e4fdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e502de0" loc="78:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e502de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e501180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f006e4fe8b0" loc="88:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e4fe8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006e4fec30"/>
        <function-ref name="noAck" scoped="" ref="0x7f006e4fedc0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006e4fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f006e5013d0" loc="79:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f006e5013d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f006e501750"/>
        <function-ref name="setRetries" scoped="" ref="0x7f006e5018e0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f006e501a70"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f006e501c00"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f006e501d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006e4f6780" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006e4f6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e4f6b00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e4f6c90"/>
        <function-ref name="start" scoped="" ref="0x7f006e4f6e20"/>
        <function-ref name="stop" scoped="" ref="0x7f006e4e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e4de5d0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e4de5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e4de950"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e4deae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e4dec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e4dd020" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e4dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e4dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006e4e22b0" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006e4e22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e4e2630"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e4e27c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e4e2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e4e1270" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e4e1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e4e15f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e4e1780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e4e1910"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e4e1aa0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e4e1c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f006e4e1e80" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f006e4e1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f006e4df220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f006e4df3b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f006e4df540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f006e4df6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f006e4df9c0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f006e4df9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e4dfd40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e4de020"/>
        <function-ref name="start" scoped="" ref="0x7f006e4de1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e4de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e4e2be0" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e4e2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e4e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e4dd630" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e4dd630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e4dd9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e4ddb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e4ddcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e4dde60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e4dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f006d6cfb40" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f006d6cfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f006d6ce020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f006d6ce1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f006d6ce340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f006d6ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006e46ca10" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006e46ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e46cd90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e46b020"/>
        <function-ref name="start" scoped="" ref="0x7f006e46b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e46b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f006e469aa0" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f006e469aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006e469e20"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006e468020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e4681b0"/>
        <function-ref name="done" scoped="" ref="0x7f006e468340"/>
        <function-ref name="standby" scoped="" ref="0x7f006e4684d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e468660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006e46b5d0" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006e46b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e46b950"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e46bae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e46bc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f006e467270" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e467270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e4675f0"/>
        <function-ref name="header" scoped="" ref="0x7f006e467780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006e46a020" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006e46a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e46a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f006e4688b0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006e4688b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e468c30"/>
        <function-ref name="ready" scoped="" ref="0x7f006e468dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e467020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f006e46a5f0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f006e46a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f006e46a970"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e46ab00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e46ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f006e469020" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f006e469020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f006e4693a0"/>
        <function-ref name="suspend" scoped="" ref="0x7f006e469530"/>
        <function-ref name="resume" scoped="" ref="0x7f006e4696c0"/>
        <function-ref name="run" scoped="" ref="0x7f006e469850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006d6c71d0" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006d6c71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006d6c7550"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006d6c76e0"/>
        <function-ref name="start" scoped="" ref="0x7f006d6c7870"/>
        <function-ref name="stop" scoped="" ref="0x7f006d6c7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f006d6c7c90" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f006d6c7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006d6c60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f006d6c4bc0" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f006d6c4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006d6c3020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006d6c31b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006d6c3340"/>
        <function-ref name="done" scoped="" ref="0x7f006d6c34d0"/>
        <function-ref name="standby" scoped="" ref="0x7f006d6c3660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006d6c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006d6c6330" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006d6c6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d6c66b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d6c6840"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d6c69d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f006d6c1e60" loc="189:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f006d6c1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006d6c0210"/>
        <function-ref name="runTask" scoped="" ref="0x7f006d6c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f006d6c2e80" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006d6c2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d6c1220"/>
        <function-ref name="header" scoped="" ref="0x7f006d6c13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f006d6c0670" loc="144:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f006d6c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006d6c09f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f006d6c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006d6c6c60" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006d6c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d6c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f006d6c1680" loc="322:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f006d6c1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006d6c1a00"/>
        <function-ref name="runTask" scoped="" ref="0x7f006d6c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f006d6c2590" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006d6c2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d6c2910"/>
        <function-ref name="ready" scoped="" ref="0x7f006d6c2aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d6c2c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f006d6c4270" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f006d6c4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f006d6c45f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006d6c4780"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006d6c4910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f006d6c3a40" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f006d6c3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f006d6c3dc0"/>
        <function-ref name="suspend" scoped="" ref="0x7f006d6c2020"/>
        <function-ref name="resume" scoped="" ref="0x7f006d6c21b0"/>
        <function-ref name="run" scoped="" ref="0x7f006d6c2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e411860" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e411860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e411be0"/>
        <function-ref name="ready" scoped="" ref="0x7f006e411d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e410020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e4102b0" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e4102b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e410630"/>
        <function-ref name="header" scoped="" ref="0x7f006e4107c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f006e410a10" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e410a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006e410d90"/>
        <function-ref name="wait" scoped="" ref="0x7f006e40f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e40f1b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f006e40f340"/>
        <function-ref name="getNow" scoped="" ref="0x7f006e40f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e40f760" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e40f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f006e40fae0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f006e40fc70"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f006e40fe00"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f006e40e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006e411060" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e411060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e4113e0"/>
        <function-ref name="header" scoped="" ref="0x7f006e411570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f006e412740" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006e412740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e412ac0"/>
        <function-ref name="ready" scoped="" ref="0x7f006e412c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e412de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006d687d90" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006d687d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d686180"/>
        <function-ref name="ready" scoped="" ref="0x7f006d686310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d6864a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006d686730" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006d686730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d686ab0"/>
        <function-ref name="header" scoped="" ref="0x7f006d686c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f006d685020" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006d685020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006d6853a0"/>
        <function-ref name="wait" scoped="" ref="0x7f006d685530"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d6856c0"/>
        <function-ref name="isFree" scoped="" ref="0x7f006d685850"/>
        <function-ref name="getNow" scoped="" ref="0x7f006d6859e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f006d685c30" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f006d685c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f006d684020"/>
        <function-ref name="rand32" scoped="" ref="0x7f006d6841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006d684440" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006d684440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f006d6847c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f006d684950"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f006d684ae0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f006d684c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006d687590" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006d687590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006d687910"/>
        <function-ref name="header" scoped="" ref="0x7f006d687aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f006d68ac40" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006d68ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d687020"/>
        <function-ref name="ready" scoped="" ref="0x7f006d6871b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d687340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f006d683020" loc="78:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f006d683020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006d6833a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f006d683530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f006e426160" loc="46:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f006e426160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f006e4264e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f006e426670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f006e427060" loc="45:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f006e427060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e427c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006e428230" loc="44:/home/wtiberti/WSN/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006e428230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e4285b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f006e41f100" loc="48:/home/wtiberti/WSN/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f006e41f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f006e41f480"/>
        <function-ref name="rand32" scoped="" ref="0x7f006e41f610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f006e421020" loc="47:/home/wtiberti/WSN/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f006e421020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e421c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006e4226e0" loc="46:/home/wtiberti/WSN/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006e4226e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e422a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e3de630" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e3de630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e3de9b0"/>
        <function-ref name="ready" scoped="" ref="0x7f006e3deb40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e3decd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e3dd020" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e3dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e3dd3a0"/>
        <function-ref name="header" scoped="" ref="0x7f006e3dd530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f006e3dd780" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e3dd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006e3ddb00"/>
        <function-ref name="wait" scoped="" ref="0x7f006e3ddc90"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e3dde20"/>
        <function-ref name="isFree" scoped="" ref="0x7f006e3db020"/>
        <function-ref name="getNow" scoped="" ref="0x7f006e3db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f006e3da5d0" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f006e3da5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e3da950"/>
        <function-ref name="get" scoped="" ref="0x7f006e3daae0"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e3dac70"/>
        <function-ref name="set" scoped="" ref="0x7f006e3dae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e3db440" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e3db440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f006e3db7c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f006e3db950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f006e3dbae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f006e3dbc70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f006e3dbe00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f006e3da020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f006e3da1b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f006e3da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006e3df400" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3df400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e3df780"/>
        <function-ref name="header" scoped="" ref="0x7f006e3df910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f006e40aac0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006e40aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e40ae40"/>
        <function-ref name="ready" scoped="" ref="0x7f006e3df020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e3df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f006e3dfb60" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f006e3dfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006e3de020"/>
        <function-ref name="noAck" scoped="" ref="0x7f006e3de1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006e3de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006e3c2a90" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006e3c2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e3c2e10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e3c1020"/>
        <function-ref name="start" scoped="" ref="0x7f006e3c11b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e3c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f006e3bd400" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f006e3bd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f006e3bd780"/>
        <function-ref name="request" scoped="" ref="0x7f006e3bd910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e3b9a80" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e3b9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e3b9e00"/>
        <function-ref name="ready" scoped="" ref="0x7f006e3b8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e3b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e3b8440" loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e3b8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e3b87c0"/>
        <function-ref name="header" scoped="" ref="0x7f006e3b8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f006e3c0470" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f006e3c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006e3c07f0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006e3c0980"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e3c0b10"/>
        <function-ref name="done" scoped="" ref="0x7f006e3c0ca0"/>
        <function-ref name="standby" scoped="" ref="0x7f006e3c0e30"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e3be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e3bdb60" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e3bdb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e3bc020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e3bc1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e3bc340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e3bc4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e3bc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f006e3baa50" loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f006e3baa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006e3b9020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006e3b91b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e3b9340"/>
        <function-ref name="done" scoped="" ref="0x7f006e3b94d0"/>
        <function-ref name="standby" scoped="" ref="0x7f006e3b9660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e3b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f006e3bc8f0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f006e3bc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f006e3bcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006e3beb60" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3beb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e3bd020"/>
        <function-ref name="header" scoped="" ref="0x7f006e3bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f006e3ba440" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f006e3ba440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e3ba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f006e3bb020" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f006e3bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e3bb3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e3bb530"/>
        <function-ref name="start" scoped="" ref="0x7f006e3bb6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e3bb850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e3b6440" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e3b6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e3b67c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e3b6950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e3b6ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e3b6c70"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e3b6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f006e3c1e80" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f006e3c1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e3c0220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e3b50c0" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e3b50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f006e3b5440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f006e3bbae0" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f006e3bbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e3bbe60"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e3ba020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e3ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f006e3be270" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006e3be270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e3be5f0"/>
        <function-ref name="ready" scoped="" ref="0x7f006e3be780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e3be910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f006e3b8be0" loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f006e3b8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f006e3b6020"/>
        <function-ref name="request" scoped="" ref="0x7f006e3b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f006e3c1590" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f006e3c1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e3c1910"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e3c1aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e3c1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f006e353970" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f006e353970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e353cf0"/>
        <function-ref name="get" scoped="" ref="0x7f006e353e80"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e352030"/>
        <function-ref name="set" scoped="" ref="0x7f006e3521c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e357d90" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e357d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e355180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e355310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e3554a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e355630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e3557c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e354cd0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e354cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e3530a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e353230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e3533c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e353550"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e3536e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f006e3591c0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006e3591c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e358750"/>
        <function-ref name="clear" scoped="" ref="0x7f006e358e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e358020"/>
        <function-ref name="set" scoped="" ref="0x7f006e3575d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f006e355bd0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e355bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e3548a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f006e35d210" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006e35d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e35c7c0"/>
        <function-ref name="clear" scoped="" ref="0x7f006e35b020"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e35c090"/>
        <function-ref name="set" scoped="" ref="0x7f006e35b750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f006d634e80" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f006d634e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d633220"/>
        <function-ref name="get" scoped="" ref="0x7f006d6333b0"/>
        <function-ref name="setValue" scoped="" ref="0x7f006d633540"/>
        <function-ref name="set" scoped="" ref="0x7f006d6336d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006d6341d0" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006d6341d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d634550"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d6346e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d634870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d634a00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006d634b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006d631cd0" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006d631cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d62f0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d62f230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d62f3c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d62f550"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006d62f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f006d6384b0" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f006d6384b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006d637b00"/>
        <function-ref name="clear" scoped="" ref="0x7f006d6352a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f006d6373d0"/>
        <function-ref name="set" scoped="" ref="0x7f006d6359d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f006d633a80" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006d633a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006d6326f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f006d632c40" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f006d632c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006d6318a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f006d63c5e0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f006d63c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006d63ab50"/>
        <function-ref name="clear" scoped="" ref="0x7f006d6392e0"/>
        <function-ref name="isValid" scoped="" ref="0x7f006d63a420"/>
        <function-ref name="set" scoped="" ref="0x7f006d639a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f006e364bf0" loc="20:/home/wtiberti/WSN/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f006e364bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef3a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f006ef3a910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e3608a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e34d720" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e34d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e34daa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e34dc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e34ddc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e32f020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e32f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e32f4a0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e32f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e32f820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e32f9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e32fb40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e32fcd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e32fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f006e34ebb0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f006e34ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e34d020"/>
        <function-ref name="get" scoped="" ref="0x7f006e34d1b0"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e34d340"/>
        <function-ref name="set" scoped="" ref="0x7f006e34d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f006e32dd60" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f006e32dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e32c180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e32c310"/>
        <function-ref name="start" scoped="" ref="0x7f006e32c4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e32c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f006e3297c0" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f006e3297c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f006e329b40"/>
        <function-ref name="request" scoped="" ref="0x7f006e329cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f006e324c40" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f006e324c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e323020"/>
        <function-ref name="ready" scoped="" ref="0x7f006e3231b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e323340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f006e3235d0" loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f006e3235d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e323950"/>
        <function-ref name="header" scoped="" ref="0x7f006e323ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f006e32b840" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f006e32b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006e32bbc0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006e32bd50"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e32a020"/>
        <function-ref name="done" scoped="" ref="0x7f006e32a1b0"/>
        <function-ref name="standby" scoped="" ref="0x7f006e32a340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e32a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e327020" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e327020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e3273a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e327530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e3276c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e327850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e3279e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f006e325d40" loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f006e325d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006e3241e0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006e324370"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e324500"/>
        <function-ref name="done" scoped="" ref="0x7f006e324690"/>
        <function-ref name="standby" scoped="" ref="0x7f006e324820"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e3249b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f006e327c70" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f006e327c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f006e326020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006e329060" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e329060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e3293e0"/>
        <function-ref name="header" scoped="" ref="0x7f006e329570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f006e325730" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f006e325730"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e325ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f006e326310" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f006e326310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f006e326690"/>
        <function-ref name="stopDone" scoped="" ref="0x7f006e326820"/>
        <function-ref name="start" scoped="" ref="0x7f006e3269b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e326b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f006e3225a0" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f006e3225a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e322920"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e322ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e322c40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e322dd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e320020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f006e32b270" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f006e32b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e32b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e3202b0" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e3202b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f006e320630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f006e326dd0" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f006e326dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e325180"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e325310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e3254a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f006e32a720" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006e32a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e32aaa0"/>
        <function-ref name="ready" scoped="" ref="0x7f006e32ac30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e32adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f006e323d70" loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f006e323d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f006e322180"/>
        <function-ref name="request" scoped="" ref="0x7f006e322310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f006e32c880" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f006e32c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e32cc00"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e32cd90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e32b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f006e318ab0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f006e318ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f006e318e30"/>
        <function-ref name="request" scoped="" ref="0x7f006e317020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f006e3136e0" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e3136e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e312e70"/>
        <function-ref name="get" scoped="" ref="0x7f006e312920"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e3123d0"/>
        <function-ref name="set" scoped="" ref="0x7f006e3113f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f006e2fd020" loc="64:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f006e2fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2fd3a0"/>
        <function-ref name="get" scoped="" ref="0x7f006e2fd530"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e2fd6c0"/>
        <function-ref name="set" scoped="" ref="0x7f006e2fd850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f006e3025f0" loc="61:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f006e3025f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e301b60"/>
        <function-ref name="clear" scoped="" ref="0x7f006e3002e0"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e301430"/>
        <function-ref name="set" scoped="" ref="0x7f006e300a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f006e31ca80" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f006e31ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006e31ce00"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006e319020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e3191b0"/>
        <function-ref name="done" scoped="" ref="0x7f006e319340"/>
        <function-ref name="standby" scoped="" ref="0x7f006e3194d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e319660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f006e2fc790" loc="66:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e2fc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006e2fcb10"/>
        <function-ref name="wait" scoped="" ref="0x7f006e2fcca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e2fce30"/>
        <function-ref name="isFree" scoped="" ref="0x7f006e2fb020"/>
        <function-ref name="getNow" scoped="" ref="0x7f006e2fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f006e316210" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e316210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e315910"/>
        <function-ref name="get" scoped="" ref="0x7f006e3153c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e316e40"/>
        <function-ref name="set" scoped="" ref="0x7f006e315e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e3172e0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e3172e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e317660"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e3177f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e317980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e317b10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e317ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e3035e0" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e3035e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e303a60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e303bf0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f006e303d80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f006e302020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006e3182f0" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e3182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e318670"/>
        <function-ref name="header" scoped="" ref="0x7f006e318800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f006e307110" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006e307110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f006ebd0180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e305b30"/>
        <function-ref name="fired" scoped="" ref="0x7f006e3069f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f006e3054e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e305020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006e303020"/>
        <function-ref name="start" scoped="" ref="0x7f006e306020"/>
        <function-ref name="stop" scoped="" ref="0x7f006e306530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f006e311ca0" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f006e311ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e30e3d0"/>
        <function-ref name="get" scoped="" ref="0x7f006e30fe50"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e30f900"/>
        <function-ref name="set" scoped="" ref="0x7f006e30e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f006e30ad70" loc="54:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e30ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e3089c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f006e319910" loc="43:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006e319910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e319c90"/>
        <function-ref name="ready" scoped="" ref="0x7f006e319e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e318020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f006e30c200" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e30c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e30b910"/>
        <function-ref name="get" scoped="" ref="0x7f006e30b3c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e30ce30"/>
        <function-ref name="set" scoped="" ref="0x7f006e30be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f006e2fdbd0" loc="65:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f006e2fdbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2fc020"/>
        <function-ref name="get" scoped="" ref="0x7f006e2fc1b0"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e2fc340"/>
        <function-ref name="set" scoped="" ref="0x7f006e2fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f006e2fe390" loc="63:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f006e2fe390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2fe710"/>
        <function-ref name="get" scoped="" ref="0x7f006e2fe8a0"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e2fea30"/>
        <function-ref name="set" scoped="" ref="0x7f006e2febc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f006e30a510" loc="52:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e30a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f006e30a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f006e2fb450" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f006e2fb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f006e2fb7d0"/>
        <function-ref name="suspend" scoped="" ref="0x7f006e2fb960"/>
        <function-ref name="resume" scoped="" ref="0x7f006e2fbaf0"/>
        <function-ref name="run" scoped="" ref="0x7f006e2fbc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f006e2f1020" loc="52:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f006e2f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f006e2f13a0"/>
        <function-ref name="request" scoped="" ref="0x7f006e2f1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f006e2d2950" loc="74:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f006e2d2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f006e2d7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f006e2eedc0" loc="56:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f006e2eedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2eb5e0"/>
        <function-ref name="get" scoped="" ref="0x7f006e2eb090"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e2ecac0"/>
        <function-ref name="set" scoped="" ref="0x7f006e2ebb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f006e2cf830" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f006e2cf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2cfbb0"/>
        <function-ref name="get" scoped="" ref="0x7f006e2cfd40"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e2ce020"/>
        <function-ref name="set" scoped="" ref="0x7f006e2ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f006e2f4940" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f006e2f4940"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f006f001720"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f006f001720"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e2f4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f006e2cd360" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f006e2cd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f006e2ccb00"/>
        <function-ref name="clear" scoped="" ref="0x7f006e2ca2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f006e2cc3d0"/>
        <function-ref name="set" scoped="" ref="0x7f006e2ca9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f006e2de660" loc="70:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f006e2de660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e2de9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e2deb70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e2ded00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e2d9020"/>
        <function-ref name="get" scoped="" ref="0x7f006e2d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e2d9340"/>
        <function-ref name="set" scoped="" ref="0x7f006e2d94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006e2d9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f006e2c9d10" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f006e2c9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f006e2c80e0"/>
        <function-ref name="wait" scoped="" ref="0x7f006e2c8270"/>
        <function-ref name="cancel" scoped="" ref="0x7f006e2c8400"/>
        <function-ref name="isFree" scoped="" ref="0x7f006e2c8590"/>
        <function-ref name="getNow" scoped="" ref="0x7f006e2c8720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f006e2f3020" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f006e2f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f006e2f33a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f006e2f3530"/>
        <function-ref name="setChannel" scoped="" ref="0x7f006e2f36c0"/>
        <function-ref name="done" scoped="" ref="0x7f006e2f3850"/>
        <function-ref name="standby" scoped="" ref="0x7f006e2f39e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f006e2f3b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f006e2d7d80" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f006e2d7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e2d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f006e2f0870" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f006e2f0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2ee020"/>
        <function-ref name="get" scoped="" ref="0x7f006e2efa10"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e2ef4c0"/>
        <function-ref name="set" scoped="" ref="0x7f006e2ee570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f006e2f17f0" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f006e2f17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2f1b70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006e2f1d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e2f0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006e2f01b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e2f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f006e2df350" loc="69:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f006e2df350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e2df6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e2df860"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e2df9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e2dfb80"/>
        <function-ref name="get" scoped="" ref="0x7f006e2dfd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e2de020"/>
        <function-ref name="set" scoped="" ref="0x7f006e2de1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006e2de340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f006e2d0020" loc="77:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f006e2d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006e2d03a0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f006e2d0530"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f006e2d06c0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f006e2d0850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f006e2f27b0" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f006e2f27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006e2f2b30"/>
        <function-ref name="header" scoped="" ref="0x7f006e2f2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f006e238e40" loc="855:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f006e238e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006e2371e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f006e237370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f006e2e9410" loc="57:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f006e2e9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2e8b30"/>
        <function-ref name="get" scoped="" ref="0x7f006e2e85e0"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e2e8090"/>
        <function-ref name="set" scoped="" ref="0x7f006e2e70d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f006e2f6db0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f006e2f6db0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f006f001720"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f006f001720"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e2f4180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f006e2e1830" loc="65:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f006e2e1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006e2e1bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006e2e1d40"/>
        <function-ref name="request" scoped="" ref="0x7f006e2e0020"/>
        <function-ref name="granted" scoped="" ref="0x7f006e2e01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006e2e0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f006e2e2460" loc="64:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f006e2e2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e2e28e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e2e2a70"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e2e2c00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e2e2d90"/>
        <function-ref name="get" scoped="" ref="0x7f006e2e1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e2e11b0"/>
        <function-ref name="set" scoped="" ref="0x7f006e2e1340"/>
        <function-ref name="clr" scoped="" ref="0x7f006e2e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f006e2e7960" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f006e2e7960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2e40d0"/>
        <function-ref name="get" scoped="" ref="0x7f006e2e5b30"/>
        <function-ref name="isSet" scoped="" ref="0x7f006e2e55e0"/>
        <function-ref name="set" scoped="" ref="0x7f006e2e4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f006e2f3e20" loc="50:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f006e2f3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e2f21c0"/>
        <function-ref name="ready" scoped="" ref="0x7f006e2f2350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e2f24e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f006e2d4170" loc="72:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f006e2d4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f006e2d44f0"/>
        <function-ref name="disable" scoped="" ref="0x7f006e2d4680"/>
        <function-ref name="captured" scoped="" ref="0x7f006e2d4810"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f006e2d49a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f006e2db770" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e2db770"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f006e2dbaf0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f006e2dbc80"/>
        <function-ref name="splitRead" scoped="" ref="0x7f006e2dbe10"/>
        <function-ref name="write" scoped="" ref="0x7f006e2df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f006e2ce530" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f006e2ce530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2ce8b0"/>
        <function-ref name="get" scoped="" ref="0x7f006e2cea40"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e2cebd0"/>
        <function-ref name="set" scoped="" ref="0x7f006e2ced60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f006e2d0c00" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f006e2d0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006e2cf020"/>
        <function-ref name="get" scoped="" ref="0x7f006e2cf1b0"/>
        <function-ref name="setValue" scoped="" ref="0x7f006e2cf340"/>
        <function-ref name="set" scoped="" ref="0x7f006e2cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f006e2e4ca0" loc="59:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f006e2e4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f006e2e20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f006e2c9220" loc="85:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f006e2c9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f006e2c95a0"/>
        <function-ref name="suspend" scoped="" ref="0x7f006e2c9730"/>
        <function-ref name="resume" scoped="" ref="0x7f006e2c98c0"/>
        <function-ref name="run" scoped="" ref="0x7f006e2c9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f006e1f5b10" loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f006e1f5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e1f4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e1f41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e1f4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e1f44d0"/>
        <function-ref name="get" scoped="" ref="0x7f006e1f4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e1f47f0"/>
        <function-ref name="set" scoped="" ref="0x7f006e1f4980"/>
        <function-ref name="clr" scoped="" ref="0x7f006e1f4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f006e1f6880" loc="45:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f006e1f6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e1f6c00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e1f6d90"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e1f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e1f51b0"/>
        <function-ref name="get" scoped="" ref="0x7f006e1f5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e1f54d0"/>
        <function-ref name="set" scoped="" ref="0x7f006e1f5660"/>
        <function-ref name="clr" scoped="" ref="0x7f006e1f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f006e1f3c80" loc="49:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006e1f3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006e1ef4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f006e1f04e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f006e1f0e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006e1f09a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006e1ef9a0"/>
        <function-ref name="start" scoped="" ref="0x7f006e1f2ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e1f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f006e1f7060" loc="42:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f006e1f7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006e1f73e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006e1f7570"/>
        <function-ref name="request" scoped="" ref="0x7f006e1f7700"/>
        <function-ref name="granted" scoped="" ref="0x7f006e1f7890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006e1f7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f006e1fbe10" loc="41:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f006e1fbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e1f81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e1f8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e1f84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e1f8670"/>
        <function-ref name="get" scoped="" ref="0x7f006e1f8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e1f8990"/>
        <function-ref name="set" scoped="" ref="0x7f006e1f8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f006e1f8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f006e1f4e30" loc="48:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f006e1f4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f006e1f31e0"/>
        <function-ref name="disable" scoped="" ref="0x7f006e1f3370"/>
        <function-ref name="captured" scoped="" ref="0x7f006e1f3500"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f006e1f3690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f006e1f7ce0" loc="43:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1f7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f006e1f60a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f006e1f6230"/>
        <function-ref name="splitRead" scoped="" ref="0x7f006e1f63c0"/>
        <function-ref name="write" scoped="" ref="0x7f006e1f6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f006e1ee060" loc="50:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f006e1ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TRadio" ref="0x7f006ebd2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006e1eec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f006e1dd3d0" loc="46:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f006e1dd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e1dd750"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e1dd8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e1dda70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e1ddc00"/>
        <function-ref name="get" scoped="" ref="0x7f006e1ddd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e1dc020"/>
        <function-ref name="set" scoped="" ref="0x7f006e1dc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f006e1dc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f006e1e07f0" loc="45:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f006e1e07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f006e1dee60"/>
        <function-ref name="test" scoped="" ref="0x7f006e1de4e0"/>
        <function-ref name="get" scoped="" ref="0x7f006e1e74c0"/>
        <function-ref name="captured" scoped="" ref="0x7f006e1e6020"/>
        <function-ref name="reset" scoped="" ref="0x7f006e1e6530"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e1de9a0"/>
        <function-ref name="set" scoped="" ref="0x7f006e1e7980"/>
        <function-ref name="start" scoped="" ref="0x7f006e1e69f0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e1de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f006e1dc680" loc="47:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f006e1dc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e1dca00"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e1dcb90"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e1dcd20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e1db020"/>
        <function-ref name="get" scoped="" ref="0x7f006e1db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e1db340"/>
        <function-ref name="set" scoped="" ref="0x7f006e1db4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006e1db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f006e1e9680" loc="40:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f006e1e9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e1e9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f006e1eca10" loc="39:/home/wtiberti/WSN/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f006e1eca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f006e1ecd90"/>
        <function-ref name="disable" scoped="" ref="0x7f006e1e9020"/>
        <function-ref name="captured" scoped="" ref="0x7f006e1e91b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f006e1e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f006e1c1c80" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f006e1c1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e1ca0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e1ca230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f006e1c9840" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f006e1c9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f006e1c9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006e1cc1f0" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006e1cc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e1cc570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f006e1cb020" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f006e1cb3a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f006e1cb530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f006e1cb6c0"/>
        <function-ref name="write" scoped="" ref="0x7f006e1cb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f006e1caa60" loc="85:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f006e1caa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006e1cade0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006e1c2020"/>
        <function-ref name="request" scoped="" ref="0x7f006e1c21b0"/>
        <function-ref name="granted" scoped="" ref="0x7f006e1c2340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006e1c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f006e1bbd70" loc="95:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006e1bbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f006e1ba180"/>
        <function-ref name="configure" scoped="" ref="0x7f006e1ba310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f006e17dde0" loc="294:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f006e17dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006e17c180"/>
        <function-ref name="runTask" scoped="" ref="0x7f006e17c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f006e1bb020" loc="94:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f006e1bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006e1bb3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006e1bb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f006e1bde00" loc="92:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f006e1bde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f006e1bc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006e1bd7e0" loc="91:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006e1bd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e1bdb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f006e19f800" loc="98:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f006e19f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f006e19fb80"/>
        <function-ref name="sleep" scoped="" ref="0x7f006e19e1b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f006e1b9020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f006e19e340"/>
        <function-ref name="initMaster" scoped="" ref="0x7f006e1b9340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f006e1b94d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f006e1b9660"/>
        <function-ref name="read" scoped="" ref="0x7f006e1b97f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f006e1b9980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f006e1b9b10"/>
        <function-ref name="setClock" scoped="" ref="0x7f006e1b9ca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f006e1b9e30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f006e1b8020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f006e1b82b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f006e1b8440"/>
        <function-ref name="write" scoped="" ref="0x7f006e1b85d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f006e1b8760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f006e1b88f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f006e1b8a80"/>
        <function-ref name="getClock" scoped="" ref="0x7f006e1b8c10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f006e1b8da0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f006e19fd10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f006e1b91b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f006e19e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f006e1bc480" loc="93:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f006e1bc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f006e1bc800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f006e1bc990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f006e1bcb20"/>
        <function-ref name="write" scoped="" ref="0x7f006e1bccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f006e19e620" loc="99:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f006e19e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f006e19e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f006e15f710" loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f006e15f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f006e15fa90"/>
        <function-ref name="sleep" scoped="" ref="0x7f006e15a020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f006e15fdb0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f006e15a1b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7f006e15c1b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f006e15c340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f006e15c4d0"/>
        <function-ref name="read" scoped="" ref="0x7f006e15c660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f006e15c7f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f006e15c980"/>
        <function-ref name="setClock" scoped="" ref="0x7f006e15cb10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f006e15cca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f006e15ce30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f006e15b120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f006e15b2b0"/>
        <function-ref name="write" scoped="" ref="0x7f006e15b440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f006e15b5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f006e15b760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f006e15b8f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f006e15ba80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f006e15bc10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f006e15fc20"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f006e15c020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f006e15bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f006e14ee30" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f006e14ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e14d1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e14d370"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e14d500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e14d690"/>
        <function-ref name="get" scoped="" ref="0x7f006e14d820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e14d9b0"/>
        <function-ref name="set" scoped="" ref="0x7f006e14db40"/>
        <function-ref name="clr" scoped="" ref="0x7f006e14dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f006e151970" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f006e151970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e151cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e151e80"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e14f030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e14f1c0"/>
        <function-ref name="get" scoped="" ref="0x7f006e14f350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e14f4e0"/>
        <function-ref name="set" scoped="" ref="0x7f006e14f670"/>
        <function-ref name="clr" scoped="" ref="0x7f006e14f800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f006e1526c0" loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f006e1526c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e152a40"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e152bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e152d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e151020"/>
        <function-ref name="get" scoped="" ref="0x7f006e1511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e151340"/>
        <function-ref name="set" scoped="" ref="0x7f006e1514d0"/>
        <function-ref name="clr" scoped="" ref="0x7f006e151660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f006e150e00" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f006e150e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006e1521c0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e152350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f006e14c060" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f006e14c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f006e14c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f006e1566b0" loc="74:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f006e1566b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f006e156a30"/>
        <function-ref name="sleep" scoped="" ref="0x7f006e153020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f006e156d50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f006e1531b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7f006e1551b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f006e155340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f006e1554d0"/>
        <function-ref name="read" scoped="" ref="0x7f006e155660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f006e1557f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f006e155980"/>
        <function-ref name="setClock" scoped="" ref="0x7f006e155b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f006e155ca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f006e155e30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f006e154120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f006e1542b0"/>
        <function-ref name="write" scoped="" ref="0x7f006e154440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f006e1545d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f006e154760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f006e1548f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f006e154a80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f006e154c10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f006e156bc0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f006e155020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f006e154da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f006e14fb20" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f006e14fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f006e14e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f006e14e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f006e14e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f006e14e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f006e14e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f006e14e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f006e14e980"/>
        <function-ref name="clr" scoped="" ref="0x7f006e14eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f006e1016c0" loc="86:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f006e1016c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f006e101a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f006e101bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f006e100730" loc="89:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006e100730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f006e100ad0"/>
        <function-ref name="configure" scoped="" ref="0x7f006e100c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f006e102900" loc="85:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f006e102900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006e102ca0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006e102e30"/>
        <function-ref name="request" scoped="" ref="0x7f006e101020"/>
        <function-ref name="granted" scoped="" ref="0x7f006e1011b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006e101340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f006e101e40" loc="87:/home/wtiberti/WSN/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006e101e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f006e1001e0"/>
        <function-ref name="userId" scoped="" ref="0x7f006e100370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006d5e90e0" loc="44:/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006d5e90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006d5e9460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f006d5e96f0" loc="45:/home/wtiberti/WSN/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f006d5e96f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f006d5e9a70"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f006d5e9c00"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f006d5e9d90"/>
        <function-ref name="dequeue" scoped="" ref="0x7f006d5e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f006d5e5530" loc="52:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f006d5e5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f006d5e58d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f006d5e5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f006d5e4610" loc="56:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f006d5e4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f006d5e49b0"/>
        <function-ref name="configure" scoped="" ref="0x7f006d5e4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f006d5e4dd0" loc="57:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f006d5e4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f006d5e3180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f006d5e3310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f006d5e34a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f006d5e3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f006d5e66c0" loc="51:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f006d5e66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f006d5e6a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f006d5e6bf0"/>
        <function-ref name="request" scoped="" ref="0x7f006d5e6d80"/>
        <function-ref name="granted" scoped="" ref="0x7f006d5e5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f006d5e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f006d5e5cb0" loc="53:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f006d5e5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f006d5e40a0"/>
        <function-ref name="userId" scoped="" ref="0x7f006d5e4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f006d5e3900" loc="68:/home/wtiberti/WSN/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f006d5e3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006d5e3c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f006d5e3e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f006e0ef020" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f006e0ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f006e0ef3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f006e0ef530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f006e0ef6c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f006e0ef850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f006e0ef9e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f006e0efb70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f006e0efd00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f006e0ee020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f006e0ee1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f006e0ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f006e0ee850" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f006e0ee850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f006e0e4e60"/>
        <function-ref name="test" scoped="" ref="0x7f006e0e44e0"/>
        <function-ref name="get" scoped="" ref="0x7f006e0e64c0"/>
        <function-ref name="captured" scoped="" ref="0x7f006e0e5020"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0e5530"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0e49a0"/>
        <function-ref name="set" scoped="" ref="0x7f006e0e6980"/>
        <function-ref name="start" scoped="" ref="0x7f006e0e59f0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f006e0e2ad0" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f006e0e2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006e0de4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f006e0e01b0"/>
        <function-ref name="get" scoped="" ref="0x7f006e0e1790"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0e0670"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0de9a0"/>
        <function-ref name="set" scoped="" ref="0x7f006e0e1c50"/>
        <function-ref name="start" scoped="" ref="0x7f006e0e0b30"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006e0f8c00" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006e0f8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006e0f1020"/>
        <function-ref name="test" scoped="" ref="0x7f006e0f25d0"/>
        <function-ref name="get" scoped="" ref="0x7f006e0f58a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f006e0f14e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f006e0f19f0"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0f4760"/>
        <function-ref name="overflow" scoped="" ref="0x7f006e0f42a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0f2a90"/>
        <function-ref name="set" scoped="" ref="0x7f006e0f5d60"/>
        <function-ref name="start" scoped="" ref="0x7f006e0f4c20"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0f2110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f006e0d52c0" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f006e0d52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f006e0d5640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f006e0d57d0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f006e0d5960"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f006e0d5af0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f006e0d5c80"/>
        <function-ref name="setControlB" scoped="" ref="0x7f006e0d5e10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f006e0d4020"/>
        <function-ref name="getControlB" scoped="" ref="0x7f006e0d41b0"/>
        <function-ref name="setControlC" scoped="" ref="0x7f006e0d4340"/>
        <function-ref name="setControlA" scoped="" ref="0x7f006e0d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f006e0cf5a0" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f006e0cf5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006e0cb020"/>
        <function-ref name="fired" scoped="" ref="0x7f006e0cdc10"/>
        <function-ref name="get" scoped="" ref="0x7f006e0cd240"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0cc110"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0cb4e0"/>
        <function-ref name="set" scoped="" ref="0x7f006e0cd700"/>
        <function-ref name="start" scoped="" ref="0x7f006e0cc5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0cca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f006e0d49e0" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f006e0d49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f006e0d0e60"/>
        <function-ref name="test" scoped="" ref="0x7f006e0d04e0"/>
        <function-ref name="get" scoped="" ref="0x7f006e0d36b0"/>
        <function-ref name="captured" scoped="" ref="0x7f006e0d10d0"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0d15e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0d09a0"/>
        <function-ref name="set" scoped="" ref="0x7f006e0d3b70"/>
        <function-ref name="start" scoped="" ref="0x7f006e0d1aa0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f006e0cbba0" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f006e0cbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006e0c7550"/>
        <function-ref name="fired" scoped="" ref="0x7f006e0c81f0"/>
        <function-ref name="get" scoped="" ref="0x7f006e0ca7f0"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0c86b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0c7a10"/>
        <function-ref name="set" scoped="" ref="0x7f006e0cacb0"/>
        <function-ref name="start" scoped="" ref="0x7f006e0c8b70"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0c7090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f006e0c6120" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f006e0c6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006e0c3a90"/>
        <function-ref name="fired" scoped="" ref="0x7f006e0c4770"/>
        <function-ref name="get" scoped="" ref="0x7f006e0c6d50"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0c4c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0c2020"/>
        <function-ref name="set" scoped="" ref="0x7f006e0c4260"/>
        <function-ref name="start" scoped="" ref="0x7f006e0c3110"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0c35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006e0da020" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006e0da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006e0d6350"/>
        <function-ref name="test" scoped="" ref="0x7f006e0d79a0"/>
        <function-ref name="get" scoped="" ref="0x7f006e0dac50"/>
        <function-ref name="setScale" scoped="" ref="0x7f006e0d6810"/>
        <function-ref name="getScale" scoped="" ref="0x7f006e0d6d20"/>
        <function-ref name="reset" scoped="" ref="0x7f006e0d9b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f006e0d9660"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e0d7e60"/>
        <function-ref name="set" scoped="" ref="0x7f006e0d9150"/>
        <function-ref name="start" scoped="" ref="0x7f006e0d7020"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0d74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f006dff56e0" loc="30:/home/wtiberti/WSN/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006dff56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TOne" ref="0x7f006eef59a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006dff2020"/>
        <function-ref name="fired" scoped="" ref="0x7f006dff3020"/>
        <function-ref name="startAt" scoped="" ref="0x7f006dff39a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006dff34e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006dff24e0"/>
        <function-ref name="start" scoped="" ref="0x7f006dff45b0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dff4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006e03fb50" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006e03fb50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f006f0013a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f006f0013a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006e033020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f006e033410" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006e033410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006e02f810"/>
        <function-ref name="test" scoped="" ref="0x7f006e030e60"/>
        <function-ref name="get" scoped="" ref="0x7f006e031090"/>
        <function-ref name="setScale" scoped="" ref="0x7f006e02fcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f006e02d260"/>
        <function-ref name="reset" scoped="" ref="0x7f006e030020"/>
        <function-ref name="overflow" scoped="" ref="0x7f006e031a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f006e02f350"/>
        <function-ref name="set" scoped="" ref="0x7f006e031550"/>
        <function-ref name="start" scoped="" ref="0x7f006e0304e0"/>
        <function-ref name="stop" scoped="" ref="0x7f006e0309a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f006d5a9a40" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f006d5a9a40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f006f001020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f006f001020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TOne" ref="0x7f006eef59a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f006d5a52a0"/>
        <function-ref name="fired" scoped="" ref="0x7f006d5a62a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f006d5a6c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f006d5a6760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f006d5a5760"/>
        <function-ref name="start" scoped="" ref="0x7f006d5a8890"/>
        <function-ref name="stop" scoped="" ref="0x7f006d5a8da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f006d59f020" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f006d59f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006d59d9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f006d59e660"/>
        <function-ref name="get" scoped="" ref="0x7f006d59fc50"/>
        <function-ref name="reset" scoped="" ref="0x7f006d59eb20"/>
        <function-ref name="isOn" scoped="" ref="0x7f006d59de60"/>
        <function-ref name="set" scoped="" ref="0x7f006d59e150"/>
        <function-ref name="start" scoped="" ref="0x7f006d59d020"/>
        <function-ref name="stop" scoped="" ref="0x7f006d59d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f006d5a5cb0" loc="57:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f006d5a5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006d5a0090"/>
        <function-ref name="test" scoped="" ref="0x7f006d5a16e0"/>
        <function-ref name="get" scoped="" ref="0x7f006d5a4980"/>
        <function-ref name="setScale" scoped="" ref="0x7f006d5a0550"/>
        <function-ref name="getScale" scoped="" ref="0x7f006d5a0a60"/>
        <function-ref name="reset" scoped="" ref="0x7f006d5a3840"/>
        <function-ref name="overflow" scoped="" ref="0x7f006d5a3380"/>
        <function-ref name="isOn" scoped="" ref="0x7f006d5a1ba0"/>
        <function-ref name="set" scoped="" ref="0x7f006d5a4e40"/>
        <function-ref name="start" scoped="" ref="0x7f006d5a3d00"/>
        <function-ref name="stop" scoped="" ref="0x7f006d5a1220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f006dfee3a0" loc="39:/home/wtiberti/WSN/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f006dfee3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dfed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006dfe9200" loc="24:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dfe9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TOne" ref="0x7f006eef59a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dfe8090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dfe8a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dfe8550"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dfe7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006dfe4020" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dfe4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TOne" ref="0x7f006eef59a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dfe4e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dfd2800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dfd2340"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dfd2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f006dfd0280" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006dfd0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006dfcd810"/>
        <function-ref name="test" scoped="" ref="0x7f006dfcee60"/>
        <function-ref name="get" scoped="" ref="0x7f006dfcf020"/>
        <function-ref name="setScale" scoped="" ref="0x7f006dfcdcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f006dfcb260"/>
        <function-ref name="reset" scoped="" ref="0x7f006dfce020"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dfcf9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dfcd350"/>
        <function-ref name="set" scoped="" ref="0x7f006dfcf4e0"/>
        <function-ref name="start" scoped="" ref="0x7f006dfce4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dfce9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f006dfaa0f0" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f006dfaa0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dfa9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dfa99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dfa94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dfa9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006dfc8cf0" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dfc8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dfacb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dfab550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dfab090"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dfaba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f006dfa6b60" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f006dfa6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dfa57d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f006dfa5e40" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dfa5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dfa4ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dfa3670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dfa31b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dfa3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f006df9b9a0" loc="36:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f006df9b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f006df987e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006deae020" loc="49:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006deae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006deae3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006deae530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006deae6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006deae850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006deae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006deaec30" loc="50:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006deaec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006dead020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006dead1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006dead340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006dead4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006dead660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006dead8b0" loc="51:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006dead8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006deadc30"/>
        <function-ref name="source" scoped="" ref="0x7f006deaddc0"/>
        <function-ref name="address" scoped="" ref="0x7f006deac020"/>
        <function-ref name="destination" scoped="" ref="0x7f006deac1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006deac340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006deac4d0"/>
        <function-ref name="type" scoped="" ref="0x7f006deac660"/>
        <function-ref name="setType" scoped="" ref="0x7f006deac7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006deac980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006deacb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006deacca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f006deab020" loc="52:/home/wtiberti/WSN/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f006deab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006deab3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f006deab530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006deab6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006d56d100" loc="49:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006d56d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d56d480"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006d56d610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d56d7a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d56d930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d56dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006d56dd10" loc="50:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006d56dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006d56c0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006d56c270"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006d56c400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d56c590"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006d56c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006d56c970" loc="51:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006d56c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006d56ccf0"/>
        <function-ref name="source" scoped="" ref="0x7f006d56ce80"/>
        <function-ref name="address" scoped="" ref="0x7f006d56b030"/>
        <function-ref name="destination" scoped="" ref="0x7f006d56b1c0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006d56b350"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006d56b4e0"/>
        <function-ref name="type" scoped="" ref="0x7f006d56b670"/>
        <function-ref name="setType" scoped="" ref="0x7f006d56b800"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006d56b990"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006d56bb20"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006d56bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f006d56a020" loc="52:/home/wtiberti/WSN/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f006d56a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f006d56a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f006d56a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f006d56a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f006d5619e0" loc="44:/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006d5619e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d561d60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006d560020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d5601b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d560340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d5604d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f006d560780" loc="46:/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006d560780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006d560b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006d560c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006d560e20"/>
        <function-ref name="cancel" scoped="" ref="0x7f006d55e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006d55e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f006d55e400" loc="47:/home/wtiberti/WSN/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006d55e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006d55e780"/>
        <function-ref name="source" scoped="" ref="0x7f006d55e910"/>
        <function-ref name="address" scoped="" ref="0x7f006d55eaa0"/>
        <function-ref name="destination" scoped="" ref="0x7f006d55ec30"/>
        <function-ref name="setSource" scoped="" ref="0x7f006d55edc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006d55d020"/>
        <function-ref name="type" scoped="" ref="0x7f006d55d1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f006d55d340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006d55d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006d55d660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006d55d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006df16c30" loc="43:/home/wtiberti/WSN/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006df16c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006df13020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006df131b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006df13340"/>
        <function-ref name="cancel" scoped="" ref="0x7f006df134d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006df13660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f006dec3400" loc="51:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f006dec3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006dec37a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006dec3930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006dec3ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006dec3c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006dec3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f006dec6df0" loc="47:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f006dec6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006dec51c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006dec5350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006dec54e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f006dec5670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006dec5800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f006dec1720" loc="53:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006dec1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006dec1aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006dec1c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006dec1dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006dec0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006dec01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f006dec5b80" loc="48:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBusy" scoped="" ref="0x7f006dec5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f006dec3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f006dec0480" loc="184:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f006dec0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006dec0800"/>
        <function-ref name="runTask" scoped="" ref="0x7f006dec0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f006dec0c60" loc="140:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f006dec0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f006debf020"/>
        <function-ref name="runTask" scoped="" ref="0x7f006debf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f006dec2060" loc="52:/home/wtiberti/WSN/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006dec2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006dec23e0"/>
        <function-ref name="source" scoped="" ref="0x7f006dec2570"/>
        <function-ref name="address" scoped="" ref="0x7f006dec2700"/>
        <function-ref name="destination" scoped="" ref="0x7f006dec2890"/>
        <function-ref name="setSource" scoped="" ref="0x7f006dec2a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006dec2bb0"/>
        <function-ref name="type" scoped="" ref="0x7f006dec2d40"/>
        <function-ref name="setType" scoped="" ref="0x7f006dec1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006dec11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006dec1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006dec14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f006dea1020" loc="46:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f006dea1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f006dea13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f006dea1530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f006dea16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f006dea1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f006dea19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f006dea2910" loc="45:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f006dea2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f006dea2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f006dea1c30" loc="47:/home/wtiberti/WSN/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f006dea1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f006dea0020"/>
        <function-ref name="source" scoped="" ref="0x7f006dea01b0"/>
        <function-ref name="address" scoped="" ref="0x7f006dea0340"/>
        <function-ref name="destination" scoped="" ref="0x7f006dea04d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f006dea0660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f006dea07f0"/>
        <function-ref name="type" scoped="" ref="0x7f006dea0980"/>
        <function-ref name="setType" scoped="" ref="0x7f006dea0b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f006dea0ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f006dea0e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f006de9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TAKS" ref="0x7f006de9de60" loc="2:../TAKSC.nc">
      <component-ref qname="TAKSC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TAKS" scoped="" ref="0x7f006de9de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TAKS"/>
      </instance>
      <interface-functions>
        <function-ref name="Decrypt" scoped="" ref="0x7f006de9a210"/>
        <function-ref name="Decrypt_pw" scoped="" ref="0x7f006de9a3a0"/>
        <function-ref name="Encrypt" scoped="" ref="0x7f006de9a530"/>
        <function-ref name="ComponentFromHexString" scoped="" ref="0x7f006de9a6c0"/>
        <function-ref name="Encrypt_pw" scoped="" ref="0x7f006de9a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f006de96110" loc="9:../TAKSM.nc">
      <component-ref qname="TAKSM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f006de96110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006de96d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TAKS" ref="0x7f006de992b0" loc="8:../TAKSM.nc">
      <component-ref qname="TAKSM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TAKS" scoped="" ref="0x7f006de992b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TAKS"/>
      </instance>
      <interface-functions>
        <function-ref name="Decrypt" scoped="" ref="0x7f006de99630"/>
        <function-ref name="Decrypt_pw" scoped="" ref="0x7f006de997c0"/>
        <function-ref name="Encrypt" scoped="" ref="0x7f006de99950"/>
        <function-ref name="ComponentFromHexString" scoped="" ref="0x7f006de99ae0"/>
        <function-ref name="Encrypt_pw" scoped="" ref="0x7f006de99c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f006de26610" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f006de26610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006de26990"/>
        <function-ref name="stop" scoped="" ref="0x7f006de26b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f006de1d020" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f006de1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f006de1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7f006de1e520" loc="39:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f006de1e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006de1e8a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f006de1ea30"/>
        <function-ref name="receive" scoped="" ref="0x7f006de1ebc0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f006de1ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006de23850" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006de23850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006de23bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7f006de297b0" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x7f006de297b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006de29b30"/>
        <function-ref name="stop" scoped="" ref="0x7f006de29cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f006de230c0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f006de230c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006de23440"/>
        <function-ref name="stop" scoped="" ref="0x7f006de235d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f006de107c0" loc="42:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f006de107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006de10b40"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f006de10cd0"/>
        <function-ref name="receive" scoped="" ref="0x7f006de10e60"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f006de0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f006de04770" loc="41:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f006de04770"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006de04af0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f006de04c80"/>
        <function-ref name="receive" scoped="" ref="0x7f006de04e10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f006de10020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f006de101b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f006de10340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006de104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f006de121e0" loc="40:/home/wtiberti/WSN/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f006de121e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006de12560"/>
        <function-ref name="stop" scoped="" ref="0x7f006de126f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f006de024a0" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f006de024a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006de02820"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f006de029b0"/>
        <function-ref name="receive" scoped="" ref="0x7f006de02b40"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f006de02cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f006de01020" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f006de01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006de013a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f006de01530"/>
        <function-ref name="receive" scoped="" ref="0x7f006de016c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f006de01850"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f006de019e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f006de01b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006de01d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f006de002e0" loc="43:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006de002e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006ddff110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006ddffa90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006ddff5d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006ddfe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f006de0fc30" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f006de0fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006de02020"/>
        <function-ref name="stop" scoped="" ref="0x7f006de021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f006ddb67c0" loc="54:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f006ddb67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006ddb6b40"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f006ddb6cd0"/>
        <function-ref name="receive" scoped="" ref="0x7f006ddb6e60"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f006ddb4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f006ddb32f0" loc="57:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f006ddb32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006ddb3670"/>
        <function-ref name="stop" scoped="" ref="0x7f006ddb3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006ddfb9e0" loc="52:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006ddfb9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006ddfbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f006ddb42b0" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f006ddb42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f006ddb4630"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f006ddb47c0"/>
        <function-ref name="receive" scoped="" ref="0x7f006ddb4950"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f006ddb4ae0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f006ddb4c70"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f006ddb4e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f006ddb3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f006ddb19a0" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006ddb19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006ddb07e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006ddaf1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006ddb0ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006ddaf670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f006ddb22f0" loc="59:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f006ddb22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f006ddb2670"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f006ddb2800"/>
        <function-ref name="rxDone" scoped="" ref="0x7f006ddb2990"/>
        <function-ref name="txDone" scoped="" ref="0x7f006ddb2b20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f006ddb2cb0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f006ddb2e40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f006ddb1020"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f006ddb11b0"/>
        <function-ref name="tx" scoped="" ref="0x7f006ddb1340"/>
        <function-ref name="rx" scoped="" ref="0x7f006ddb14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f006ddb6020" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f006ddb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006ddb63a0"/>
        <function-ref name="stop" scoped="" ref="0x7f006ddb6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f006ddb3ad0" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f006ddb3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006ddb3e50"/>
        <function-ref name="stop" scoped="" ref="0x7f006ddb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f006dd905b0" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f006dd905b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f006dd90930"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f006dd90ac0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f006dd90c50"/>
        <function-ref name="txDone" scoped="" ref="0x7f006dd90de0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f006dd8f020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f006dd8f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f006dd8f340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f006dd8f4d0"/>
        <function-ref name="tx" scoped="" ref="0x7f006dd8f660"/>
        <function-ref name="rx" scoped="" ref="0x7f006dd8f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f006dd8edd0" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f006dd8edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f006dd8d180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f006dd8d310"/>
        <function-ref name="rxDone" scoped="" ref="0x7f006dd8d4a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f006dd8d630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f006dd8d7c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f006dd8d950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f006dd8dae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f006dd8dc70"/>
        <function-ref name="tx" scoped="" ref="0x7f006dd8de00"/>
        <function-ref name="rx" scoped="" ref="0x7f006dd8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f006dd91c90" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f006dd91c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd900a0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd90230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f006dd8fb80" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f006dd8fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd8e020"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f006dd8e540" loc="52:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f006dd8e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd8e8c0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd8ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f006dd913f0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f006dd913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd91770"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd91900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f006dd8cd80" loc="114:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f006dd8cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006dd89180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f006dd88730" loc="117:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f006dd88730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f006dd88ab0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f006dd88c40"/>
        <function-ref name="rxDone" scoped="" ref="0x7f006dd88dd0"/>
        <function-ref name="txDone" scoped="" ref="0x7f006dd87020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f006dd871b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f006dd87340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f006dd874d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f006dd87660"/>
        <function-ref name="tx" scoped="" ref="0x7f006dd877f0"/>
        <function-ref name="rx" scoped="" ref="0x7f006dd87980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f006dd87ce0" loc="119:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f006dd87ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006dd860a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f006dd85650" loc="122:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f006dd85650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f006dd859d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f006dd85b60"/>
        <function-ref name="rxDone" scoped="" ref="0x7f006dd85cf0"/>
        <function-ref name="txDone" scoped="" ref="0x7f006dd85e80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f006dd84030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f006dd841c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f006dd84350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f006dd844e0"/>
        <function-ref name="tx" scoped="" ref="0x7f006dd84670"/>
        <function-ref name="rx" scoped="" ref="0x7f006dd84800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f006dd89e30" loc="116:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f006dd89e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd881e0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd88370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f006dd86470" loc="120:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f006dd86470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd867f0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd86980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f006dd86d50" loc="121:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f006dd86d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd85100"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd85290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f006dd84b30" loc="124:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f006dd84b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f006dd83020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f006dd831b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f006dd83340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f006dd834d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f006dd83660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f006dd83980" loc="125:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f006dd83980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f006dd83d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f006dd89550" loc="115:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f006dd89550"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f006dd898d0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd89a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006dd24dd0" loc="24:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dd24dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dd21ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dd1f670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dd1f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dd1fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006dd1edf0" loc="24:/home/wtiberti/WSN/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dd1edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TThree" ref="0x7f006eef5d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dd1bca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dd1a670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dd1a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dd1ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f006dd10020" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f006dd10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f006dd103a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f006dd10530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f006dd106c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f006dd10850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f006dd109e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f006dd10b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f006dd10d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f006dd0f020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f006dd0f1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f006dd0f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f006dd0f850" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f006dd0f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f006dd0ce60"/>
        <function-ref name="test" scoped="" ref="0x7f006dd0c4e0"/>
        <function-ref name="get" scoped="" ref="0x7f006dd0e4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f006dd0d020"/>
        <function-ref name="reset" scoped="" ref="0x7f006dd0d530"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dd0c9a0"/>
        <function-ref name="set" scoped="" ref="0x7f006dd0e980"/>
        <function-ref name="start" scoped="" ref="0x7f006dd0d9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f006dd0aad0" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f006dd0aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006dd074e0"/>
        <function-ref name="fired" scoped="" ref="0x7f006dd081b0"/>
        <function-ref name="get" scoped="" ref="0x7f006dd09790"/>
        <function-ref name="reset" scoped="" ref="0x7f006dd08670"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dd079a0"/>
        <function-ref name="set" scoped="" ref="0x7f006dd09c50"/>
        <function-ref name="start" scoped="" ref="0x7f006dd08b30"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006dd19cd0" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006dd19cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006dd12090"/>
        <function-ref name="test" scoped="" ref="0x7f006dd136e0"/>
        <function-ref name="get" scoped="" ref="0x7f006dd15980"/>
        <function-ref name="setScale" scoped="" ref="0x7f006dd12550"/>
        <function-ref name="getScale" scoped="" ref="0x7f006dd12a60"/>
        <function-ref name="reset" scoped="" ref="0x7f006dd14840"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dd14380"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dd13ba0"/>
        <function-ref name="set" scoped="" ref="0x7f006dd15e40"/>
        <function-ref name="start" scoped="" ref="0x7f006dd14d00"/>
        <function-ref name="stop" scoped="" ref="0x7f006dd13220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f006dcfd2c0" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f006dcfd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f006dcfd640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f006dcfd7d0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f006dcfd960"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f006dcfdaf0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f006dcfdc80"/>
        <function-ref name="setControlB" scoped="" ref="0x7f006dcfde10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f006dcfc020"/>
        <function-ref name="getControlB" scoped="" ref="0x7f006dcfc1b0"/>
        <function-ref name="setControlC" scoped="" ref="0x7f006dcfc340"/>
        <function-ref name="setControlA" scoped="" ref="0x7f006dcfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f006dcf75a0" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f006dcf75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006dcf3020"/>
        <function-ref name="fired" scoped="" ref="0x7f006dcf6c10"/>
        <function-ref name="get" scoped="" ref="0x7f006dcf6240"/>
        <function-ref name="reset" scoped="" ref="0x7f006dcf4110"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dcf34e0"/>
        <function-ref name="set" scoped="" ref="0x7f006dcf6700"/>
        <function-ref name="start" scoped="" ref="0x7f006dcf45d0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dcf4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f006dcfc9e0" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f006dcfc9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f006dcf8e60"/>
        <function-ref name="test" scoped="" ref="0x7f006dcf84e0"/>
        <function-ref name="get" scoped="" ref="0x7f006dcfb6b0"/>
        <function-ref name="captured" scoped="" ref="0x7f006dcf90d0"/>
        <function-ref name="reset" scoped="" ref="0x7f006dcf95e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dcf89a0"/>
        <function-ref name="set" scoped="" ref="0x7f006dcfbb70"/>
        <function-ref name="start" scoped="" ref="0x7f006dcf9aa0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dcf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f006dcf3ba0" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f006dcf3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006dcef550"/>
        <function-ref name="fired" scoped="" ref="0x7f006dcf01f0"/>
        <function-ref name="get" scoped="" ref="0x7f006dcf27f0"/>
        <function-ref name="reset" scoped="" ref="0x7f006dcf06b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dcefa10"/>
        <function-ref name="set" scoped="" ref="0x7f006dcf2cb0"/>
        <function-ref name="start" scoped="" ref="0x7f006dcf0b70"/>
        <function-ref name="stop" scoped="" ref="0x7f006dcef090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f006dcee120" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f006dcee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f006dceba90"/>
        <function-ref name="fired" scoped="" ref="0x7f006dced770"/>
        <function-ref name="get" scoped="" ref="0x7f006dceed50"/>
        <function-ref name="reset" scoped="" ref="0x7f006dcedc30"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dcea020"/>
        <function-ref name="set" scoped="" ref="0x7f006dced260"/>
        <function-ref name="start" scoped="" ref="0x7f006dceb110"/>
        <function-ref name="stop" scoped="" ref="0x7f006dceb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f006dd02020" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006dd02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006dcfe350"/>
        <function-ref name="test" scoped="" ref="0x7f006dcff9a0"/>
        <function-ref name="get" scoped="" ref="0x7f006dd02c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f006dcfe810"/>
        <function-ref name="getScale" scoped="" ref="0x7f006dcfed20"/>
        <function-ref name="reset" scoped="" ref="0x7f006dd01b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dd01660"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dcffe60"/>
        <function-ref name="set" scoped="" ref="0x7f006dd01150"/>
        <function-ref name="start" scoped="" ref="0x7f006dcff020"/>
        <function-ref name="stop" scoped="" ref="0x7f006dcff4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006dc70c60" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006dc70c60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f006f0013a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f006f0013a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006dc6f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f006dc6f410" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006dc6f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006dc6b810"/>
        <function-ref name="test" scoped="" ref="0x7f006dc6ce60"/>
        <function-ref name="get" scoped="" ref="0x7f006dc6e090"/>
        <function-ref name="setScale" scoped="" ref="0x7f006dc6bcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f006dc6a260"/>
        <function-ref name="reset" scoped="" ref="0x7f006dc6c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dc6ea60"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dc6b350"/>
        <function-ref name="set" scoped="" ref="0x7f006dc6e550"/>
        <function-ref name="start" scoped="" ref="0x7f006dc6c4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f006dc6c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006dc673c0" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dc673c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TThree" ref="0x7f006eef5d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dc66240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dc66bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dc66700"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dc650d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f006dc65660" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f006dc65660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f006dc61a90"/>
        <function-ref name="test" scoped="" ref="0x7f006dc61110"/>
        <function-ref name="get" scoped="" ref="0x7f006dc643d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f006dc60020"/>
        <function-ref name="getScale" scoped="" ref="0x7f006dc60530"/>
        <function-ref name="reset" scoped="" ref="0x7f006dc622a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dc64da0"/>
        <function-ref name="isOn" scoped="" ref="0x7f006dc615d0"/>
        <function-ref name="set" scoped="" ref="0x7f006dc64890"/>
        <function-ref name="start" scoped="" ref="0x7f006dc62760"/>
        <function-ref name="stop" scoped="" ref="0x7f006dc62c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f006dc580f0" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f006dc580f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TThree" ref="0x7f006eef5d40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dc57020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dc579a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dc574e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dc57e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f006dc5ccd0" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f006dc5ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f006ef385c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f006ef38930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f006dc5bb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f006dc59550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f006dc59090"/>
        <function-ref name="overflow" scoped="" ref="0x7f006dc59a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f006dd22600" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f006dd22600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f006dd22980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f006dc4b210" loc="94:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f006dc4b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f006dc4b590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f006dc4b870" loc="95:/home/wtiberti/WSN/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x7f006dc4b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f006dc4bbf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f006eea08e0" loc="62:/home/wtiberti/WSN/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wtiberti/WSN/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f006ee9e4a0" loc="60:/home/wtiberti/WSN/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f006ee8edc0" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f006ee8eb40" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f006ee91350" loc="31:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f006ee91dd0" loc="39:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f006ee91b50" loc="39:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f006ee8f940" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f006ee8f6c0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f006ee8e270" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
      <function command="" provided="0" name="usecsRawSize" ref="0x7f006ee97cf0" loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f006ee97560" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f006ee93110" loc="128:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
        <documentation loc="119:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f006ee94e60" loc="128:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f006ee94730" loc="116:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f006ee944b0" loc="116:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f006ee954d0" loc="91:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f006ee9bd80" loc="64:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f006ee95c70" loc="92:/home/wtiberti/WSN/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f006ee6f5a0" loc="44:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f006ee6fcd0" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f006ee70760" loc="42:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f006ee6db60" loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006ee70e60" loc="43:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f006ee6d420" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006ee73980" loc="40:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f006ee70070" loc="41:/home/wtiberti/WSN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f006f5f0c40" loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f006efc7bf0" loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f006efc73e0" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f006efbe610" loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f006efbee60" loc="75:/home/wtiberti/WSN/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wtiberti/WSN/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/wtiberti/WSN/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f006eeea0e0" loc="85:/home/wtiberti/WSN/tinyos/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f006eeea820" loc="86:/home/wtiberti/WSN/tinyos/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f006eeed8b0" loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wtiberti/WSN/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wtiberti/WSN/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f006eec3420" loc="62:/home/wtiberti/WSN/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f006ef64df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wtiberti/WSN/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f006eec5540" loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f006ecb2190" loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f006ecb2940" loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f006ecb1190" loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f006ecb0120" loc="83:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f006ecaf890" loc="100:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006ecad0e0" loc="117:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f006ecb1920" loc="77:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006ecadc50" loc="134:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f006ecad9d0" loc="134:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f006ecb49d0" loc="56:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f006ecb0900" loc="89:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f006ecaf0e0" loc="94:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wtiberti/WSN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006ec24d90" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006ec24d90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f006ec1bc10" loc="136:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f006ec1f420" loc="83:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f006ec1c2b0" loc="114:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f006ec1dbd0" loc="114:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f006ec1c020" loc="114:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f006ec1d420" loc="98:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f006ec1ac60" loc="151:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f006ec1a3e0" loc="144:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f006ec1fc00" loc="92:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f006ec21970" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f006ec216f0" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f006ec1b2b0" loc="129:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f006ec1cc50" loc="129:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f006ec1b020" loc="129:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f006ec204d0" loc="73:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f006ec20250" loc="73:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006ec20cd0" loc="78:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wtiberti/WSN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f006eb79110" loc="113:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f006eb7ce40" loc="113:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f006eb77600" loc="138:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f006eb77380" loc="138:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f006eb7c460" loc="104:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006eb79960" loc="130:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wtiberti/WSN/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f006eba12a0" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eba1020" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f006eba0350" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eba00d0" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f006eb9d660" loc="126:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eb9d060" loc="126:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006eb9d390" loc="126:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f006eb9c750" loc="106:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f006eb9e7d0" loc="94:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eb9e210" loc="94:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006eb9e540" loc="94:/home/wtiberti/WSN/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f006eb872c0" loc="80:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f006ebad800" loc="80:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f006ebadb80" loc="80:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006eb87020" loc="80:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f006eb83970" loc="135:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eb83370" loc="135:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006eb836a0" loc="135:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f006eb82a60" loc="123:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f006eb86630" loc="96:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eb863b0" loc="96:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f006eb84b80" loc="110:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eb845a0" loc="110:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f006eb848f0" loc="110:/home/wtiberti/WSN/tinyos/tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wtiberti/WSN/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f006eb7e9c0" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wtiberti/WSN/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
              <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006eb7e060" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f006eb7e3b0" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006eb7e6e0" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TAKS" loc="3:../TAKS.nc">
      <function command="" provided="0" name="Decrypt" ref="0x7f006eb706a0" loc="6:../TAKS.nc">
        <interfacedef-ref qname="TAKS"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="out_plaintext" ref="0x7f006eb711e0" loc="6:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="ciphertext" ref="0x7f006eb715a0" loc="6:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f006eb718d0" loc="6:../TAKS.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
          </variable>
          <variable name="mac" ref="0x7f006eb71c40" loc="6:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="kri" ref="0x7f006eb70020" loc="6:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="node_LKC" ref="0x7f006eb703d0" loc="6:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Decrypt_pw" ref="0x7f006eb6a6a0" loc="8:../TAKS.nc">
        <interfacedef-ref qname="TAKS"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="out_plaintext" ref="0x7f006eb6c220" loc="8:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="ciphertext" ref="0x7f006eb6c5e0" loc="8:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f006eb6c910" loc="8:../TAKS.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
          </variable>
          <variable name="mac" ref="0x7f006eb6cc80" loc="8:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="kri" ref="0x7f006eb6a020" loc="8:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="node_LKC" ref="0x7f006eb6a3d0" loc="8:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Encrypt" ref="0x7f006eb72a40" loc="5:../TAKS.nc">
        <interfacedef-ref qname="TAKS"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="out_ciphertext" ref="0x7f006eb75d40" loc="5:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plaintext" ref="0x7f006eb74150" loc="5:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f006eb74480" loc="5:../TAKS.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
          </variable>
          <variable name="out_mac" ref="0x7f006eb74820" loc="5:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="out_kri" ref="0x7f006eb74bc0" loc="5:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="src_LKC" ref="0x7f006eb72020" loc="5:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dst_TKC" ref="0x7f006eb723c0" loc="5:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dst_TV" ref="0x7f006eb72750" loc="5:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ComponentFromHexString" ref="0x7f006eb75600" loc="4:../TAKS.nc">
        <interfacedef-ref qname="TAKS"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006eb75020" loc="4:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="s" ref="0x7f006eb75370" loc="4:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Encrypt_pw" ref="0x7f006eb6da90" loc="7:../TAKS.nc">
        <interfacedef-ref qname="TAKS"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="out_ciphertext" ref="0x7f006eb70e00" loc="7:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plaintext" ref="0x7f006eb6e1f0" loc="7:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f006eb6e520" loc="7:../TAKS.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x7f006f5f2960"/></typename>
            </type-int>
          </variable>
          <variable name="out_mac" ref="0x7f006eb6e8c0" loc="7:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="out_kri" ref="0x7f006eb6ec60" loc="7:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="src_LKC" ref="0x7f006eb6d060" loc="7:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="src_TKC" ref="0x7f006eb6d400" loc="7:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dst_TKC" ref="0x7f006eb6d7a0" loc="7:../TAKS.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f006eb8d040" loc="177:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb92d90" loc="177:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f006eb97be0" loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb97960" loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f006eb9a070" loc="68:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f006eb9ab30" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb9a8b0" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f006eb94600" loc="121:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb94020" loc="121:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006eb94370" loc="121:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f006eb98040" loc="103:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb95a30" loc="103:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006eb95d80" loc="103:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f006eb90ae0" loc="147:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb90860" loc="147:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f006eb8fe60" loc="162:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb8f8b0" loc="162:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f006eb8fbd0" loc="162:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f006ebbd7f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f006eb91890" loc="136:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb91610" loc="136:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f006eb8b600" loc="187:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f006eb8b020" loc="187:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f006eb8b370" loc="187:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f006eb8a490" loc="195:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wtiberti/WSN/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006eb24350" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006eb24350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f006eb24c70" loc="61:/home/wtiberti/WSN/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006eb11410" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006eb11410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f006eb11650" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb11650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f006eb10020" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb11650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f006eb0f120" loc="76:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f006eb108a0" loc="71:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f006eb0f880" loc="82:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wtiberti/WSN/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006eb1f7e0" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006eb1f7e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f006eb1fa20" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f006eb17800" loc="109:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f006eb1a630" loc="78:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f006eb19c60" loc="103:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f006eb19690" loc="103:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f006eb199d0" loc="103:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f006eb1ae10" loc="88:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f006eb16020" loc="116:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f006eb1b5b0" loc="66:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f006eb1b330" loc="66:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eb1fa20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006eb1bde0" loc="73:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wtiberti/WSN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f006eae2b20" loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f006eae38e0" loc="85:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f006eae55a0" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f006eae2350" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f006eae20d0" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f006eae3110" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f006eae4e30" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f006eae05c0" loc="90:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f006eae0340" loc="90:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f006eae5d40" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f006eae4710" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f006eae4490" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f006eacf270" loc="92:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f006ead2190" loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f006ead2910" loc="74:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f006ead1190" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f006eacfa80" loc="98:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f006ead19c0" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f006ead6e70" loc="57:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f006ef1e2c0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f006ef1e6e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f006ead38e0" loc="63:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f006ef1e2c0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f006ef1e6e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f006ead3660" loc="63:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f006ef1e2c0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f006ef1e6e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f006eae6750" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eae6750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f006ead90e0" loc="74:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f006eadc270" loc="58:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006eadd0e0" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eae6750"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f006eadc9e0" loc="62:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f006ead98a0" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006eaddaa0" loc="54:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eae6750"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f006eadd820" loc="54:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006eae6750"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f006eadb190" loc="65:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006eadb8e0" loc="68:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f006eaf3430" loc="55:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f006eaf3430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f006eaed020" loc="98:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f006eaee020" loc="87:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006eaf3d60" loc="61:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f006eaf3430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f006eaeda00" loc="104:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f006eaed780" loc="104:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f006eaec270" loc="110:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f006eaf17b0" loc="75:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f006eaf1020" loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f006eaee7e0" loc="93:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006eaf2760" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f006eaf3430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f006eaf24e0" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f006eaf3430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f006eaef020" loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006eaef770" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:/home/wtiberti/WSN/tinyos/tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f006e9c24d0" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="int32_t" ref="0x7f006f5e3b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f006e9c2250" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="int32_t" ref="0x7f006f5e3b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wtiberti/WSN/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f006e9302b0" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f006e933be0" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f006e930020" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f006e923830" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e923210" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f006e9235a0" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f006e9219c0" loc="71:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e921740" loc="71:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f006e9249e0" loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f006e924020" loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f006e92ed50" loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f006e92b940" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e92b6c0" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f006e928b90" loc="71:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e928910" loc="71:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f006e927d10" loc="85:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e927a90" loc="85:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f006e91ad90" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e91ab10" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f006e92cd20" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e92c700" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f006e92ca90" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f006e91ed60" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e91eae0" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f006e91e2b0" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e91db10" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f006e91e020" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f006e919db0" loc="71:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e919b30" loc="71:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="setChannelDone" ref="0x7f006e916ab0" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f006e9162a0" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f006e916020" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f006e915350" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f006e920510" loc="35:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006e920510"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f006e920750" loc="35:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e920750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f006e9125f0" loc="63:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e920750"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e912370" loc="63:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f006e910780" loc="70:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e910500" loc="70:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f006e913350" loc="49:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e9130d0" loc="49:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006e90fa90" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e920750"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e90f4a0" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f006e90f800" loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e920750"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f006e8fa8b0" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f006e8fa8b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f006e8f6a90" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8f6810" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006e8f6020" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f006e8fa8b0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8f7c90" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f006e8f7490" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8f7210" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006e8f4810" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f006e8fa8b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8f4210" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f006e8f4580" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f006e8fa8b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wtiberti/WSN/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f006e8ebb00" loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8eb880" loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f006e8c9120" loc="120:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f006e8ca120" loc="97:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f006e8cc770" loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f006e8ca910" loc="102:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f006e8c9b70" loc="128:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wtiberti/WSN/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f006e8c4110" loc="41:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8c6e30" loc="41:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f006e8cdc70" loc="37:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f006e8c66c0" loc="39:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8c6440" loc="39:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f006e8c3ba0" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8c3580" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006e8c3910" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f006e8c4e50" loc="43:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8c4830" loc="43:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006e8c4bc0" loc="43:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f006e8c0020" loc="49:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f006ebce210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8c2ca0" loc="49:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f006e8c0d00" loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f006ebce210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8c06f0" loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f006e8c0a70" loc="51:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f006ebce210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f006e8c2550" loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8c22d0" loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f006e8bf4c0" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f006ebce210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f006e8d3460" loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f006e8d6ab0" loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f006e8d6e30" loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006e8d31c0" loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f006e8cfab0" loc="122:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8cf4b0" loc="122:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006e8cf7e0" loc="122:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f006e8d0bf0" loc="110:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f006e8d22a0" loc="83:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8d2020" loc="83:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f006e8d02b0" loc="97:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8d2c40" loc="97:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f006e8d0020" loc="97:/home/wtiberti/WSN/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f006e8a0190" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f006e8a0aa0" loc="72:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f006e89f460" loc="79:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f006e8a49c0" loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f006e8882a0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f006e888020" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f006e888a80" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006e892e60" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f006e892be0" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006e88a810" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f006e88a590" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f006e890d60" loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f006e890ae0" loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f006e88d3f0" loc="72:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="65:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f006e88d170" loc="72:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f006e88e970" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f006e88e6f0" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f006e88c020" loc="81:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="74:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f006e88dc60" loc="81:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f006e8902a0" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f006e890020" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f006e82a570" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f006e83e720" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e83e4a0" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f006e82e030" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e82fd80" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f006e82c770" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e82c4f0" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f006e8307a0" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e830520" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f006e831020" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e83cd00" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f006e82f600" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e82f020" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006e82f370" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f006e831d60" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e831780" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006e831ad0" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f006e82ed40" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e82e760" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f006e82eab0" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f006e8385e0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f006e836020" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f006e8342e0" loc="65:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e834060" loc="65:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f006e836b30" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8368b0" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f006e835680" loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e835400" loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f006e80a850" loc="60:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f006e80b910" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f006ebd0180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f006e80b690" loc="50:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f006ebd0180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f006e80a0e0" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f006e80ee30" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f006e8080e0" loc="65:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f006ebd0180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f006e803a10" loc="66:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e803790" loc="66:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f006e806860" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8065e0" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f006e803020" loc="61:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f006e8056b0" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8050d0" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f006e805420" loc="56:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f006e80dcd0" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e80da50" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f006e851bb0" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f006e851390" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e851110" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f006e8504e0" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f006e84f0b0" loc="59:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e850de0" loc="59:/home/wtiberti/WSN/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f006e83f020" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e84ec90" loc="41:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f006e846020" loc="86:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f006e847760" loc="80:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e847150" loc="80:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f006e8474d0" loc="80:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f006e84b2a0" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e84b020" loc="55:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f006e84bdb0" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e84bb30" loc="62:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f006e84ad40" loc="69:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e84a730" loc="69:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f006e84aab0" loc="69:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f006e853940" loc="43:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f006e84d7b0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e84d210" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f006e84d520" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f006e8498e0" loc="75:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e849660" loc="75:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f006e81ad20" loc="131:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e81aaa0" loc="131:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f006e81b3d0" loc="120:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e81b150" loc="120:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f006e827c40" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e827670" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f006e8279b0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f006e824d90" loc="75:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e824b10" loc="75:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f006e814bd0" loc="156:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8145f0" loc="156:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006e814940" loc="156:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f006e8242a0" loc="69:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e824020" loc="69:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f006e81a2b0" loc="125:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e81bc30" loc="125:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f006e81a020" loc="125:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f006e8217d0" loc="88:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e8211c0" loc="88:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f006e821540" loc="88:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f006e816e20" loc="151:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e816ba0" loc="151:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f006e825730" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8254b0" loc="63:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f006e81f2a0" loc="99:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e81f020" loc="99:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f006e8206e0" loc="94:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e8200d0" loc="94:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f006e820450" loc="94:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f006e810390" loc="178:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f006ebce630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f006e813680" loc="162:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e813400" loc="162:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f006e812b70" loc="173:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f006ebce210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f006e8163a0" loc="146:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e817d90" loc="146:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f006e816110" loc="146:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f006e823910" loc="81:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e823690" loc="81:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f006e81c940" loc="115:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e81c370" loc="115:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f006e81c6b0" loc="115:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f006e818b00" loc="136:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e818530" loc="136:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f006e818870" loc="136:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f006e810dc0" loc="185:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e810b40" loc="185:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f006e81d030" loc="105:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e81fa60" loc="105:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f006e81fd70" loc="105:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f006e833e50" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e833bd0" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f006e8122a0" loc="168:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e812020" loc="168:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f006e8175f0" loc="141:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e817370" loc="141:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f006e81db30" loc="110:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e81d8b0" loc="110:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f006e842b90" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e8425b0" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f006e842900" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f006e8413b0" loc="58:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f006e8442e0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e844060" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f006e844d70" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e844af0" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f006e83b930" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e83b6b0" loc="46:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f006e840d90" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e840b10" loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f006e83a1f0" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f006e83acc0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e83aa40" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f006e76b5f0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e76b370" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f006e7682a0" loc="67:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e768020" loc="67:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f006e76a600" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e76a020" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f006e76a370" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f006e76dd20" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
              <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e76da60" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f006e756e40" loc="50:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f006e755dc0" loc="60:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f006e755660" loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f006e756600" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f006e756020" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f006ebbdbd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f006e756370" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f006ebbb020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f006e6b2a70" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f006e6af3e0" loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f006e6abbb0" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f006e6ab390" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wtiberti/WSN/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wtiberti/WSN/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f006e6ad270" loc="90:/home/wtiberti/WSN/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wtiberti/WSN/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f006e6adad0" loc="98:/home/wtiberti/WSN/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wtiberti/WSN/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f006e6a1c10" loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f006e6accc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f006e6a1990" loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f006e6accc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f006e6a5c60" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f006e6a27a0" loc="62:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f006e6accc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f006e6a2520" loc="62:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f006e6accc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f006e6a10e0" loc="70:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wtiberti/WSN/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f006e6accc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f006e53ec80" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
              <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e53e9c0" loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f006e53e020" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e541c50" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="turnOff" ref="0x7f006e4d3ac0" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f006e4d0bf0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f006e4ce6a0" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f006e4ce420" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f006e4cee60" loc="70:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f006e4d0390" loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f006e4cd740" loc="75:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="72:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f006e4ca510" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e4ca290" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f006e4c9980" loc="64:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f006e4c9110" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="51:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f006e4cae50" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wtiberti/WSN/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f006e453020" loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f006e454690" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wtiberti/WSN/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f006f5e2170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f006e428e40" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f006e428e40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f006e4259a0" loc="64:/home/wtiberti/WSN/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f006e428e40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f006e425720" loc="64:/home/wtiberti/WSN/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f006e428e40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="37:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f006e3fd0b0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="54:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e3ffdb0" loc="57:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006e403e70" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e403bf0" loc="42:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f006e400c20" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="44:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e400660" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f006e400990" loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006e3ff650" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="49:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006e3ff3d0" loc="52:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="38:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="done" ref="0x7f006e3cc4e0" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="47:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f006e3cc260" loc="53:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f006e3cf9d0" loc="45:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f006e2d3530" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f006e2d3530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f006e2d3770" loc="59:/home/wtiberti/WSN/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e2d3770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f006e2d22e0" loc="66:/home/wtiberti/WSN/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wtiberti/WSN/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e2d3770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f006e2d2060" loc="66:/home/wtiberti/WSN/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e2d3770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f006e2d6c80" loc="54:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f006e2d5e00" loc="66:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f006e2d5650" loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f006e2d53d0" loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f006e2d6420" loc="53:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wtiberti/WSN/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f006e2dd4d0" loc="62:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e2dd250" loc="62:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f006e2dc8a0" loc="74:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e2dc620" loc="74:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f006e2ddd40" loc="68:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f006e2db390" loc="81:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e2db110" loc="81:/home/wtiberti/WSN/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f006e1e8360" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e1e8360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f006e1e02a0" loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f006e1e0020" loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f006e1e1020" loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f006e1e8ca0" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e1e8360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f006e1e4110" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e1e8360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f006e1e5e10" loc="60:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e1e8360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f006e1e48c0" loc="64:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f006e1e17e0" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f006e1e5670" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e1e8360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f006e1e53f0" loc="53:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f006e1e8360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f006e1e3070" loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006e1e37c0" loc="70:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/wtiberti/WSN/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f006e1c63b0" loc="76:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f006e1c7a00" loc="76:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f006e1c7d90" loc="76:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006e1c6110" loc="76:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f006e1c5980" loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f006e1c3bd0" loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f006e1c5020" loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006e1c5360" loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f006e1c56d0" loc="89:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f006e1c94c0" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f006e1c9240" loc="45:/home/wtiberti/WSN/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f006e1ae1f0" loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f006e1a4070" loc="126:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f006e1a9a00" loc="117:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f006e1a4a90" loc="128:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f006e1a4810" loc="128:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f006e1afa10" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f006e1a75c0" loc="122:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f006e1a7340" loc="122:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f006e1aa0b0" loc="113:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f006e1acdd0" loc="113:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f006e1ad190" loc="97:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f006e19f4e0" loc="141:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f006e19f260" loc="141:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f006e1aa850" loc="114:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f006e1a3c10" loc="131:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f006e1a3990" loc="131:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f006e1a2b70" loc="136:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f006e1a58a0" loc="125:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f006e1a5620" loc="125:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f006e1a0b10" loc="140:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f006e1a83f0" loc="119:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f006e1a8170" loc="119:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f006e1adb70" loc="103:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e1ad8f0" loc="103:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f006e1a92a0" loc="116:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f006e1a9020" loc="116:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f006e1a7e30" loc="123:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f006e1a3270" loc="129:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f006e1a2390" loc="132:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f006e1a0350" loc="138:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f006e1a8b70" loc="120:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f006e1ae980" loc="89:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f006e1ac5b0" loc="109:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006e1ac330" loc="109:/home/wtiberti/WSN/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wtiberti/WSN/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f006e150190" loc="95:/home/wtiberti/WSN/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006e1509e0" loc="105:/home/wtiberti/WSN/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wtiberti/WSN/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f006e0eda20" loc="81:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f006e0e9020" loc="87:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f006e0f0ad0" loc="79:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f006e0e8270" loc="91:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f006e0e9a10" loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f006e0e9790" loc="88:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f006e0ebd80" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f006e0ebb00" loc="83:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f006e0e8c70" loc="92:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f006e0e89f0" loc="92:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f006e0ed2b0" loc="80:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f006e0ea750" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f006e0ea4d0" loc="84:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f006e0eb3e0" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f006e0eb160" loc="82:/home/wtiberti/WSN/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wtiberti/WSN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f006df2e5e0" loc="75:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006df2e020" loc="75:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006df2e350" loc="75:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f006df29bb0" loc="125:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006df295b0" loc="125:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006df298e0" loc="125:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f006df2cd20" loc="112:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f006df2b900" loc="89:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006df2b680" loc="89:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f006df2ae00" loc="100:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f006df2a820" loc="100:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:100" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f006eba4160"/>
                <typename><typedef-ref name="message_t" ref="0x7f006eba37f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f006df2ab70" loc="100:/home/wtiberti/WSN/tinyos/tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:/home/wtiberti/WSN/tinyos/tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f006df0a350" loc="9:/home/wtiberti/WSN/tinyos/tos/interfaces/SendBusy.nc">
        <documentation loc="3:/home/wtiberti/WSN/tinyos/tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wtiberti/WSN/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f006de27980" loc="95:/home/wtiberti/WSN/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wtiberti/WSN/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f006de261f0" loc="105:/home/wtiberti/WSN/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wtiberti/WSN/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wtiberti/WSN/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f006de22bc0" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wtiberti/WSN/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f006de22940" loc="49:/home/wtiberti/WSN/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f006de24b80" loc="50:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f006de24900" loc="50:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f006de21420" loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f006de1f2f0" loc="69:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f006de21cd0" loc="69:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f006de1f060" loc="69:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f006de1e120" loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/wtiberti/WSN/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f006de0e990" loc="48:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f006de0e3c0" loc="48:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006de0e700" loc="48:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f006de09610" loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f006de09390" loc="79:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f006de08400" loc="90:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f006de09e10" loc="90:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006de08170" loc="90:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f006de0b2b0" loc="65:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f006de07cd0" loc="99:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f006de073a0" loc="99:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006de076e0" loc="99:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f006de07a30" loc="99:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f006de0bba0" loc="72:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f006de0d2c0" loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f006de0c910" loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f006de0cc50" loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f006f5e3610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f006de0d020" loc="57:/home/wtiberti/WSN/tinyos/tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
              <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f006ddf2bf0" loc="44:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f006ddf3cc0" loc="42:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f006ddee450" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006ddee1d0" loc="49:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f006ddef390" loc="47:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f006ddf6d50" loc="40:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f006ddf3540" loc="41:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f006ddf24b0" loc="43:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="__nesc_unnamed4242" ref="0x7f006f03bda0"/>
            <typename><typedef-ref name="error_t" ref="0x7f006efc1020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f006ddf0350" loc="45:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f006f004b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f006ddf0c80" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f006ddf0a00" loc="46:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f006ddefab0" loc="48:/home/wtiberti/WSN/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f006f5e4ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
